Repository Name,Repository Info,generated_response,llm_response_pretty_json,truth_data,somef_response,complete_somef
https://github.com/NNPDF/nnpdf,"<div align=""center""> <img src=""doc/sphinx/source/_static/LogoNNPDF.png"" height=100> </div> ![Build status](https://github.com/NNPDF/nnpdf/actions/workflows/tests.yml/badge.svg) [![DOI](https://zenodo.org/badge/118135201.svg)](https://zenodo.org/badge/latestdoi/118135201) # NNPDF: An open-source machine learning framework for global analyses of parton distributions [The NNPDF collaboration](http://nnpdf.science) determines the structure of the proton using Machine Learning methods. This is the main repository of the fitting and analysis frameworks. In particular it contains all the necessary tools to [reproduce](https://docs.nnpdf.science/tutorials/reproduce.html) the [NNPDF4.0 PDF determinations](https://arxiv.org/abs/2109.02653). ## Documentation The documentation is available at <https://docs.nnpdf.science/> ## Install See the [NNPDF installation guide](https://docs.nnpdf.science/get-started/installation.html) for instructions on how to install and use the code. As a first step we recommend to follow one of the [tutorials](https://docs.nnpdf.science/tutorials/run-fit.html). We follow a rolling development model where the tip of the master branch is expected to be stable, tested and correct. For more information see our [releases and compatibility policy](https://docs.nnpdf.science/releases.html). ## Cite This code is described in the following [paper](https://inspirehep.net/literature?sort=mostrecent&size=25&page=1&q=find%20eprint%202109.02671): ``` @article{NNPDF:2021uiq, author = ""Ball, Richard D. and others"", collaboration = ""NNPDF"", title = ""{An open-source machine learning framework for global analyses of parton distributions}"", eprint = ""2109.02671"", archivePrefix = ""arXiv"", primaryClass = ""hep-ph"", reportNumber = ""Edinburgh 2021/13, Nikhef-2021-020, TIF-UNIMI-2021-12"", doi = ""10.1140/epjc/s10052-021-09747-9"", journal = ""Eur. Phys. J. C"", volume = ""81"", number = ""10"", pages = ""958"", year = ""2021"" } ``` If you use the code to produce new results in a scientific publication, please follow the [Citation Policy](https://docs.nnpdf.science/get-started/cite.html), particularly in regards to the papers relevant for QCD NNLO and EW NLO calculations incorporated in the NNPDF dataset. ## Contribute We welcome bug reports or feature requests sent to the [issue tracker](https://github.com/NNPDF/nnpdf/issues). You may use the issue tracker for help and questions as well. If you would like contribute to the code, please follow the [Contribution Guidelines](https://docs.nnpdf.science/contributing/index.html). [build-system] requires = [""poetry-core>=1.0.0"", ""poetry-dynamic-versioning>=1.1.0""] build-backend = ""poetry_dynamic_versioning.backend"" [tool.poetry] name = ""nnpdf"" version = ""0.0.0"" description = ""An open-source machine learning framework for global analyses of parton distributions."" readme = ""README.md"" authors = [ ""NNPDF Collaboration"" ] classifiers = [ ""Programming Language :: Python"", ""Programming Language :: Python :: 3"", ""Topic :: Scientific/Engineering"", ""Topic :: Scientific/Engineering :: Physics"", ""License :: OSI Approved :: GNU General Public License v3 (GPLv3)"", ] license = ""GPL-3.0-or-later"" repository = ""https://github.com/NNPDF/nnpdf"" # Packages installed together within the nnpdf metapackage packages = [ { include = ""n3fit"", from = ""n3fit/src"" }, { include = ""evolven3fit"", from = ""n3fit/src"" }, { include = ""validphys"", from = ""validphys2/src"" }, { include = ""nnpdf_data"", from = ""nnpdf_data""}, ] # Data files include = [ # The default profile is included together with the validphys package { path =""validphys2/src/validphys/nnprofile_default.yaml"",format = [""sdist"", ""wheel""] }, # The version file is ignored by git so it needs to be explicitly included { path =""validphys2/src/validphys/_version.py"", format = [""sdist"", ""wheel""] }, { path =""nnpdf_data/nnpdf_data/_version.py"", format = [""sdist"", ""wheel""] } ] [tool.poetry.scripts] n3fit = ""n3fit.scripts.n3fit_exec:main"" validphys = ""validphys.scripts.main:main"" # Fitting scripts evolven3fit = ""n3fit.scripts.evolven3fit:main"" # Keep the `new` suffix so people's scripts don't break evolven3fit_new = ""n3fit.scripts.evolven3fit:evolven3fit_new"" vp-setupfit = ""n3fit.scripts.vp_setupfit:main"" postfit = ""validphys.scripts.postfit:main"" # validphys helpers and scripts vp-upload = ""validphys.scripts.vp_upload:main"" wiki-upload = ""validphys.scripts.wiki_upload:main"" vp-get = ""validphys.scripts.vp_get:main"" vp-comparefits = ""validphys.scripts.vp_comparefits:main"" vp-fitrename = ""validphys.scripts.vp_fitrename:main"" vp-checktheory = ""validphys.scripts.vp_checktheory:main"" vp-pdfrename = ""validphys.scripts.vp_pdfrename:main"" vp-pdffromreplicas = ""validphys.scripts.vp_pdffromreplicas:main"" vp-list = ""validphys.scripts.vp_list:main"" vp-nextfitruncard = ""validphys.scripts.vp_nextfitruncard:main"" vp-hyperoptplot = ""validphys.scripts.vp_hyperoptplot:main"" vp-deltachi2 = ""validphys.scripts.vp_deltachi2:main"" [tool.poetry.dependencies] # Generic dependencies (i.e., validphys) python = ""^3.9"" matplotlib = ""^3.9"" pineappl = ""^0.8.2"" pandas = ""*"" numpy = ""*"" ""ruamel.yaml"" = ""*"" validobj = ""*"" prompt_toolkit = ""*"" reportengine = "">=0.32"" # Fit psutil = ""*"" tensorflow = ""*"" keras = ""^3.1"" eko = ""^0.14.1"" joblib = ""*"" # Hyperopt hyperopt = ""*"" seaborn = ""*"" # LHAPDF installation for debugging purposes # a3b2bbc3ced97675ac3a71df45f55ba = ""*"" # Optional dependencies # tests pytest = {version = ""*"", optional = true} pytest-mpl = {version = ""*"", optional = true} pytest-cov = {version = "">=6"", optional = true} hypothesis = {version = ""*"", optional = true} # docs sphinxcontrib-bibtex = {version = ""*"", optional = true} sphinx_rtd_theme = {version = ""*"", optional = true} sphinx = {version = ""^5.0"", optional = true} tabulate = {version = ""*"", optional = true} # qed fiatlux = {version = ""*"", optional = true} # without lhapdf pdfflow = {version = ""^1.2.1"", optional = true} lhapdf-management = {version = ""^0.5"", optional = true} # torch torch = {version = ""*"", optional = true} # parallel hyperopt pymongo = {version = ""<4"", optional = true} # Optional dependencies [tool.poetry.extras] tests = [""pytest"", ""pytest-mpl"", ""hypothesis"", ""pytest-cov""] docs = [""sphinxcontrib-bibtex"", ""sphinx-rtd-theme"", ""sphinx"", ""tabulate""] qed = [""fiatlux""] nolha = [""pdfflow"", ""lhapdf-management""] torch = [""torch""] parallelhyperopt = [""pymongo""] [tool.poetry-dynamic-versioning] enable = true vcs = ""git"" stype = ""semver"" dirty = true pattern = ""default-unprefixed"" # we don't use v in the tags ignore-untracked = true [tool.poetry-dynamic-versioning.files.""validphys2/src/validphys/_version.py""] persistent-substitution = true initial-content = """""" __version__ = ""0.0.0"" """""" # When installed toghether, make sure the validphs and nnpdf_data versions are written at the same time [tool.poetry-dynamic-versioning.files.""nnpdf_data/nnpdf_data/_version.py""] persistent-substitution = true initial-content = """""" __version__ = ""0.0.0"" """""" [tool.poetry-dynamic-versioning.substitution] files = [""validphys2/src/validphys/_version.py"", ""nnpdf_data/nnpdf_data/_version.py""] [tool.black] line-length = 100 skip-string-normalization = true skip-magic-trailing-comma = true [tool.isort] atomic = true line_length = 100 profile = ""black"" # https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#custom-configuration skip_gitignore = true known_first_party = [""validphys"", ""eko"", ""n3fit"", ""nnpdf_data"", ""reportengine""] force_sort_within_sections = true [tool.pytest.ini_options] addopts = ""--disable-warnings"" [tool.coverage.run] omit = [ ""*/local*"", ""*/rule*"", ""deprecated_functions.py"", ""*/nnpdf_data/commondata/*"", ""*/nnpdf_data/filter_utils/*"", ""*test_*.py"" ] [tool.coverage.paths] cipaths = [ # In order to combine files from both the ubuntu and macos runners ""./"", # CI working directory ""/Users/runner/work/nnpdf/nnpdf"", ""/home/runner/work/nnpdf/nnpdf"" ] GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this License. Each licensee is addressed as ""you"". ""Licensees"" and ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work. A ""covered work"" means either the unmodified Program or a work based on the Program. To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work for making modifications to it. ""Object code"" means any non-source form of a work. A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to ""keep intact all notices"". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's ""contributor version"". A contributor's ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: <program> Copyright (C) <year> <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an ""about box"". You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <https://www.gnu.org/licenses/>. The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read <https://www.gnu.org/licenses/why-not-lgpl.html>.","{
    ""softwareRequirements"": [
        ""python: ^3.9"",
        ""matplotlib: ^3.9"",
        ""pineappl: ^0.8.2"",
        ""pandas: *"",
        ""numpy: *"",
        ""ruamel.yaml: *"",
        ""validobj: *"",
        ""prompt_toolkit: *"",
        ""reportengine: >=0.32"",
        ""psutil: *"",
        ""tensorflow: *"",
        ""keras: ^3.1"",
        ""eko: ^0.14.1"",
        ""joblib: *"",
        ""hyperopt: *"",
        ""seaborn: *"",
        ""pytest: *"",
        ""pytest-mpl: *"",
        ""pytest-cov: >=6"",
        ""hypothesis: *"",
        ""sphinxcontrib-bibtex: *"",
        ""sphinx_rtd_theme: *"",
        ""sphinx: ^5.0"",
        ""tabulate: *"",
        ""fiatlux: *"",
        ""pdfflow: ^1.2.1"",
        ""lhapdf-management: ^0.5"",
        ""torch: *"",
        ""pymongo: <4""
    ],
    ""buildInstructions"": ""See the NNPDF installation guide at https://docs.nnpdf.science/get-started/installation.html for instructions on how to install and use the code. As a first step, we recommend following one of the tutorials at https://docs.nnpdf.science/tutorials/run-fit.html. The tip of the master branch is expected to be stable, tested, and correct. For more information, see the releases and compatibility policy at https://docs.nnpdf.science/releases.html."",
    ""author"": [
        {
            ""name"": ""NNPDF Collaboration""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.1140/epjc/s10052-021-09747-9"",
    ""license"": ""GNU General Public License v3 (GPLv3)"",
    ""keywords"": [
        ""Machine Learning"",
        ""Parton Distributions"",
        ""Global Analysis"",
        ""QCD"",
        ""EW NLO"",
        ""NNLO"",
        ""PDFs""
    ]
}","{
    ""softwareRequirements"": [
        ""python: ^3.9"",
        ""matplotlib: ^3.9"",
        ""pineappl: ^0.8.2"",
        ""pandas: *"",
        ""numpy: *"",
        ""ruamel.yaml: *"",
        ""validobj: *"",
        ""prompt_toolkit: *"",
        ""reportengine: >=0.32"",
        ""psutil: *"",
        ""tensorflow: *"",
        ""keras: ^3.1"",
        ""eko: ^0.14.1"",
        ""joblib: *"",
        ""hyperopt: *"",
        ""seaborn: *"",
        ""pytest: *"",
        ""pytest-mpl: *"",
        ""pytest-cov: >=6"",
        ""hypothesis: *"",
        ""sphinxcontrib-bibtex: *"",
        ""sphinx_rtd_theme: *"",
        ""sphinx: ^5.0"",
        ""tabulate: *"",
        ""fiatlux: *"",
        ""pdfflow: ^1.2.1"",
        ""lhapdf-management: ^0.5"",
        ""torch: *"",
        ""pymongo: <4""
    ],
    ""buildInstructions"": ""See the NNPDF installation guide at https://docs.nnpdf.science/get-started/installation.html for instructions on how to install and use the code. As a first step, we recommend following one of the tutorials at https://docs.nnpdf.science/tutorials/run-fit.html. The tip of the master branch is expected to be stable, tested, and correct. For more information, see the releases and compatibility policy at https://docs.nnpdf.science/releases.html."",
    ""author"": [
        {
            ""name"": ""NNPDF Collaboration""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.1140/epjc/s10052-021-09747-9"",
    ""license"": ""GNU General Public License v3 (GPLv3)"",
    ""keywords"": [
        ""Machine Learning"",
        ""Parton Distributions"",
        ""Global Analysis"",
        ""QCD"",
        ""EW NLO"",
        ""NNLO"",
        ""PDFs""
    ]
}","{
    ""softwareRequirements"": [
        ""python: ^3.9"",
        ""matplotlib: ^3.9"",
        ""pineappl: ^0.8.2"",
        ""pandas: *"",
        ""numpy: *"",
        ""ruamel.yaml: *"",
        ""validobj: *"",
        ""prompt_toolkit: *"",
        ""reportengine: >=0.32"",
        ""psutil: *"",
        ""tensorflow: *"",
        ""keras: ^3.1"",
        ""eko: ^0.14.1"",
        ""joblib: *"",
        ""hyperopt: *"",
        ""seaborn: *"",
        ""pytest: *"",
        ""pytest-mpl: *"",
        ""pytest-cov: >=6"",
        ""hypothesis: *"",
        ""sphinxcontrib-bibtex: *"",
        ""sphinx_rtd_theme: *"",
        ""sphinx: ^5.0"",
        ""tabulate: *"",
        ""fiatlux: *"",
        ""pdfflow: ^1.2.1"",
        ""lhapdf-management: ^0.5"",
        ""torch: *"",
        ""pymongo: <4""
    ],
    ""buildInstructions"": ""See the NNPDF installation guide for instructions on how to install and use the code. As a first step we recommend to follow one of the tutorials. We follow a rolling development model where the tip of the master branch is expected to be stable, tested and correct. For more information see our releases and compatibility policy."",
    ""author"": [
        ""NNPDF Collaboration"",
        ""Ball, Richard D. and others""
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.1140/epjc/s10052-021-09747-9"",
    ""license"": ""GNU GENERAL PUBLIC LICENSE V3"",
    ""keywords"": []
}","{
   ""Installation_Instructions"":[
      ""https://raw.githubusercontent.com/NNPDF/nnpdf/master/README.md""
   ],
   ""Authors"":[
      {
         ""@type"":""Organization"",
         ""@id"":""https://github.com/NNPDF""
      }
   ],
   ""DOI"":""https://zenodo.org/badge/latestdoi/118135201"",
   ""License"":{
      ""name"":""GNU General Public License v3.0"",
      ""url"":""https://raw.githubusercontent.com/NNPDF/nnpdf/master/LICENSE""
   },
   ""Keywords"":""hep, hep-ph, lhc, particle-physics, parton-distribution-functions, physics, quantum-chromodynamics"",
}","{
   ""@context"":""https://doi.org/10.5063/schema/codemeta-2.0"",
   ""@type"":""SoftwareSourceCode"",
   ""license"":{
      ""name"":""GNU General Public License v3.0"",
      ""url"":""https://raw.githubusercontent.com/NNPDF/nnpdf/master/LICENSE""
   },
   ""codeRepository"":""https://github.com/NNPDF/nnpdf"",
   ""issueTracker"":""https://github.com/NNPDF/nnpdf/issues"",
   ""dateCreated"":""2018-01-19"",
   ""dateModified"":""2025-03-14"",
   ""downloadUrl"":""https://github.com/NNPDF/nnpdf/releases"",
   ""name"":""nnpdf"",
   ""logo"":""https://raw.githubusercontent.com/NNPDF/nnpdf/master/doc/sphinx/source/_static/LogoNNPDF.png"",
   ""keywords"":""hep, hep-ph, lhc, particle-physics, parton-distribution-functions, physics, quantum-chromodynamics"",
   ""programmingLanguage"":[
      ""Python"",
      ""Jupyter Notebook"",
      ""C"",
      ""CSS"",
      ""TeX"",
      ""HTML"",
      ""Shell"",
      ""Makefile""
   ],
   ""buildInstructions"":[
      ""https://raw.githubusercontent.com/NNPDF/nnpdf/master/README.md""
   ],
   ""author"":[
      {
         ""@type"":""Organization"",
         ""@id"":""https://github.com/NNPDF""
      }
   ],
   ""citation"":[
      ""10.1140/epjc/s10052-021-09747-9""
   ],
   ""identifier"":""https://zenodo.org/badge/latestdoi/118135201"",
   ""readme"":""https://raw.githubusercontent.com/NNPDF/nnpdf/master/README.md"",
   ""description"":[
      ""An open-source machine learning framework for global analyses of parton distributions."",
      ""[The NNPDF collaboration](http://nnpdf.science) determines the structure of the\nproton using Machine Learning methods. This is the main repository of the\nfitting and analysis frameworks. In particular it contains all the necessary\ntools to [reproduce](https://docs.nnpdf.science/tutorials/reproduce.html) the\n[NNPDF4.0 PDF determinations](https://arxiv.org/abs/2109.02653).\n \n""
   ]
}"
https://github.com/FormingWorlds/PROTEUS,"[![Tests for PROTEUS](https://github.com/FormingWorlds/PROTEUS/actions/workflows/tests.yaml/badge.svg)](https://github.com/FormingWorlds/PROTEUS/actions/workflows/tests.yaml) ![Coverage](https://gist.githubusercontent.com/stefsmeets/b4ee7dab92e20644bcb3a5ad09f71165/raw/covbadge.svg) [![Documentation Status](https://readthedocs.org/projects/fwl-proteus/badge/?version=latest)](https://fwl-proteus.readthedocs.io/en/latest/?badge=latest) [![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)](https://opensource.org/licenses/Apache-2.0) ![PROTEUS banner](https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/docs/assets/PROTEUS_white.png#gh-light-mode-only) ![PROTEUS banner](https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/docs/assets/PROTEUS_black.png#gh-dark-mode-only) # PROTEUS Framework for Planetary Evolution **PROTEUS** is a modular Python framework that simulates the coupled evolution of the atmospheres and interiors of rocky planets. ## Installation instructions See the [installation guide](https://fwl-proteus.readthedocs.io/en/latest/installation/) for steps and troubleshooting advice. ## Run instructions Only attempt to run PROTEUS after you have followed all of the installation instructions. See the [usage guide](https://fwl-proteus.readthedocs.io/en/latest/usage/) for more information. ## Contributors | Name | Email address | | - | - | Tim Lichtenberg | tim.lichtenberg[at]rug.nl | Harrison Nicholls | harrison.nicholls[at]physics.ox.ac.uk | Laurent Soucasse | l.soucasse[at]esciencecenter.nl | Stef Smeets | s.smeets[at]esciencecenter.nl | Dan J. Bower | dbower[at]ethz.ch | Mariana Sastre | m.c.villamil.sastre[at]rug.nl | Emma Postolec | e.n.postolec[at]rug.nl | Mark Hammond | mark.hammond[at]physics.ox.ac.uk | Raymond Pierrehumbert | raymond.pierrehumbert[at]physics.ox.ac.uk | ## Repository structure | Object | Description | | - | - | | `README.md` | Overview file | | `pyproject.toml` | Project configuration file | | `CODE_OF_CONDUCT.md` | Project code of conduct | | `LICENSE.txt` | Project license | | `src/proteus` | Source code for PROTEUS | | `output/` | Output folder with subfolders for each model run | | `input/` | Example configuration files for running the model | | `docs/` | Documentation source files | | `examples/` | Example cases that the model should be able to reproduce | ## Citation If you make use of PROTEUS, please reference the following manuscripts, and state the code version used. ``` @ARTICLE{Nicholls2024MNRAS, author = {{Nicholls}, Harrison and {Pierrehumbert}, Raymond T. and {Lichtenberg}, Tim and {Soucasse}, Laurent and {Smeets}, Stef}, title = ""{Convective shutdown in the atmospheres of lava worlds}"", journal = {Monthly Notices of the Royal Astronomical Society}, year = 2025, month = jan, volume = {536}, number = {3}, pages = {2957-2971}, doi = {10.1093/mnras/stae2772}, } @ARTICLE{Nicholls2024JGRP, author = {{Nicholls}, Harrison and {Lichtenberg}, Tim and {Bower}, Dan J. and {Pierrehumbert}, Raymond}, title = ""{Magma Ocean Evolution at Arbitrary Redox State}"", journal = {Journal of Geophysical Research (Planets)}, year = 2024, month = dec, volume = {129}, number = {12}, pages = {2024JE008576}, doi = {10.1029/2024JE008576}, } @ARTICLE{Lichtenberg2021JGRP, author = {{Lichtenberg}, Tim and {Bower}, Dan J. and {Hammond}, Mark and {Boukrouche}, Ryan and {Sanan}, Patrick and {Tsai}, Shang-Min and {Pierrehumbert}, Raymond T.}, title = ""{Vertically Resolved Magma Ocean-Protoatmosphere Evolution: H$_{2}$, H$_{2}$O, CO$_{2}$, CH$_{4}$, CO, O$_{2}$, and N$_{2}$ as Primary Absorbers}"", journal = {Journal of Geophysical Research (Planets)}, year = 2021, month = feb, volume = {126}, number = {2}, eid = {e06711}, pages = {e06711}, doi = {10.1029/2020JE006711}, } ``` Please see the relevant sub-modules for further references. [build-system] requires = [""setuptools>=61.2""] build-backend = ""setuptools.build_meta"" # https://packaging.python.org/en/latest/specifications/declaring-project-metadata/ [project] name = ""fwl-proteus"" version = ""25.03.28"" description = ""Coupled atmosphere-interior framework to simulate the temporal evolution of rocky planets"" readme = ""README.md"" requires-python = "">=3.11"" authors = [ {name = ""Tim Lichtenberg"", email = ""tim.lichtenberg@rug.nl""}, {name = ""Harrison Nicholls"", email = ""harrison.nicholls@physics.ox.ac.uk""}, {name = ""Laurent Soucasse"", email = ""l.soucasse@esciencecenter.nl""}, {name = ""Stef Smeets"", email = ""s.smeets@esciencecenter.nl""}, {name = ""Dan J. Bower"", email = ""dbower@ethz.ch""}, {name = ""Mariana V. Sastre"", email = ""m.c.villamil.sastre@rug.nl""}, {name = ""Emma Postolec"", email = ""e.n.postolec@rug.nl""}, {name = ""Mark Hammond"", email = ""mark.hammond@physics.ox.ac.uk""}, {name = ""Patrick Sanan"", email = ""patrick.sanan@gmail.com""}, {name = ""Raymond Pierrehumbert"", email = ""raymond.pierrehumbert@physics.ox.ac.uk""}, {name = ""Ryan Boukrouche"", email = ""ryan.boukrouche@astro.su.se""}, {name = ""Shang-Min Tsai"", email = ""shangmin.tsai@ucr.edu""}, {name = ""Hamish Innes"", email = ""hamish.innes@fu-berlin.de""}, ] keywords = [ ""Astronomy"", ""Exoplanets"", ""Model-coupling"", ] license = {text = ""Apache 2.0 License""} classifiers = [ ""Development Status :: 3 - Alpha"", ""Intended Audience :: Science/Research"", ""License :: OSI Approved :: Apache Software License"", ""Natural Language :: English"", ""Operating System :: OS Independent"", ""Programming Language :: Python :: 3"", ""Programming Language :: Python :: 3.11"", ""Programming Language :: Python :: 3.12"", ""Programming Language :: Python :: 3.13"", ""Topic :: Scientific/Engineering :: Astronomy"", ] dependencies = [ ""attrs"", ""cattrs"", ""fwl-janus>=24.11.05"", ""fwl-mors>=25.02.26"", ""fwl-calliope>=25.03.14"", ""fwl-zephyrus>=25.03.11"", ""aragog>=0.1.11a0"", ""cmcrameri"", ""juliacall"", ""matplotlib"", ""netCDF4"", ""numpy"", ""pandas"", ""scipy"", ""sympy"" ] [project.urls] homepage = ""https://github.com/FormingWorlds/PROTEUS"" issues = ""https://github.com/FormingWorlds/PROTEUS/issues"" documentation = ""https://fwl-proteus.readthedocs.io"" changelog = ""https://github.com/FormingWorlds/PROTEUS/releases"" [project.optional-dependencies] develop = [ ""bump-my-version"", ""coverage[toml]"", ""pillow"", ""pip-tools"", ""pytest >= 8.1"", ""pre-commit"", ""ruff"", ] docs = [ ""markdown-include"", ""mkdocs"", ""mkdocs-material"", ""mkdocstrings[python]"", ] [project.scripts] proteus = ""proteus.cli:cli"" [tool.setuptools] package-dir = {""proteus"" = ""src/proteus"" } include-package-data = true [tool.coverage.run] branch = true source = [""proteus""] [tool.pytest.ini_options] testpaths = [""tests""] [tool.ruff] line-length = 96 target-version = ""py312"" extend-exclude = [""*ipynb""] [tool.ruff.lint] select = [ ""F"", # Pyflakes ""E"", # pycodestyle (error) ""W"", # pycodestyle (warning) ""I"", # isort ] ignore = [ ""E501"", # Line too long ] [tool.ruff.lint.isort] known-first-party=[""proteus""] required-imports = [""from __future__ import annotations""] [tool.ruff.format] quote-style = ""single"" indent-style = ""space"" [tool.bumpversion] # https://callowayproject.github.io/bump-my-version/howtos/calver/ current_version = ""25.03.28"" parse = """"""(?x) # Verbose mode (?P<release> # The release part (?:[1-9][0-9])\\. # YY. (?:1[0-2]|0[1-9])\\. # MM. (?:3[0-1]|[1-2][0-9]|0[1-9]) # DD ) (?:\\.(?P<patch>\\d+))? # .patch, optional """""" serialize = [""{release}.{patch}"", ""{release}""] [tool.bumpversion.parts.release] calver_format = ""{YY}.{0M}.{0D}"" [[tool.bumpversion.files]] filename = ""src/proteus/__init__.py"" search = ""__version__ = '{current_version}'"" replace = ""__version__ = '{new_version}'"" [[tool.bumpversion.files]] filename = ""pyproject.toml"" search = ""version = \""{current_version}\"""" replace = ""version = \""{new_version}\"""" [[tool.bumpversion.files]] filename = ""CITATION.cff"" search = ""version: {current_version}"" replace = ""version: {new_version}"" # generated by tools/generate_requirements_txt.py attrs cattrs fwl-janus>=24.11.05 fwl-mors>=24.11.18 fwl-calliope>=24.9.10 fwl-zephyrus>=24.10.15 aragog>=0.1.8a0 cmcrameri juliacall matplotlib netCDF4 numpy pandas scipy Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS Copyright 2023 Forming Worlds Lab Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. cff-version: 1.2.0 message: ""If you use this software, please cite it as below."" authors: - family-names: ""Lichtenberg"" given-names: ""Tim"" orcid: ""https://orcid.org/0000-0002-3286-7683"" - family-names: ""Nicholls"" given-names: ""Harrison"" orcid: ""https://orcid.org/0000-0002-8368-4641"" - family-names: ""Soucasse"" given-names: ""Laurent"" orcid: ""https://orcid.org/0000-0002-5422-8794"" - given-names: ""Stef"" family-names: ""Smeets"" affiliation: ""Netherlands eScience Center"" orcid: ""https://orcid.org/0000-0001-5107-3531"" - family-names: ""Sastre"" given-names: ""Mariana"" orcid: ""https://orcid.org/0000-0000-0000-0000"" - family-names: ""Postolec"" given-names: ""Emma"" orcid: ""https://orcid.org/0000-0000-0000-0000"" - family-names: ""Bower"" given-names: ""Dan"" orcid: ""https://orcid.org/0000-0002-0673-4860"" title: ""PROTEUS"" version: 25.03.28 doi: 10.xx/xx.xx date-released: 2025-03-28 url: ""https://github.com/FormingWorlds/PROTEUS""","{
    ""softwareRequirements"": [
        ""attrs"",
        ""cattrs"",
        ""fwl-janus: >=24.11.05"",
        ""fwl-mors: >=24.11.18"",
        ""fwl-calliope: >=24.9.10"",
        ""fwl-zephyrus: >=24.10.15"",
        ""aragog: >=0.1.8a0"",
        ""cmcrameri"",
        ""juliacall"",
        ""matplotlib"",
        ""netCDF4"",
        ""numpy"",
        ""pandas"",
        ""scipy"",
        ""sympy""
    ],
    ""buildInstructions"": ""See the installation guide at https://fwl-proteus.readthedocs.io/en/latest/installation/"",
    ""author"": [
        {
            ""name"": ""Tim Lichtenberg"",
            ""email"": ""tim.lichtenberg@rug.nl""
        },
        {
            ""name"": ""Harrison Nicholls"",
            ""email"": ""harrison.nicholls@physics.ox.ac.uk""
        },
        {
            ""name"": ""Laurent Soucasse"",
            ""email"": ""l.soucasse@esciencecenter.nl""
        },
        {
            ""name"": ""Stef Smeets"",
            ""email"": ""s.smeets@esciencecenter.nl""
        },
        {
            ""name"": ""Dan J. Bower"",
            ""email"": ""dbower@ethz.ch""
        },
        {
            ""name"": ""Mariana V. Sastre"",
            ""email"": ""m.c.villamil.sastre@rug.nl""
        },
        {
            ""name"": ""Emma Postolec"",
            ""email"": ""e.n.postolec@rug.nl""
        },
        {
            ""name"": ""Mark Hammond"",
            ""email"": ""mark.hammond@physics.ox.ac.uk""
        },
        {
            ""name"": ""Patrick Sanan"",
            ""email"": ""patrick.sanan@gmail.com""
        },
        {
            ""name"": ""Raymond Pierrehumbert"",
            ""email"": ""raymond.pierrehumbert@physics.ox.ac.uk""
        },
        {
            ""name"": ""Ryan Boukrouche"",
            ""email"": ""ryan.boukrouche@astro.su.se""
        },
        {
            ""name"": ""Shang-Min Tsai"",
            ""email"": ""shangmin.tsai@ucr.edu""
        },
        {
            ""name"": ""Hamish Innes"",
            ""email"": ""hamish.innes@fu-berlin.de""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Tim Lichtenberg"",
            ""email"": ""tim.lichtenberg@rug.nl""
        },
        {
            ""name"": ""Harrison Nicholls"",
            ""email"": ""harrison.nicholls@physics.ox.ac.uk""
        },
        {
            ""name"": ""Laurent Soucasse"",
            ""email"": ""l.soucasse@esciencecenter.nl""
        },
        {
            ""name"": ""Stef Smeets"",
            ""email"": ""s.smeets@esciencecenter.nl""
        },
        {
            ""name"": ""Dan J. Bower"",
            ""email"": ""dbower@ethz.ch""
        },
        {
            ""name"": ""Mariana V. Sastre"",
            ""email"": ""m.c.villamil.sastre@rug.nl""
        },
        {
            ""name"": ""Emma Postolec"",
            ""email"": ""e.n.postolec@rug.nl""
        },
        {
            ""name"": ""Mark Hammond"",
            ""email"": ""mark.hammond@physics.ox.ac.uk""
        },
        {
            ""name"": ""Patrick Sanan"",
            ""email"": ""patrick.sanan@gmail.com""
        },
        {
            ""name"": ""Raymond Pierrehumbert"",
            ""email"": ""raymond.pierrehumbert@physics.ox.ac.uk""
        },
        {
            ""name"": ""Ryan Boukrouche"",
            ""email"": ""ryan.boukrouche@astro.su.se""
        },
        {
            ""name"": ""Shang-Min Tsai"",
            ""email"": ""shangmin.tsai@ucr.edu""
        },
        {
            ""name"": ""Hamish Innes"",
            ""email"": ""hamish.innes@fu-berlin.de""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.xx/xx.xx"",
    ""license"": ""Apache 2.0 License"",
    ""keywords"": [
        ""Astronomy"",
        ""Exoplanets"",
        ""Model-coupling"",
        ""Planetary Evolution"",
        ""Atmosphere-Interior Coupling""
    ]
}","{
    ""softwareRequirements"": [
        ""attrs"",
        ""cattrs"",
        ""fwl-janus: >=24.11.05"",
        ""fwl-mors: >=24.11.18"",
        ""fwl-calliope: >=24.9.10"",
        ""fwl-zephyrus: >=24.10.15"",
        ""aragog: >=0.1.8a0"",
        ""cmcrameri"",
        ""juliacall"",
        ""matplotlib"",
        ""netCDF4"",
        ""numpy"",
        ""pandas"",
        ""scipy"",
        ""sympy""
    ],
    ""buildInstructions"": ""See the installation guide at https://fwl-proteus.readthedocs.io/en/latest/installation/"",
    ""author"": [
        {
            ""name"": ""Tim Lichtenberg"",
            ""email"": ""tim.lichtenberg@rug.nl""
        },
        {
            ""name"": ""Harrison Nicholls"",
            ""email"": ""harrison.nicholls@physics.ox.ac.uk""
        },
        {
            ""name"": ""Laurent Soucasse"",
            ""email"": ""l.soucasse@esciencecenter.nl""
        },
        {
            ""name"": ""Stef Smeets"",
            ""email"": ""s.smeets@esciencecenter.nl""
        },
        {
            ""name"": ""Dan J. Bower"",
            ""email"": ""dbower@ethz.ch""
        },
        {
            ""name"": ""Mariana V. Sastre"",
            ""email"": ""m.c.villamil.sastre@rug.nl""
        },
        {
            ""name"": ""Emma Postolec"",
            ""email"": ""e.n.postolec@rug.nl""
        },
        {
            ""name"": ""Mark Hammond"",
            ""email"": ""mark.hammond@physics.ox.ac.uk""
        },
        {
            ""name"": ""Patrick Sanan"",
            ""email"": ""patrick.sanan@gmail.com""
        },
        {
            ""name"": ""Raymond Pierrehumbert"",
            ""email"": ""raymond.pierrehumbert@physics.ox.ac.uk""
        },
        {
            ""name"": ""Ryan Boukrouche"",
            ""email"": ""ryan.boukrouche@astro.su.se""
        },
        {
            ""name"": ""Shang-Min Tsai"",
            ""email"": ""shangmin.tsai@ucr.edu""
        },
        {
            ""name"": ""Hamish Innes"",
            ""email"": ""hamish.innes@fu-berlin.de""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Tim Lichtenberg"",
            ""email"": ""tim.lichtenberg@rug.nl""
        },
        {
            ""name"": ""Harrison Nicholls"",
            ""email"": ""harrison.nicholls@physics.ox.ac.uk""
        },
        {
            ""name"": ""Laurent Soucasse"",
            ""email"": ""l.soucasse@esciencecenter.nl""
        },
        {
            ""name"": ""Stef Smeets"",
            ""email"": ""s.smeets@esciencecenter.nl""
        },
        {
            ""name"": ""Dan J. Bower"",
            ""email"": ""dbower@ethz.ch""
        },
        {
            ""name"": ""Mariana V. Sastre"",
            ""email"": ""m.c.villamil.sastre@rug.nl""
        },
        {
            ""name"": ""Emma Postolec"",
            ""email"": ""e.n.postolec@rug.nl""
        },
        {
            ""name"": ""Mark Hammond"",
            ""email"": ""mark.hammond@physics.ox.ac.uk""
        },
        {
            ""name"": ""Patrick Sanan"",
            ""email"": ""patrick.sanan@gmail.com""
        },
        {
            ""name"": ""Raymond Pierrehumbert"",
            ""email"": ""raymond.pierrehumbert@physics.ox.ac.uk""
        },
        {
            ""name"": ""Ryan Boukrouche"",
            ""email"": ""ryan.boukrouche@astro.su.se""
        },
        {
            ""name"": ""Shang-Min Tsai"",
            ""email"": ""shangmin.tsai@ucr.edu""
        },
        {
            ""name"": ""Hamish Innes"",
            ""email"": ""hamish.innes@fu-berlin.de""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.xx/xx.xx"",
    ""license"": ""Apache 2.0 License"",
    ""keywords"": [
        ""Astronomy"",
        ""Exoplanets"",
        ""Model-coupling"",
        ""Planetary Evolution"",
        ""Atmosphere-Interior Coupling""
    ]
}","{
    ""softwareRequirements"": [
        ""attrs"",
        ""cattrs"",
        ""fwl-janus>=24.11.05"",
        ""fwl-mors>=25.02.26"",
        ""fwl-calliope>=25.03.14"",
        ""fwl-zephyrus>=25.03.11"",
        ""aragog>=0.1.11a0"",
        ""cmcrameri"",
        ""juliacall"",
        ""matplotlib"",
        ""netCDF4"",
        ""numpy"",
        ""pandas"",
        ""scipy"",
        ""sympy""
    ],
    ""buildInstructions"": ""See the installation guide for steps and troubleshooting advice."",
    ""author"": [
        {
            ""name"": ""Tim Lichtenberg"",
            ""email"": ""tim.lichtenberg@rug.nl""
        },
        {
            ""name"": ""Harrison Nicholls"",
            ""email"": ""harrison.nicholls@physics.ox.ac.uk""
        },
        {
            ""name"": ""Laurent Soucasse"",
            ""email"": ""l.soucasse@esciencecenter.nl""
        },
        {
            ""name"": ""Stef Smeets"",
            ""email"": ""s.smeets@esciencecenter.nl""
        },
        {
            ""name"": ""Dan J. Bower"",
            ""email"": ""dbower@ethz.ch""
        },
        {
            ""name"": ""Mariana V. Sastre"",
            ""email"": ""m.c.villamil.sastre@rug.nl""
        },
        {
            ""name"": ""Emma Postolec"",
            ""email"": ""e.n.postolec@rug.nl""
        },
        {
            ""name"": ""Mark Hammond"",
            ""email"": ""mark.hammond@physics.ox.ac.uk""
        },
        {
            ""name"": ""Patrick Sanan"",
            ""email"": ""patrick.sanan@gmail.com""
        },
        {
            ""name"": ""Raymond Pierrehumbert"",
            ""email"": ""raymond.pierrehumbert@physics.ox.ac.uk""
        },
        {
            ""name"": ""Ryan Boukrouche"",
            ""email"": ""ryan.boukrouche@astro.su.se""
        },
        {
            ""name"": ""Shang-Min Tsai"",
            ""email"": ""shangmin.tsai@ucr.edu""
        },
        {
            ""name"": ""Hamish Innes"",
            ""email"": ""hamish.innes@fu-berlin.de""
        }
    ],
    ""contributor"": [
        {
            ""Name"": ""Tim Lichtenberg"",
            ""Email"": ""tim.lichtenberg@rug.nl""
        },
        {
            ""Name"": ""Harrison Nicholls"",
            ""Email"": ""harrison.nicholls@physics.ox.ac.uk""
        },
        {
            ""Name"": ""Laurent Soucasse"",
            ""Email"": ""l.soucasse@esciencecenter.nl""
        },
        {
            ""Name"": ""Stef Smeets"",
            ""Email"": ""s.smeets@esciencecenter.nl""
        },
        {
            ""Name"": ""Dan J. Bower"",
            ""Email"": ""dbower@ethz.ch""
        },
        {
            ""Name"": ""Mariana Sastre"",
            ""Email"": ""m.c.villamil.sastre@rug.nl""
        },
        {
            ""Name"": ""Emma Postolec"",
            ""Email"": ""e.n.postolec@rug.nl""
        },
        {
            ""Name"": ""Mark Hammond"",
            ""Email"": ""mark.hammond@physics.ox.ac.uk""
        },
        {
            ""Name"": ""Raymond Pierrehumbert"",
            ""Email"": ""raymond.pierrehumbert@physics.ox.ac.uk""
        }
    ],
    ""funder"": """",
    ""identifier"": [
        ""10.1093/mnras/stae2772"",
        ""10.1029/2024JE008576"",
        ""10.1029/2020JE006711""
    ],
    ""license"": ""Apache 2.0 License"",
    ""keywords"": [
        ""Astronomy"",
        ""Exoplanets"",
        ""Model-coupling""
    ]
}","{
   ""buildInstructions"":[
      ""https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md"",
      ""# Installation\n\nThese instructions will guide you through the typical installation\nprocess. The setup is written for MacOS and Linux. Depending on your\nsystem settings and installed libraries your procedure may differ. If\none or more of the steps below do not work for you we encourage you to\nfirst check the `troubleshooting`{.interpreted-text role=\""doc\""} page. If\nthat does not help you further, please contact the developers (see\n`contact`{.interpreted-text role=\""doc\""}).\n\n## System configuration (MacOS)\n\n1.  Open the terminal to install the developer tools\n\n```console\nxcode-select --install\n```\n\n2.  Install `FORTRAN NetCDF` library via the most appropriate method for\n    you\n\n```console\nbrew install netcdf\nbrew install netcdf-fortran\n```\n\nOr\n\n```console\nsudo port install netcdf-fortran +gcc8\n```\n\n## System configuration (Linux)\n\n1. Install `FORTRAN NetCDF` via your package manager (e.g\\...)\n\n```console\nsudo apt install libnetcdff-dev\n```\n\n## Python environment\n\nYou will need to install Python (>=3.11) on your system.\nThis can be done via brew on MacOS, or with your package manager on Linux. Alternatively, you can use [miniforge](https://github.com/conda-forge/miniforge) or [pyenv](https://github.com/pyenv/pyenv).\n\n## Install Julia\n\nIf you already have Julia installed, skip this step.\nThis should only be done using the official installer, not via your package manager.\n\n```console\ncurl -fsSL https://install.julialang.org | sh\n```\n\n## Download the framework\n\n1. Setup environment variables\n\n    The environment variable `FWL_DATA` points to the folder where input data are stored.\n    This variable must always be set, so it is best to add this line to your shell rc file.\n\n    ```console\n    export FWL_DATA=/your/local/path/\n    ```\n\n2. Download PROTEUS base\n\n    ```console\n    git clone git@github.com:FormingWorlds/PROTEUS.git\n    cd PROTEUS\n    ```\n\n3. Create a virtual environment\n\n    ```console\n    python -m venv .venv\n    source .venv/bin/activate\n    ```\n\n4. Setup radiative transfer code (**SOCRATES**)\n\n    The code can be setup in `./socrates/` using the following script.\n\n    ```console\n    ./tools/get_socrates.sh\n    ```\n\n    The environemnt variable `RAD_DIR` must always point to the SOCRATES installation path.\n    It is highly recommended that you add this to your shell rc file (e.g. `~/.bashrc`).\n\n5. Radiative-convective atmosphere model (**AGNI**)\n\n    Installation steps can be found at the [AGNI wiki](https://nichollsh.github.io/AGNI/dev/setup/).\n    They are also reproduced below.\n\n    ```console\n    git clone git@github.com:nichollsh/AGNI.git\n    cd AGNI\n    bash src/get_agni.sh\n    cd ../\n    ```\n\n    Use this `get_agni` script to keep AGNI and its data files up to date.\n\n6. **Optional** developer installation steps\n\n    Follow the steps in this section if you want to create editable installations of these submodules.\n    Otherwise, go to the next step section.\n\n    - MORS stellar evolution model\n\n        ```console\n        git clone git@github.com:FormingWorlds/MORS\n        pip install -e MORS/.\n        ```\n\n    - JANUS atmosphere model\n\n        ```console\n        git clone git@github.com:FormingWorlds/JANUS\n        pip install -e JANUS/.\n        ```\n\n    - CALLIOPE outgassing model\n\n        ```console\n        git clone git@github.com:FormingWorlds/CALLIOPE\n        pip install -e CALLIOPE/.\n        ```\n\n    - ARAGOG interior model\n\n        ```console\n        git clone git@github.com:ExPlanetology/aragog.git\n        pip install -e aragog/.\n        ```\n\n    - ZEPHYRUS escape model\n\n        ```console\n        git clone git@github.com:FormingWorlds/ZEPHYRUS\n        pip install -e ZEPHYRUS/.\n        ```\n\n7. Setup numerical computing library (**PETSc**)\n\n    You will need to do this particular step in an environment with Python <= 3.12.\n\n    ```console\n    ./tools/get_petsc.sh\n    ```\n\n8. Setup interior evolution model (**SPIDER**)\n\n    ```console\n    ./tools/get_spider.sh\n    ```\n\n9. Setup PROTEUS coupled framework\n\n    ```console\n    pip install -e .\n    ```\n\n\n10. Done! \ud83d\ude80\n    Any remaining dependencies will be downloaded when the model is first run.\n\n## Optional modules\n\n\n### Multi-phase tidal heating model (**LovePy**)\n\nLovepy is written in Julia. You can use the same environment as AGNI if you wish, but you\nshould make sure to follow the installation steps below.\n\n```console\n./tools/get_lovepy.sh\n```\n\n### Synthetic observations calculator (**PLATON**)\n\n[PLATON](https://platon.readthedocs.io/en/latest/intro.html) is a forward modelling and\nretrieval tool for exoplanet atmospheres. In PROTEUS, this tool is used to generate\nsynthetic transmission and secondary eclipse observations. To get PLATON and its\ndependencies, use the script below.\n\n```console\n./tools/get_platon.sh\n```\n\nNote that this script will take some time to run; PLATON will need to download\nabout 10 GB of opacity data from the internet.\n\n### Chemical kinetics atmosphere model (**VULCAN**)\n\n1. Clone the model\n\n    ```console\n    git clone git@github.com:exoclime/VULCAN.git\n    cd VULCAN\n    ```\n\n2. Compile the FastChem extension\n\n    ```console\n    cd fastchem_vulcan\n    ```\n\n    On MacOS you will need to edit `make.globaloptions` to reflect  a GNU-compatible `g++` executable, not the Apple one (see\n     [Troubleshooting](./troubleshooting.md) if the next step results in an error.\n\n    ```console\n    make\n    cd ../../\n    ```\n3. Install Python dependencies\n\n    ```console\n    pip install sympy\n    ```\n"",
      ""https://github.com/FormingWorlds/PROTEUS/tree/main/docs""
   ],
   ""author"":[
      {
         ""@type"":""Organization"",
         ""@id"":""https://github.com/FormingWorlds""
      }
   ],
  ""license"":{
      ""name"":""Apache License 2.0"",
      ""url"":""https://api.github.com/licenses/apache-2.0""
   },
   ""keywords"":""astronomy, astrophysics, atmosphere, exoplanets, geochemistry, geophysics, mantle, simulation-framework"",
}","{
   ""@context"":""https://doi.org/10.5063/schema/codemeta-2.0"",
   ""@type"":""SoftwareSourceCode"",
   ""license"":{
      ""name"":""Apache License 2.0"",
      ""url"":""https://api.github.com/licenses/apache-2.0""
   },
   ""codeRepository"":""https://github.com/FormingWorlds/PROTEUS"",
   ""issueTracker"":""https://github.com/FormingWorlds/PROTEUS/issues"",
   ""dateCreated"":""2018-11-05"",
   ""dateModified"":""2025-03-09"",
   ""downloadUrl"":""https://github.com/FormingWorlds/PROTEUS/releases"",
   ""name"":""PROTEUS"",
   ""logo"":""https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/docs/assets/PROTEUS_white.png#gh-light-mode-only"",
   ""keywords"":""astronomy, astrophysics, atmosphere, exoplanets, geochemistry, geophysics, mantle, simulation-framework"",
   ""programmingLanguage"":[
      ""Jupyter Notebook"",
      ""Python"",
      ""Julia"",
      ""Shell""
   ],
   ""buildInstructions"":[
      ""https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md"",
      ""# Installation\n\nThese instructions will guide you through the typical installation\nprocess. The setup is written for MacOS and Linux. Depending on your\nsystem settings and installed libraries your procedure may differ. If\none or more of the steps below do not work for you we encourage you to\nfirst check the `troubleshooting`{.interpreted-text role=\""doc\""} page. If\nthat does not help you further, please contact the developers (see\n`contact`{.interpreted-text role=\""doc\""}).\n\n## System configuration (MacOS)\n\n1.  Open the terminal to install the developer tools\n\n```console\nxcode-select --install\n```\n\n2.  Install `FORTRAN NetCDF` library via the most appropriate method for\n    you\n\n```console\nbrew install netcdf\nbrew install netcdf-fortran\n```\n\nOr\n\n```console\nsudo port install netcdf-fortran +gcc8\n```\n\n## System configuration (Linux)\n\n1. Install `FORTRAN NetCDF` via your package manager (e.g\\...)\n\n```console\nsudo apt install libnetcdff-dev\n```\n\n## Python environment\n\nYou will need to install Python (>=3.11) on your system.\nThis can be done via brew on MacOS, or with your package manager on Linux. Alternatively, you can use [miniforge](https://github.com/conda-forge/miniforge) or [pyenv](https://github.com/pyenv/pyenv).\n\n## Install Julia\n\nIf you already have Julia installed, skip this step.\nThis should only be done using the official installer, not via your package manager.\n\n```console\ncurl -fsSL https://install.julialang.org | sh\n```\n\n## Download the framework\n\n1. Setup environment variables\n\n    The environment variable `FWL_DATA` points to the folder where input data are stored.\n    This variable must always be set, so it is best to add this line to your shell rc file.\n\n    ```console\n    export FWL_DATA=/your/local/path/\n    ```\n\n2. Download PROTEUS base\n\n    ```console\n    git clone git@github.com:FormingWorlds/PROTEUS.git\n    cd PROTEUS\n    ```\n\n3. Create a virtual environment\n\n    ```console\n    python -m venv .venv\n    source .venv/bin/activate\n    ```\n\n4. Setup radiative transfer code (**SOCRATES**)\n\n    The code can be setup in `./socrates/` using the following script.\n\n    ```console\n    ./tools/get_socrates.sh\n    ```\n\n    The environemnt variable `RAD_DIR` must always point to the SOCRATES installation path.\n    It is highly recommended that you add this to your shell rc file (e.g. `~/.bashrc`).\n\n5. Radiative-convective atmosphere model (**AGNI**)\n\n    Installation steps can be found at the [AGNI wiki](https://nichollsh.github.io/AGNI/dev/setup/).\n    They are also reproduced below.\n\n    ```console\n    git clone git@github.com:nichollsh/AGNI.git\n    cd AGNI\n    bash src/get_agni.sh\n    cd ../\n    ```\n\n    Use this `get_agni` script to keep AGNI and its data files up to date.\n\n6. **Optional** developer installation steps\n\n    Follow the steps in this section if you want to create editable installations of these submodules.\n    Otherwise, go to the next step section.\n\n    - MORS stellar evolution model\n\n        ```console\n        git clone git@github.com:FormingWorlds/MORS\n        pip install -e MORS/.\n        ```\n\n    - JANUS atmosphere model\n\n        ```console\n        git clone git@github.com:FormingWorlds/JANUS\n        pip install -e JANUS/.\n        ```\n\n    - CALLIOPE outgassing model\n\n        ```console\n        git clone git@github.com:FormingWorlds/CALLIOPE\n        pip install -e CALLIOPE/.\n        ```\n\n    - ARAGOG interior model\n\n        ```console\n        git clone git@github.com:ExPlanetology/aragog.git\n        pip install -e aragog/.\n        ```\n\n    - ZEPHYRUS escape model\n\n        ```console\n        git clone git@github.com:FormingWorlds/ZEPHYRUS\n        pip install -e ZEPHYRUS/.\n        ```\n\n7. Setup numerical computing library (**PETSc**)\n\n    You will need to do this particular step in an environment with Python <= 3.12.\n\n    ```console\n    ./tools/get_petsc.sh\n    ```\n\n8. Setup interior evolution model (**SPIDER**)\n\n    ```console\n    ./tools/get_spider.sh\n    ```\n\n9. Setup PROTEUS coupled framework\n\n    ```console\n    pip install -e .\n    ```\n\n\n10. Done! \ud83d\ude80\n    Any remaining dependencies will be downloaded when the model is first run.\n\n## Optional modules\n\n\n### Multi-phase tidal heating model (**LovePy**)\n\nLovepy is written in Julia. You can use the same environment as AGNI if you wish, but you\nshould make sure to follow the installation steps below.\n\n```console\n./tools/get_lovepy.sh\n```\n\n### Synthetic observations calculator (**PLATON**)\n\n[PLATON](https://platon.readthedocs.io/en/latest/intro.html) is a forward modelling and\nretrieval tool for exoplanet atmospheres. In PROTEUS, this tool is used to generate\nsynthetic transmission and secondary eclipse observations. To get PLATON and its\ndependencies, use the script below.\n\n```console\n./tools/get_platon.sh\n```\n\nNote that this script will take some time to run; PLATON will need to download\nabout 10 GB of opacity data from the internet.\n\n### Chemical kinetics atmosphere model (**VULCAN**)\n\n1. Clone the model\n\n    ```console\n    git clone git@github.com:exoclime/VULCAN.git\n    cd VULCAN\n    ```\n\n2. Compile the FastChem extension\n\n    ```console\n    cd fastchem_vulcan\n    ```\n\n    On MacOS you will need to edit `make.globaloptions` to reflect  a GNU-compatible `g++` executable, not the Apple one (see\n     [Troubleshooting](./troubleshooting.md) if the next step results in an error.\n\n    ```console\n    make\n    cd ../../\n    ```\n3. Install Python dependencies\n\n    ```console\n    pip install sympy\n    ```\n"",
      ""https://github.com/FormingWorlds/PROTEUS/tree/main/docs""
   ],
   ""author"":[
      {
         ""@type"":""Organization"",
         ""@id"":""https://github.com/FormingWorlds""
      }
   ],
   ""citation"":[
      ""https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/CITATION.cff"",
      ""10.1093/mnras/stae2772"",
      ""10.1029/2024JE008576"",
      ""10.1029/2020JE006711""
   ],
   ""readme"":""https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md"",
   ""description"":[
      ""Coupled atmosphere-interior framework to simulate the temporal evolution of rocky planets."",
      ""**PROTEUS** is a modular Python framework that simulates the coupled evolution of the atmospheres and interiors of rocky planets.\n \n"",
      ""| Object                | Description                                               |\n| -                     | -                                                         |\n| `README.md`           | Overview file                                             |\n| `pyproject.toml`\t   | Project configuration file                                |\n| `CODE_OF_CONDUCT.md`  | Project code of conduct                                   |\n| `LICENSE.txt`         | Project license                                           |\n| `src/proteus`         | Source code for PROTEUS                                   |\n| `output/`             | Output folder with subfolders for each model run          |\n| `input/`              | Example configuration files for running the model         |\n| `docs/`\t\t   | Documentation source files                                |\n| `examples/`           | Example cases that the model should be able to reproduce  |\n \n""
   ]
}"
https://github.com/SCM-NV/qmflows,".. image:: https://github.com/SCM-NV/qmflows/workflows/Tests/badge.svg :target: https://github.com/SCM-NV/qmflows/actions .. image:: https://codecov.io/gh/SCM-NV/qmflows/branch/master/graph/badge.svg :target: https://codecov.io/gh/SCM-NV/qmflows .. image:: https://readthedocs.org/projects/qmflows/badge/?version=latest :target: https://qmflows.readthedocs.io/en/latest/?badge=latest :alt: Documentation Status .. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.3274284.svg :target: https://doi.org/10.5281/zenodo.3274284 .. image:: https://badge.fury.io/py/qmflows.svg :target: https://badge.fury.io/py/qmflows .. image:: qmflows.png QMFlows ####### See documentation_ for tutorials and documentation. Motivation ========== Research on modern computational quantum chemistry relies on a set of computational tools to carry out calculations. The complexity of the calculations usually requires intercommunication between the aforementioned tools, such communication is usually done through shell scripts that try to automate input/output actions like: launching the computations in a cluster, reading the resulting output and feeding the relevant numerical result to another program. Such scripts are difficult to maintain and extend, requiring a significant programming expertise to work with them. Being then desirable a set of automatic and extensible tools that allows to perform complex simulations in heterogeneous hardware platforms. This library tackles the construction and efficient execution of computational chemistry workflows. This allows computational chemists to use the emerging massively parallel compute environments in an easy manner and focus on interpretation of scientific data rather than on tedious job submission procedures and manual data processing. Description =========== This library consists of a set of modules written in Python3 to automate the following tasks: 1. Input generation. 2. Handle tasks dependencies (Noodles_). 3. Advanced molecular manipulation capabilities with (rdkit_). 4. Jobs failure detection and recovery. 5. Numerical data storage (h5py_). Tutorial and Examples --------------------- A tutorial written as a jupyter-notebook_ is available from: tutorial-qmflows_. You can also access direclty more advanced examples_. Installation ============ - Download miniconda for python3: miniconda_ (also you can install the complete anaconda_ version). - Install according to: installConda_. - Create a new virtual environment using the following commands: - ``conda create -n qmflows`` - Activate the new virtual environment - ``source activate qmflows`` To exit the virtual environment type ``source deactivate``. .. _dependecies: Dependencies installation ------------------------- - Type in your terminal: ``conda activate qmflows`` Using the conda environment the following packages should be installed: - install rdkit_ and h5py_ using conda: - ``conda install -y -q -c conda-forge rdkit h5py`` - Note that ``rdkit`` is optional for Python 3.7 and later. .. _installation: Package installation -------------------- Finally install the package: - Install **QMFlows** using pip: - ``pip install qmflows`` Now you are ready to use *qmflows*. **Notes:** - Once the libraries and the virtual environment are installed, you only need to type ``conda activate qmflows`` each time that you want to use the software. .. _documentation: https://qmflows.readthedocs.io/en/latest/ .. _miniconda: https://docs.conda.io/en/latest/miniconda.html .. _anaconda: https://www.anaconda.com/distribution/#download-section .. _installConda: https://conda.io/projects/conda/en/latest/user-guide/install/index.html .. _Noodles: http://nlesc.github.io/noodles/ .. _h5py: http://www.h5py.org/ .. _here: https://www.python.org/downloads/ .. _rdkit: http://www.rdkit.org .. _jupyter-notebook: http://jupyter.org/ .. _tutorial-qmflows: https://github.com/SCM-NV/qmflows/tree/master/jupyterNotebooks .. _examples: https://github.com/SCM-NV/qmflows/tree/master/src/qmflows/examples .. _PLAMS: https://github.com/SCM-NV/PLAMS [build-system] requires = [ ""setuptools>=61.0"", ""wheel>=0.21"", ""setuptools_scm[toml]>=6.2"", ] build-backend = ""setuptools.build_meta"" [project] name = ""qmflows"" dynamic = [ ""version"", ""readme"", ] description = ""Automation of computations in quantum chemistry."" license = { file = ""LICENSE.md"" } authors = [ { name = ""Felipe Zapata"", email = ""f.zapata@esciencecenter.nl"" }, ] keywords = [ ""chemistry"", ""workflows"", ""simulation"", ""materials"", ] classifiers = [ ""License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)"", ""Intended Audience :: Science/Research"", ""Programming Language :: Python"", ""Programming Language :: Python :: 3"", ""Programming Language :: Python :: 3 :: Only"", ""Programming Language :: Python :: 3.8"", ""Programming Language :: Python :: 3.9"", ""Programming Language :: Python :: 3.10"", ""Programming Language :: Python :: 3.11"", ""Programming Language :: Python :: 3.12"", ""Development Status :: 5 - Production/Stable"", ""Intended Audience :: Science/Research"", ""Topic :: Scientific/Engineering :: Chemistry"", ""Typing :: Typed"", ] requires-python = "">=3.8"" dependencies = [ ""more-itertools"", ""h5py"", ""numpy>=1.21,<2"", ""pandas"", ""noodles>=0.3.3"", ""plams==1.5.1"", ""pyparsing!=3.0.0,<3.1.0"", ""pyyaml>=5.1"", ""filelock"", ""packaging>=1.16.8"", ] [project.urls] Homepage = ""https://github.com/SCM-NV/qmflows"" ""Bug Tracker"" = ""https://github.com/SCM-NV/qmflows/issues"" Documentation = ""https://qmflows.readthedocs.io/en/latest/"" [project.optional-dependencies] doc = [ ""sphinx>=2.1,!=3.1.1,<7"", ""sphinx-autodoc-typehints"", ""sphinx_rtd_theme"", ""nbsphinx"", ""jupyter"", ""pandoc"", ] lint = [ ""flake8"", ""pydocstyle[toml]>=6.1"", ""Flake8-pyproject>=1.2.2"", ""mypy"", ""types-PyYAML"", ""types-setuptools"", ""pytest>=6.0"", ] test = [ ""qmflows[test-no-optional]"", ""rdkit>=2018.03.1"", ] test-no-optional = [ ""assertionlib>=3.1.0"", ""pytest>=6.0"", ""pytest-cov"", ""pytest-mock"", ""typing_extensions"", ] [tool.setuptools.packages.find] where = [""src""] include = [""qmflows*""] [tool.setuptools.package-data] FOX = [ ""data/dictionaries/*yaml"", ""py.typed"", ] [tool.setuptools.dynamic] readme = { file = [""README.rst""], content-type = ""text/x-rst"" } [tool.setuptools_scm] write_to = ""src/qmflows/_version.py"" [tool.mypy] plugins = ""numpy.typing.mypy_plugin"" show_error_codes = true [[tool.mypy.overrides]] module = [ ""scm.plams.*"", ""scm.*"", ""noodles.*"", ""rdkit.*"", ""pandas.*"", ] ignore_missing_imports = true [tool.coverage.run] branch = true source = [""src""] [tool.flake8] max-line-length = 100 exclude = [ ""src/qmflows/_version.py ALL"", ] [tool.pytest.ini_options] testpaths = ""src test"" addopts = ""--tb=short --cov --doctest-modules --cov-report xml --cov-report term --cov-report html -s --pdbcls=IPython.terminal.debugger:TerminalPdb"" markers = [ ""slow: A marker for slow tests requiring external quantum-chemical packages."", ] filterwarnings = [ ""error::qmflows.warnings_qmflows.QMFlows_Warning"", ""ignore:Generic keyword '_pytestfixturefunction' not implemented for package \\w:qmflows.warnings_qmflows.Key_Warning"", ] [tool.pydocstyle] convention = ""numpy"" add-ignore = [""D401"", ""D105""] ignore-decorators = ""overload"" QMFlows is an Open Source project supported by the VU University Amsterdam, the Netherlands eScience Center (NLeSC) and Software for Chemistry & Materials BV (SCM, and previously known as Scientific Computing & Modelling NV). The terms of the [LGPL-3.0 license]* apply. As an exception to the LGPL-3.0 license, you agree to grant SCM a [BSD 3-Clause license]** to the contributions you commit on this Github or provide to SCM in another manner. \* https://opensource.org/licenses/LGPL-3.0 ** https://opensource.org/licenses/BSD-3-Clause [LGPL-3.0 license]: https://opensource.org/licenses/LGPL-3.0 ""LGPL-3.0 license"" [BSD 3-Clause license]: https://opensource.org/licenses/BSD-3-Clause ""BSD 3-Clause license"" # YAML 1.2 # Metadata for citation of this software according to the CFF format (https://citation-file-format.github.io/) cff-version: 1.2.0 message: If you use this software, please cite it as below. title: QMflows abstract: QMflows library tackles the construction and efficient execution of computational chemistry workflows. doi: 10.5281/zenodo.1045523 authors: - given-names: Felipe family-names: Zapata orcid: ""https://orcid.org/0000-0001-8286-677X"" - given-names: Lars family-names: Ridder orcid: ""https://orcid.org/0000-0002-7635-9533"" - given-names: Johan family-names: Hidding - given-names: Bas family-names: van Beek orcid: ""https://orcid.org/0000-0003-2463-6559"" keywords: - computational-chemistry - materials-science - python - Workflows version: '1.0.0' date-released: 2023-10-06 # YYYY-MM-DD repository-code: https://github.com/SCM-NV/qmflows license: ""LGPL-3.0""","{
    ""softwareRequirements"": [
        ""more-itertools"",
        ""h5py"",
        ""numpy: >=1.21,<2"",
        ""pandas"",
        ""noodles: >=0.3.3"",
        ""plams: ==1.5.1"",
        ""pyparsing: !=3.0.0,<3.1.0"",
        ""pyyaml: >=5.1"",
        ""filelock"",
        ""packaging: >=1.16.8""
    ],
    ""buildInstructions"": ""1. Download miniconda for python3: miniconda. 2. Install according to: installConda. 3. Create a new virtual environment using the following commands: - conda create -n qmflows - Activate the new virtual environment - source activate qmflows To exit the virtual environment type source deactivate."",
    ""author"": [
        {
            ""name"": ""Felipe Zapata"",
            ""email"": ""f.zapata@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0001-8286-677X""
        },
        {
            ""name"": ""Lars Ridder"",
            ""email"": ""l.ridder@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-7635-9533""
        },
        {
            ""name"": ""Johan Hidding"",
            ""email"": ""j.hidding@esciencecenter.nl""
        },
        {
            ""name"": ""Bas van Beek"",
            ""email"": ""b.vanbeek@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0003-2463-6559""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1045523"",
    ""license"": ""LGPL-3.0"",
    ""keywords"": [
        ""Computational Chemistry"",
        ""Materials Science"",
        ""Python"",
        ""Workflows"",
        ""Quantum Chemistry"",
        ""Materials Science"",
        ""Computational Materials Science""
    ]
}","{
    ""softwareRequirements"": [
        ""more-itertools"",
        ""h5py"",
        ""numpy: >=1.21,<2"",
        ""pandas"",
        ""noodles: >=0.3.3"",
        ""plams: ==1.5.1"",
        ""pyparsing: !=3.0.0,<3.1.0"",
        ""pyyaml: >=5.1"",
        ""filelock"",
        ""packaging: >=1.16.8""
    ],
    ""buildInstructions"": ""1. Download miniconda for python3: miniconda. 2. Install according to: installConda. 3. Create a new virtual environment using the following commands: - conda create -n qmflows - Activate the new virtual environment - source activate qmflows To exit the virtual environment type source deactivate."",
    ""author"": [
        {
            ""name"": ""Felipe Zapata"",
            ""email"": ""f.zapata@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0001-8286-677X""
        },
        {
            ""name"": ""Lars Ridder"",
            ""email"": ""l.ridder@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-7635-9533""
        },
        {
            ""name"": ""Johan Hidding"",
            ""email"": ""j.hidding@esciencecenter.nl""
        },
        {
            ""name"": ""Bas van Beek"",
            ""email"": ""b.vanbeek@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0003-2463-6559""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1045523"",
    ""license"": ""LGPL-3.0"",
    ""keywords"": [
        ""Computational Chemistry"",
        ""Materials Science"",
        ""Python"",
        ""Workflows"",
        ""Quantum Chemistry"",
        ""Materials Science"",
        ""Computational Materials Science""
    ]
}","{
    ""softwareRequirements"": [
        ""more-itertools"",
        ""h5py"",
        ""numpy>=1.21,<2"",
        ""pandas"",
        ""noodles>=0.3.3"",
        ""plams==1.5.1"",
        ""pyparsing!=3.0.0,<3.1.0"",
        ""pyyaml>=5.1"",
        ""filelock"",
        ""packaging>=1.16.8""
    ],
    ""buildInstructions"": ""Installation\n Download miniconda for python3: miniconda (also you can install the complete anaconda version).\n Install according to: installConda.\n Create a new virtual environment using the following commands:\n   `conda create -n qmflows`\n Activate the new virtual environment\n   `source activate qmflows`\nTo exit the virtual environment type `source deactivate`.\nDependencies installation\n Type in your terminal:\n`conda activate qmflows`\nUsing the conda environment the following packages should be installed:\n install rdkit and h5py using conda:\n   `conda install -y -q -c conda-forge rdkit h5py`\n   Note that `rdkit` is optional for Python 3.7 and later.\nPackage installation\nFinally install the package:\n Install **QMFlows** using pip: - `pip install qmflows`"",
    ""author"": [
        {
            ""name"": ""Felipe Zapata"",
            ""email"": ""f.zapata@esciencecenter.nl""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.3274284""
    ],
    ""license"": ""GNU Lesser General Public License v3 (LGPLv3)"",
    ""keywords"": [
        ""chemistry"",
        ""workflows"",
        ""simulation"",
        ""materials""
    ]
}",,
https://github.com/KernelTuner/kernel_tuner,"<div align=""center""> <img width=""500px"" src=""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/KernelTuner-logo.png""/> </div> --- [![Build Status](https://github.com/KernelTuner/kernel_tuner/actions/workflows/test-python-package.yml/badge.svg)](https://github.com/KernelTuner/kernel_tuner/actions/workflows/test-python-package.yml) [![CodeCov Badge](https://codecov.io/gh/KernelTuner/kernel_tuner/branch/master/graph/badge.svg)](https://codecov.io/gh/KernelTuner/kernel_tuner) [![PyPi Badge](https://img.shields.io/pypi/v/kernel_tuner.svg?colorB=blue)](https://pypi.python.org/pypi/kernel_tuner/) [![Zenodo Badge](https://zenodo.org/badge/54894320.svg)](https://zenodo.org/badge/latestdoi/54894320) [![SonarCloud Badge](https://sonarcloud.io/api/project_badges/measure?project=KernelTuner_kernel_tuner&metric=alert_status)](https://sonarcloud.io/dashboard?id=KernelTuner_kernel_tuner) [![OpenSSF Badge](https://bestpractices.coreinfrastructure.org/projects/6573/badge)](https://bestpractices.coreinfrastructure.org/projects/6573) [![FairSoftware Badge](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F-green)](https://fair-software.eu) --- Create optimized GPU applications in any mainstream GPU programming language (CUDA, HIP, OpenCL, OpenACC). What Kernel Tuner does: - Works as an external tool to benchmark and optimize GPU kernels in isolation - Can be used directly on existing kernel code without extensive changes - Can be used with applications in any host programming language - Blazing fast search space construction - More than 20 [optimization algorithms](https://kerneltuner.github.io/kernel_tuner/stable/optimization.html) to speedup tuning - Energy measurements and optimizations [(power capping, clock frequency tuning)](https://arxiv.org/abs/2211.07260) - ... and much more! For example, [caching](https://kerneltuner.github.io/kernel_tuner/stable/cache_files.html), [output verification](https://kerneltuner.github.io/kernel_tuner/stable/correctness.html), [tuning host and device code](https://kerneltuner.github.io/kernel_tuner/stable/hostcode.html), [user defined metrics](https://kerneltuner.github.io/kernel_tuner/stable/metrics.html), see [the full documentation](https://kerneltuner.github.io/kernel_tuner/stable/index.html). ## Installation - First, make sure you have your [CUDA](https://kerneltuner.github.io/kernel_tuner/stable/install.html#cuda-and-pycuda), [OpenCL](https://kerneltuner.github.io/kernel_tuner/stable/install.html#opencl-and-pyopencl), or [HIP](https://kerneltuner.github.io/kernel_tuner/stable/install.html#hip-and-hip-python) compiler installed - Then type: `pip install kernel_tuner[cuda]`, `pip install kernel_tuner[opencl]`, or `pip install kernel_tuner[hip]` - or why not all of them: `pip install kernel_tuner[cuda,opencl,hip]` More information on installation, also for other languages, in the [installation guide](http://kerneltuner.github.io/kernel_tuner/stable/install.html). ## Example ```python import numpy as np from kernel_tuner import tune_kernel kernel_string = """""" __global__ void vector_add(float *c, float *a, float *b, int n) { int i = blockIdx.x * block_size_x + threadIdx.x; if (i<n) { c[i] = a[i] + b[i]; } } """""" n = np.int32(10000000) a = np.random.randn(n).astype(np.float32) b = np.random.randn(n).astype(np.float32) c = np.zeros_like(a) args = [c, a, b, n] tune_params = {""block_size_x"": [32, 64, 128, 256, 512]} tune_kernel(""vector_add"", kernel_string, n, args, tune_params) ``` More [examples here](https://kerneltuner.github.io/kernel_tuner/stable/examples.html). ## Resources - [Full documentation](https://kerneltuner.github.io/kernel_tuner/stable/) - Guides: - [Getting Started](https://kerneltuner.github.io/kernel_tuner/stable/quickstart.html) - [Convolution](https://kerneltuner.github.io/kernel_tuner/stable/convolution.html) - [Diffusion](https://kerneltuner.github.io/kernel_tuner/stable/diffusion.html) - [Matrix Multiplication](https://kerneltuner.github.io/kernel_tuner/stable/matrix_multiplication.html) - Features & Use cases: - [Full list of examples](https://kerneltuner.github.io/kernel_tuner/stable/examples.html) - [Output verification](https://kerneltuner.github.io/kernel_tuner/stable/correctness.html) - [Test GPU code from Python](https://github.com/KernelTuner/kernel_tuner/blob/master/examples/cuda/test_vector_add.py) - [Tune code in both host and device code](https://kerneltuner.github.io/kernel_tuner/stable/hostcode.html) - [Optimization algorithms](https://kerneltuner.github.io/kernel_tuner/stable/optimization.html) - [Mixed-precision & Accuracy tuning](https://github.com/KernelTuner/kernel_tuner/blob/master/examples/cuda/accuracy.py) - [Custom metrics & tuning objectives](https://kerneltuner.github.io/kernel_tuner/stable/metrics.html) - **Kernel Tuner Tutorial** slides [[PDF]](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/slides/2022_SURF/SURF22-Kernel-Tuner-Tutorial.pdf), hands-on: - Vector add example [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/00_Kernel_Tuner_Introduction.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/00_Kernel_Tuner_Introduction.ipynb) - Tuning thread block dimensions [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/01_Kernel_Tuner_Getting_Started.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/01_Kernel_Tuner_Getting_Started.ipynb) - Search space restrictions & output verification [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/02_Kernel_Tuner_Intermediate.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/02_Kernel_Tuner_Intermediate.ipynb) - Visualization & search space optimization [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/03_Kernel_Tuner_Advanced.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/03_Kernel_Tuner_Advanced.ipynb) - **Energy Efficient GPU Computing** tutorial slides [[PDF]](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/slides/2023_Supercomputing/SC23.pdf), hands-on: - Kernel Tuner for GPU energy measurements [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/00_Kernel_Tuner_Introduction.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/00_Kernel_Tuner_Introduction.ipynb) - Code optimizations for energy [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/01_Code_Optimizations_for_Energy.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/01_Code_Optimizations_for_Energy.ipynb) - Mixed precision and accuracy tuning [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/02_Mixed_precision_programming.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/02_Mixed_precision_programming.ipynb) - Optimzing for time vs for energy [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/03_energy_efficient_computing.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/03_energy_efficient_computing.ipynb) ## Kernel Tuner ecosystem <img width=""250px"" src=""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/kernel_launcher.png""/><br />C++ magic to integrate auto-tuned kernels into C++ applications <img width=""250px"" src=""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/kernel_float.png""/><br />C++ data types for mixed-precision CUDA kernel programming <img width=""275px"" src=""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/kernel_dashboard.png""/><br />Monitor, analyze, and visualize auto-tuning runs ## Communication & Contribution - GitHub [Issues](https://github.com/KernelTuner/kernel_tuner/issues): Bug reports, install issues, feature requests, work in progress - GitHub [Discussion group](https://github.com/orgs/KernelTuner/discussions): General questions, Q&A, thoughts Contributions are welcome! For feature requests, bug reports, or usage problems, please feel free to create an issue. For more extensive contributions, check the [contribution guide](http://kerneltuner.github.io/kernel_tuner/stable/contributing.html). ## Citation If you use Kernel Tuner in research or research software, please cite the most relevant among the [publications on Kernel Tuner](https://kerneltuner.github.io/kernel_tuner/stable/#citation). To refer to the project as a whole, please cite: ```latex @article{kerneltuner, author = {Ben van Werkhoven}, title = {Kernel Tuner: A search-optimizing GPU code auto-tuner}, journal = {Future Generation Computer Systems}, year = {2019}, volume = {90}, pages = {347-358}, url = {https://www.sciencedirect.com/science/article/pii/S0167739X18313359}, doi = {https://doi.org/10.1016/j.future.2018.08.004} } ``` [build-system] requires = [""poetry-core>=1.7.0"", ""setuptools>=67.7.2""] build-backend = ""poetry.core.masonry.api"" [tool.poetry] name = ""kernel_tuner"" packages = [{ include = ""kernel_tuner"", from = ""."" }] description = ""An easy to use CUDA/OpenCL kernel tuner in Python"" version = ""1.0"" # adhere to PEP440 versioning: https://packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/#id55 license = ""Apache-2.0"" authors = [ ""Ben van Werkhoven <b.vanwerkhoven@esciencecenter.nl>"", ""Alessio Sclocco <a.sclocco@esciencecenter.nl>"", ""Stijn Heldens <s.heldens@esciencecenter.nl>"", ""Floris-Jan Willemsen <f.j.Willemsen@esciencecenter.nl>"", ""Willem-Jan Palenstijn <w.j.palenstijn@liacs.leidenuniv.nl>"", ""Bram Veenboer <veenboer@astron.nl>"", ""Richard Schoonhoven <Richard.Schoonhoven@cwi.nl>"", ""Leon Oostrum <l.oostrum@esciencecenter.nl"", ] readme = ""README.md"" keywords = [ ""auto-tuning"", ""gpu"", ""computing"", ""pycuda"", ""cuda"", ""pyopencl"", ""opencl"", ] classifiers = [ ""Environment :: Console"", ""Environment :: GPU"", ""Development Status :: 5 - Production/Stable"", ""Intended Audience :: Developers"", ""Intended Audience :: Education"", ""Intended Audience :: Science/Research"", ""License :: OSI Approved :: Apache Software License"", ""Natural Language :: English"", ""Operating System :: MacOS :: MacOS X"", ""Operating System :: POSIX :: Linux"", ""Topic :: Scientific/Engineering"", ""Topic :: Software Development"", ""Topic :: System :: Distributed Computing"", ] include = [ { path = ""test"" }, ] # this ensures that people won't have to clone the whole repo to include notebooks, they can just do `pip install kernel_tuner[tutorial,cuda]` homepage = ""https://KernelTuner.github.io/kernel_tuner/"" documentation = ""https://KernelTuner.github.io/kernel_tuner/"" repository = ""https://github.com/KernelTuner/kernel_tuner"" [tool.poetry.urls] ""Tracker"" = ""https://github.com/KernelTuner/kernel_tuner/issues"" [tool.poetry.build] generate-setup-file = false [tool.poetry.scripts] kernel_tuner = ""kernel_tuner.interface:entry_point"" # ATTENTION: if anything is changed here, run `poetry update` [tool.poetry.dependencies] python = "">=3.9,<3.15"" # NOTE when changing the supported Python versions, also change the test versions in the noxfile numpy = ""^1.26.0"" # Python 3.12 requires numpy at least 1.26 scipy = "">=1.11.0"" # held back by Python 3.9 packaging = ""*"" # required by file_utils jsonschema = ""*"" python-constraint2 = ""^2.1.0"" xmltodict = ""*"" pandas = "">=2.0.0"" scikit-learn = "">=1.0.2"" # Torch can be used with Kernel Tuner, but is not a dependency, should be up to the user to use it # List of optional dependencies for user installation, e.g. `pip install kernel_tuner[cuda]`, used in the below `extras`. # Please note that this is different from the dependency groups below, e.g. `docs` and `test`, those are for development. # CUDA pycuda = { version = ""^2024.1"", optional = true } # Attention: if pycuda is changed here, also change `session.install(""pycuda"")` in the Noxfile nvidia-ml-py = { version = ""^12.535.108"", optional = true } pynvml = { version = ""^11.4.1"", optional = true } # cupy-cuda11x = { version = ""*"", optional = true } # Note: these are completely optional dependencies as described in CONTRIBUTING.rst # cupy-cuda12x = { version = ""*"", optional = true } # cuda-python = { version = ""*"", optional = true } # OpenCL pyopencl = { version = ""*"", optional = true } # Attention: if pyopencl is changed here, also change `session.install(""pyopencl"")` in the Noxfile # HIP hip-python-fork = { version = ""*"", optional = true } # Tutorial (for the notebooks used in the examples) jupyter = { version = ""^1.0.0"", optional = true } matplotlib = { version = ""^3.5.0"", optional = true } [tool.poetry.extras] cuda = [""pycuda"", ""nvidia-ml-py"", ""pynvml""] opencl = [""pyopencl""] cuda_opencl = [""pycuda"", ""pyopencl""] hip = [""hip-python-fork""] tutorial = [""jupyter"", ""matplotlib"", ""nvidia-ml-py""] # ATTENTION: if anything is changed here, run `poetry update` and `poetry export --with docs --without-hashes --format=requirements.txt --output doc/requirements.txt` # Please note that there is overlap with the `dev` group [tool.poetry.group.docs] optional = true [tool.poetry.group.docs.dependencies] sphinx = ""^7.3.7"" sphinx_rtd_theme = ""^2.0.0"" sphinx-pyproject = ""^0.3"" nbsphinx = ""^0.9"" ipython = ""*"" pytest = ""^8.2.0"" # TODO why do we need pytest here? markupsafe = ""^2.0.1"" # TODO why do we need markupsafe here? # sphinx-autodoc-typehints = ""^1.24.0"" # ATTENTION: if anything is changed here, run `poetry update` # Please also run `poetry export -f requirements.txt --output doc/requirements_test.txt --with test` [tool.poetry.group.test] optional = true [tool.poetry.group.test.dependencies] pytest = ""^8.2.0"" pytest-timeout = ""^2.3.1"" pytest-cov = ""^5.0.0"" mock = ""^5.1.0"" nox = ""^2024.4.15"" nox-poetry = ""^1.0.3"" ruff = ""^0.4.4"" pep440 = ""^0.1.2"" tomli = ""^2.0.1"" # held back by Python <= 3.10, can be replaced by built-in [tomllib](https://docs.python.org/3.11/library/tomllib.html) from Python 3.11 onwards # development dependencies are unused for now, as this is already covered by test and docs # # ATTENTION: if anything is changed here, run `poetry update` # [tool.poetry.group.dev.dependencies] [tool.pytest.ini_options] minversion = ""7.4"" pythonpath = [ ""kernel_tuner"", ] # necessary to get coverage reports without installing with `-e` addopts = ""--cov --cov-config=.coveragerc --cov-report=html --cov-report=term-missing --cov-fail-under=60"" testpaths = [""test""] [tool.black] line-length = 120 [tool.ruff] line-length = 120 respect-gitignore = true exclude = [""doc"", ""examples""] select = [ ""E"", # pycodestyle ""F"", # pyflakes, ""D"", # pydocstyle, ] [tool.ruff.pydocstyle] convention = ""google"" Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""{}"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright {yyyy} {name of copyright owner} Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. # YAML 1.2 --- cff-version: 1.2.0 authors: - affiliation: ""Netherlands eScience Center"" family-names: Werkhoven given-names: Ben name-particle: van orcid: ""https://orcid.org/0000-0002-7508-3272"" email: ""b.vanwerkhoven@esciencecenter.nl"" date-released: 2019-12-20 doi: 10.5281/zenodo.1220113 keywords: - ""GPU Computing"" - ""Auto-Tuning"" - ""Performance Optimization"" - ""OpenCL"" - ""CUDA"" license: Apache-2.0 message: ""If you use this software, please cite the following paper."" references: - type: article authors: - affiliation: ""Netherlands eScience Center"" family-names: Werkhoven given-names: Ben name-particle: van orcid: ""https://orcid.org/0000-0002-7508-3272"" email: ""b.vanwerkhoven@esciencecenter.nl"" title: ""Kernel Tuner: A Search-Optimizing GPU Code Auto-Tuner"" journal: ""Future Generation Computer Systems"" year: 2019 repository-code: ""https://github.com/benvanwerkhoven/kernel_tuner"" title: Kernel Tuner version: ""0.3.0""","{
    ""softwareRequirements"": [
        ""numpy: ^1.26.0"",
        ""scipy: >=1.11.0"",
        ""python: >=3.9,<3.15"",
        ""pandas: >=2.0.0"",
        ""scikit-learn: >=1.0.2"",
        ""poetry-core: >=1.7.0"",
        ""setuptools: >=67.7.2"",
        ""jsonschema: *"",
        ""python-constraint2: ^2.1.0"",
        ""xmltodict: *"",
        ""pytest: ^8.2.0"",
        ""pytest-timeout: ^2.3.1"",
        ""pytest-cov: ^5.0.0"",
        ""mock: ^5.1.0"",
        ""nox: ^2024.4.15"",
        ""nox-poetry: ^1.0.3"",
        ""ruff: ^0.4.4"",
        ""pep440: ^0.1.2"",
        ""tomli: ^2.0.1"",
        ""pycuda: ^2024.1"",
        ""nvidia-ml-py: ^12.535.108"",
        ""pynvml: ^11.4.1"",
        ""pyopencl: *"",
        ""hip-python-fork: *"",
        ""jupyter: ^1.0.0"",
        ""matplotlib: ^3.5.0""
    ],
    ""buildInstructions"": ""pip install kernel_tuner[cuda]"",
    ""author"": [
        {
            ""name"": ""Ben van Werkhoven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7508-3272"",
            ""email"": ""b.vanwerkhoven@esciencecenter.nl""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1220113"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""GPU Computing"",
        ""Auto-Tuning"",
        ""Performance Optimization"",
        ""OpenCL"",
        ""CUDA""
    ]
}","{
    ""softwareRequirements"": [
        ""numpy: ^1.26.0"",
        ""scipy: >=1.11.0"",
        ""python: >=3.9,<3.15"",
        ""pandas: >=2.0.0"",
        ""scikit-learn: >=1.0.2"",
        ""poetry-core: >=1.7.0"",
        ""setuptools: >=67.7.2"",
        ""jsonschema: *"",
        ""python-constraint2: ^2.1.0"",
        ""xmltodict: *"",
        ""pytest: ^8.2.0"",
        ""pytest-timeout: ^2.3.1"",
        ""pytest-cov: ^5.0.0"",
        ""mock: ^5.1.0"",
        ""nox: ^2024.4.15"",
        ""nox-poetry: ^1.0.3"",
        ""ruff: ^0.4.4"",
        ""pep440: ^0.1.2"",
        ""tomli: ^2.0.1"",
        ""pycuda: ^2024.1"",
        ""nvidia-ml-py: ^12.535.108"",
        ""pynvml: ^11.4.1"",
        ""pyopencl: *"",
        ""hip-python-fork: *"",
        ""jupyter: ^1.0.0"",
        ""matplotlib: ^3.5.0""
    ],
    ""buildInstructions"": ""pip install kernel_tuner[cuda]"",
    ""author"": [
        {
            ""name"": ""Ben van Werkhoven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7508-3272"",
            ""email"": ""b.vanwerkhoven@esciencecenter.nl""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1220113"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""GPU Computing"",
        ""Auto-Tuning"",
        ""Performance Optimization"",
        ""OpenCL"",
        ""CUDA""
    ]
}","{
    ""softwareRequirements"": [
        ""python:>=3.9,<3.15"",
        ""numpy:^1.26.0"",
        ""scipy:>=1.11.0"",
        ""packaging:*"",
        ""jsonschema:*"",
        ""python-constraint2:^2.1.0"",
        ""xmltodict:*"",
        ""pandas:>=2.0.0"",
        ""scikit-learn:>=1.0.2"",
        ""pycuda:^2024.1"",
        ""nvidia-ml-py:^12.535.108"",
        ""pynvml:^11.4.1"",
        ""pyopencl:*"",
        ""hip-python-fork:*"",
        ""jupyter:^1.0.0"",
        ""matplotlib:^3.5.0"",
        ""packaging>=1.16.8""
    ],
    ""buildInstructions"": ""Installation\n First, make sure you have your CUDA, OpenCL, or HIP compiler installed\n Then type: `pip install kernel_tuner[cuda]`, `pip install kernel_tuner[opencl]`, or `pip install kernel_tuner[hip]`\n or why not all of them: `pip install kernel_tuner[cuda,opencl,hip]`\nMore information on installation, also for other languages, in the installation guide."",
    ""author"": [
        ""Ben van Werkhoven <b.vanwerkhoven@esciencecenter.nl>"",
        ""Alessio Sclocco <a.sclocco@esciencecenter.nl>"",
        ""Stijn Heldens <s.heldens@esciencecenter.nl>"",
        ""Floris-Jan Willemsen <f.j.Willemsen@esciencecenter.nl>"",
        ""Willem-Jan Palenstijn <w.j.palenstijn@liacs.leidenuniv.nl>"",
        ""Bram Veenboer <veenboer@astron.nl>"",
        ""Richard Schoonhoven <Richard.Schoonhoven@cwi.nl>"",
        ""Leon Oostrum <l.oostrum@esciencecenter.nl""
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""https://zenodo.org/badge/latestdoi/54894320"",
        ""or"",
        ""https://doi.org/10.1016/j.future.2018.08.004""
    ],
    ""license"": ""Apache Software License"",
    ""keywords"": [
        ""auto-tuning"",
        ""gpu"",
        ""computing"",
        ""pycuda"",
        ""cuda"",
        ""pyopencl"",
        ""opencl""
    ]
}","{  
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/KernelTuner""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/CITATION.cff"",
    ""https://doi.org/10.1016/j.future.2018.08.004""
  ],
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/LICENSE""
  },
  ""keywords"": ""auto-tuning, autotuning, c, cplusplus, cuda, cuda-kernels, gpu, gpu-computing, kernel-tuner, machine-learning, opencl, opencl-kernels, optimization, python, software-development, testing"",
  ]
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/LICENSE""
  },
  ""codeRepository"": ""https://github.com/KernelTuner/kernel_tuner"",
  ""issueTracker"": ""https://github.com/KernelTuner/kernel_tuner/issues"",
  ""dateCreated"": ""2016-03-28"",
  ""dateModified"": ""2025-03-12"",
  ""downloadUrl"": ""https://github.com/KernelTuner/kernel_tuner/releases"",
  ""name"": ""kernel_tuner"",
  ""logo"": ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/KernelTuner-logo.png"",
  ""keywords"": ""auto-tuning, autotuning, c, cplusplus, cuda, cuda-kernels, gpu, gpu-computing, kernel-tuner, machine-learning, opencl, opencl-kernels, optimization, python, software-development, testing"",
  ""programmingLanguage"": [
    ""Python""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/KernelTuner""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/CITATION.cff"",
    ""https://doi.org/10.1016/j.future.2018.08.004""
  ],
  ""readme"": ""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/README.md"",
  ""description"": [
    ""Kernel Tuner"",
    ""- [Full documentation](https://kerneltuner.github.io/kernel_tuner/stable/)\n- Guides:\n  - [Getting Started](https://kerneltuner.github.io/kernel_tuner/stable/quickstart.html)\n  - [Convolution](https://kerneltuner.github.io/kernel_tuner/stable/convolution.html)\n  - [Diffusion](https://kerneltuner.github.io/kernel_tuner/stable/diffusion.html)\n  - [Matrix Multiplication](https://kerneltuner.github.io/kernel_tuner/stable/matrix_multiplication.html)\n- Features & Use cases:\n  - [Full list of examples](https://kerneltuner.github.io/kernel_tuner/stable/examples.html)\n  - [Output verification](https://kerneltuner.github.io/kernel_tuner/stable/correctness.html)\n  - [Test GPU code from Python](https://github.com/KernelTuner/kernel_tuner/blob/master/examples/cuda/test_vector_add.py)\n  - [Tune code in both host and device code](https://kerneltuner.github.io/kernel_tuner/stable/hostcode.html)\n  - [Optimization algorithms](https://kerneltuner.github.io/kernel_tuner/stable/optimization.html)\n  - [Mixed-precision & Accuracy tuning](https://github.com/KernelTuner/kernel_tuner/blob/master/examples/cuda/accuracy.py)\n  - [Custom metrics & tuning objectives](https://kerneltuner.github.io/kernel_tuner/stable/metrics.html)\n- **Kernel Tuner Tutorial** slides [[PDF]](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/slides/2022_SURF/SURF22-Kernel-Tuner-Tutorial.pdf), hands-on:\n  - Vector add example [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/00_Kernel_Tuner_Introduction.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/00_Kernel_Tuner_Introduction.ipynb)\n  - Tuning thread block dimensions [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/01_Kernel_Tuner_Getting_Started.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/01_Kernel_Tuner_Getting_Started.ipynb)\n  - Search space restrictions & output verification [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/02_Kernel_Tuner_Intermediate.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/02_Kernel_Tuner_Intermediate.ipynb)\n  - Visualization & search space optimization [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/03_Kernel_Tuner_Advanced.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/hands-on/cuda/03_Kernel_Tuner_Advanced.ipynb)\n- **Energy Efficient GPU Computing** tutorial slides [[PDF]](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/slides/2023_Supercomputing/SC23.pdf), hands-on:\n  - Kernel Tuner for GPU energy measurements [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/00_Kernel_Tuner_Introduction.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/00_Kernel_Tuner_Introduction.ipynb)\n  - Code optimizations for energy [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/01_Code_Optimizations_for_Energy.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/01_Code_Optimizations_for_Energy.ipynb)\n  - Mixed precision and accuracy tuning [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/02_Mixed_precision_programming.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/02_Mixed_precision_programming.ipynb)\n  - Optimzing for time vs for energy [[.ipynb](https://github.com/KernelTuner/kernel_tuner_tutorial/blob/master/energy/03_energy_efficient_computing.ipynb)] [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/KernelTuner/kernel_tuner_tutorial/blob/master/energy/03_energy_efficient_computing.ipynb) \n"",
    ""Contributions are welcome! For feature requests, bug reports, or usage problems, please feel free to create an issue.\nFor more extensive contributions, check the [contribution guide](http://kerneltuner.github.io/kernel_tuner/stable/contributing.html).\n \n"",
    ""<img width=\""250px\"" src=\""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/kernel_launcher.png\""/><br />C++ magic to integrate auto-tuned kernels into C++ applications  \n<img width=\""250px\"" src=\""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/kernel_float.png\""/><br />C++ data types for mixed-precision CUDA kernel programming \n<img width=\""275px\"" src=\""https://raw.githubusercontent.com/KernelTuner/kernel_tuner/master/doc/images/kernel_dashboard.png\""/><br />Monitor, analyze, and visualize auto-tuning runs \n"",
    ""--- \n\nCreate optimized GPU applications in any mainstream GPU \nprogramming language (CUDA, HIP, OpenCL, OpenACC). \nWhat Kernel Tuner does: \n- Works as an external tool to benchmark and optimize GPU kernels in isolation\n- Can be used directly on existing kernel code without extensive changes \n- Can be used with applications in any host programming language\n- Blazing fast search space construction\n- More than 20  to speedup tuning\n- Energy measurements and optimizations \n- ... and much more! For example, , , , , see . \n""
  ]
}"
https://github.com/dtscalibration/python-dts-calibration,"start-badges .. list-table:: * - Docs - |docs| * - Tests - |tests| * - Package - | |version| |supported-versions| |commits-since| * - Citable - |zenodo| * - Example notebooks - |example-notebooks| .. |docs| image:: https://readthedocs.org/projects/python-dts-calibration/badge/?style=flat :target: https://python-dts-calibration.readthedocs.io/en/latest/ :alt: Documentation Status .. |tests| image:: https://github.com/dtscalibration/python-dts-calibration/actions/workflows/build.yml/badge.svg :target: https://github.com/dtscalibration/python-dts-calibration/actions/workflows/build.yml :alt: Test Status .. |version| image:: https://img.shields.io/pypi/v/dtscalibration.svg :alt: PyPI Package latest release :target: https://pypi.python.org/pypi/dtscalibration .. |commits-since| image:: https://img.shields.io/github/commits-since/dtscalibration/python-dts-calibration/v3.1.0.svg :alt: Commits since latest release :target: https://github.com/dtscalibration/python-dts-calibration/compare/v3.1.0...main .. |wheel| image:: https://img.shields.io/pypi/wheel/dtscalibration.svg :alt: PyPI Wheel :target: https://pypi.python.org/pypi/dtscalibration .. |supported-versions| image:: https://img.shields.io/pypi/pyversions/dtscalibration.svg :alt: Supported versions :target: https://pypi.python.org/pypi/dtscalibration .. |zenodo| image:: https://zenodo.org/badge/143077491.svg :alt: It would be greatly appreciated if you could cite this package in eg articles presentations :target: https://zenodo.org/badge/latestdoi/143077491 .. |example-notebooks| image:: https://mybinder.org/badge.svg :alt: Interactively run the example notebooks online :target: https://mybinder.org/v2/gh/dtscalibration/python-dts-calibration/main?labpath=docs%2Fnotebooks .. end-badges A Python package to load Distributed Temperature Sensing files, perform a calibration, and plot the result. A detailed description of the calibration procedure can be found at https://doi.org/10.3390/s20082235 . Do you have questions, ideas or just want to say hi? Please leave a message on the ` discussions page <https://github.com/dtscalibration/python-dts-calibration/discussions>`_! Installation ============ .. code-block:: zsh pip install dtscalibration Or the development version directly from GitHub .. code-block:: zsh pip install https://github.com/dtscalibration/python-dts-calibration/zipball/main --upgrade Package features ================ DTS measures temperature by calibrating backscatter measurements to sections with a known temperature. DTS devices provide a simple interface to perform a limited calibration. Re-calibrating your measurements with this Python package gives you better temperature estimates and additional options. * Advanced calibration routine * Supports `single <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/07Calibrate_single_ended.ipynb>`_- and `double-ended <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/08Calibrate_double_ended.ipynb>`_ setups * Compute uncertainty of the calibrated temperature * All measurements are used to estimate parameter values that are constant over time. * Weighted least-squares calibration * `Fixing parameters to a previously determined value <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/13Fixed_parameter_calibration.ipynb>`_ * `(Asymmetric) step loss correction <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/14Lossy_splices.ipynb>`_ so that fiber connectors can be used instead of welds/splices. * `Matching temperature sections <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/15Matching_sections.ipynb>`_ to support J-configurations * Dynamic reference section definition * Tools for merging and aligning double-ended setups * Data formats of most manufacturers are supported Devices currently supported =========================== * Silixa Ltd.: **Ultima** & **XT-DTS** .xml files *(up to version 8.1)* * Sensornet Ltd.: **Oryx**, **Halo** & **Sentinel** .ddf files * AP Sensing: **N4386B** .xml files *(single ended only)* * SensorTran: **SensorTran 5100** .dat binary files *(single ended only)* Documentation ============= * A full calibration procedure for single-ended setups is presented in notebook `07Calibrate_single_ended.ipynb <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/07Calibrate_single_ended.ipynb>`_ and for double-ended setups in `08Calibrate_double_ended.ipynb <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/08Calibrate_double_ended.ipynb>`_. * Documentation at `readthedocs <https://python-dts-calibration.readthedocs.io/en/latest/>`_. * Example notebooks (`./docs/notebooks`) that work within the browser can be viewed `here <https://mybinder.org/v2/gh/dtscalibration/python-dts-calibration/main?labpath=docs%2Fnotebooks>`_. How to cite =========== The following article explains and discusses the calibration procedure: des Tombe, B., Schilperoort, B., & Bakker, M. (2020). Estimation of Temperature and Associated Uncertainty from Fiber-Optic Raman-Spectrum Distributed Temperature Sensing. Sensors, 20(8), 2235. https://doi.org/10.3390/s20082235 Cite the specific implementation / repository via Zenodo: 1. Check the version of `dtscalibration` that is used in your Python console with: >>> # The following line introduces the .dts accessor for xarray datasets >>> import dtscalibration # noqa: E401 >>> dtscalibration.__version__ '3.0.1' 2. Go to `Zenodo <https://zenodo.org/search?q=conceptrecid:%221410097%22&sort=-version&all_versions=True>`_ and follow the link to the version of interest. 3. The citation is found on the bottom right of the page. [build-system] requires = [""hatchling>=1.8.0"", ""hatch-vcs""] build-backend = ""hatchling.build"" [tool.hatch.version] path = ""src/dtscalibration/__init__.py"" [tool.hatch.build.targets.sdist] exclude = [ ""/.github"", ""/.mypy_cache"", ""/.pytest_cache"", ""/.githooks"", ""sonar-project.properties"" ] [tool.hatch.build.targets.wheel] packages = [""src/dtscalibration""] [tool.hatch.publish.index] disable = true # Requires confirmation when publishing to pypi. [project] name = ""dtscalibration"" version = ""3.1.0"" description = ""Load Distributed Temperature Sensing (DTS) files, calibrate the temperature and estimate its uncertainty."" readme = ""README.rst"" license = ""BSD-3-Clause"" requires-python = "">=3.9, <3.13"" authors = [ {name = ""Bas des Tombe, Bart Schilperoort""}, ] maintainers = [ {name = ""Bas des Tombe, Bart Schilperoort""}, ] keywords = [ ""DTS"", ""distributed temperature sensing"", ""calibration"", ""confidence intervals"", ] classifiers = [ ""Development Status :: 5 - Production/Stable"", ""Intended Audience :: Developers"", ""Intended Audience :: Science/Research"", ""License :: OSI Approved :: BSD License"", ""Operating System :: Unix"", ""Operating System :: POSIX"", ""Operating System :: Microsoft :: Windows"", ""Programming Language :: Python"", ""Programming Language :: Python :: 3.9"", ""Programming Language :: Python :: 3.10"", ""Programming Language :: Python :: 3.11"", ""Programming Language :: Python :: 3.12"", ""Topic :: Utilities"", ] dependencies = [ ""numpy"", ""xarray[accel]"", ""dask[distributed]"", ""pandas"", ""pyyaml>=6.0.1"", ""xmltodict"", ""scipy"", ""matplotlib"", ""netCDF4>=1.6.4"", ""nc-time-axis>=1.4.1"" # plot dependency of xarray ] [project.optional-dependencies] dev = [ ""hatch"", ""bump2version"", ""ruff"", ""black[jupyter]"", # for formatting ""mypy"", # for type checking ""types-PyYAML"", # for pyyaml types ""types-xmltodict"", # for xmltodict types ""pandas-stubs"", # for pandas types ""pytest"", ""pytest-cov"", # for coverage ""pytest-xdist"", # for parallel testing ""jupyter"", ""nbformat"", # Needed to run the tests ] docs = [ # Required for ReadTheDocs ""IPython"", ""myst_parser"", ""matplotlib>=3.0.0"", ""sphinx"", ""sphinx_rtd_theme"", ""sphinx-autoapi"", ""sphinx-automodapi"", ""sphinx-autosummary-accessors"", ""coverage[toml]"", ""nbsphinx"", ""ipykernel"", 'recommonmark', 'sphinx-automodapi', 'pypandoc', 'jupyter_client', ] [tool.hatch.envs.default] features = [""dev""] [tool.hatch.envs.default.scripts] lint = [ ""ruff check src/ tests/ examples/"", ""black --check docs/notebooks"", ""mypy src/"", ] format = [""ruff check src/ tests/ examples/ --fix"", ""ruff format src/ tests/ examples/"", ""black docs/notebooks"", ""lint"",] test = [""pytest ./src/ ./tests/"",] fast-test = [""pytest ./tests/ -m \""not slow\"""",] coverage = [ ""pytest --cov --cov-report term --cov-report xml --cov-branch --junitxml=xunit-result.xml tests/"", ] [tool.hatch.envs.docs] features = [""docs""] [tool.hatch.envs.docs.scripts] build = [ ""sphinx-build -E -c docs -b html docs dist/docs"", #""python docs/nb_examples_to_docs.py"", ] [tool.hatch.envs.matrix_test] features = [""dev""] [[tool.hatch.envs.matrix_test.matrix]] python = [""3.9"", ""3.10"", ""3.11"", ""3.12""] [tool.hatch.envs.matrix_test.scripts] test = [""pytest ./src/ ./tests/"",] # --doctest-modules fast-test = [""pytest ./tests/ -m \""not slow\"""",] [tool.pytest.ini_options] testpaths = [""tests""] markers = [ ""slow: marks tests as slow (deselect with '-m \""not slow\""')"", ] [tool.ruff] select = [ # It would be nice to have the commented out checks working. ""E"", # pycodestyle ""F"", # pyflakes # ""B"", # flake8-bugbear # ""D"", # pydocstyle # ""C90"", # mccabe complexity # ""N"", # PEP8-naming ""UP"", # pyupgrade (upgrade syntax to current syntax) ""PLE"", # Pylint error https://github.com/charliermarsh/ruff#error-ple # ""PLR"", # Pylint refactor (e.g. too-many-arguments) ""PLW"", # Pylint warning (useless-else-on-loop) ""I"", # isort ""SIM"", # flake8-simplify ] extend-select = [ #""D401"", # First line should be in imperative mood ""D400"", # First line should end in a period. ""D404"", # First word of the docstring should not be ""This"" ""TID252"", # No relative imports (not pep8 compliant) ] ignore = [ ""PLR2004"", # magic value used in comparson ""E501"", # Line too long (want to have fixed ] line-length = 88 exclude = [""docs"", ""build"", ""tests/data""] # Allow unused variables when underscore-prefixed. dummy-variable-rgx = ""^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"" # Minimum supported Python version target-version = ""py39"" [tool.ruff.per-file-ignores] ""tests/**"" = [""D""] [tool.ruff.pydocstyle] convention = ""google"" [tool.ruff.mccabe] max-complexity = 10 [tool.ruff.isort] known-first-party = [""dtscalibration""] force-single-line = true [tool.black] line-length = 88 target-version = ['py39', 'py310', 'py311'] extend-exclude = "".venv"" [tool.mypy] ignore_missing_imports = true # Preferably false, but matplotlib, scipy and statsmodels are missing typing stubs python_version = ""3.9"" [tool.coverage.run] branch = true source = [""src/dtscalibration""] command_line = ""-m pytest"" [tool.coverage.report] exclude_lines = [ ""pragma: no cover"", ""@overload"", ""if TYPE_CHECKING:"", ""if typing.TYPE_CHECKING:"" ] BSD 3-Clause License Copyright (c) 2023, Bas des Tombe, Bart Schilperoort All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. # YAML 1.2 --- message: If you use this software, please cite it as below. authors: - affiliation: ""Water Resources Section, Faculty of Civil Engineering and Geosciences, Delft University of Technology, Delft, Netherlands"" family-names: ""des Tombe"" given-names: ""Bas François"" orcid: ""https://orcid.org/0000-0002-3302-7387"" - affiliation: ""Water Resources Section, Faculty of Civil Engineering and Geosciences, Delft University of Technology, Delft, Netherlands"" family-names: Schilperoort given-names: Bart orcid: ""https://orcid.org/0000-0003-4487-9822"" keywords: - Distributed Temperature Sensing - DTS - calibration - Python cff-version: ""1.0.3"" doi: ""10.5281/zenodo.1410097"" license: ""BSD-3-Clause"" repository-code: ""https://github.com/dtscalibration/python-dts-calibration"" title: ""Python distributed temperature sensing calibration"" version: ""v3.1.0"" url: ""https://python-dts-calibration.readthedocs.io""","{
    ""softwareRequirements"": [
        ""numpy"",
        ""xarray[accel]"",
        ""dask[distributed]"",
        ""pandas"",
        ""pyyaml>=6.0.1"",
        ""xmltodict"",
        ""scipy"",
        ""matplotlib"",
        ""netCDF4>=1.6.4"",
        ""nc-time-axis>=1.4.1""
    ],
    ""buildInstructions"": ""pip install dtscalibration or pip install https://github.com/dtscalibration/python-dts-calibration/zipball/main --upgrade"",
    ""author"": [
        {
            ""name"": ""Bas des Tombe, Bart Schilperoort"",
            ""affiliation"": ""Water Resources Section, Faculty of Civil Engineering and Geosciences, Delft University of Technology, Delft, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-3302-7387""
        },
        {
            ""name"": ""Bas des Tombe, Bart Schilperoort"",
            ""affiliation"": ""Water Resources Section, Faculty of Civil Engineering and Geosciences, Delft University of Technology, Delft, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0003-4487-9822""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.3390/s20082235"",
    ""license"": ""BSD-3-Clause"",
    ""keywords"": [
        ""DTS"",
        ""Distributed Temperature Sensing"",
        ""Calibration"",
        ""Confidence Intervals"",
        ""Python""
    ]
}","{
    ""softwareRequirements"": [
        ""numpy"",
        ""xarray[accel]"",
        ""dask[distributed]"",
        ""pandas"",
        ""pyyaml>=6.0.1"",
        ""xmltodict"",
        ""scipy"",
        ""matplotlib"",
        ""netCDF4>=1.6.4"",
        ""nc-time-axis>=1.4.1""
    ],
    ""buildInstructions"": ""pip install dtscalibration or pip install https://github.com/dtscalibration/python-dts-calibration/zipball/main --upgrade"",
    ""author"": [
        {
            ""name"": ""Bas des Tombe, Bart Schilperoort"",
            ""affiliation"": ""Water Resources Section, Faculty of Civil Engineering and Geosciences, Delft University of Technology, Delft, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-3302-7387""
        },
        {
            ""name"": ""Bas des Tombe, Bart Schilperoort"",
            ""affiliation"": ""Water Resources Section, Faculty of Civil Engineering and Geosciences, Delft University of Technology, Delft, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0003-4487-9822""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.3390/s20082235"",
    ""license"": ""BSD-3-Clause"",
    ""keywords"": [
        ""DTS"",
        ""Distributed Temperature Sensing"",
        ""Calibration"",
        ""Confidence Intervals"",
        ""Python""
    ]
}","{
    ""softwareRequirements"": [
        ""numpy"",
        ""xarray[accel]"",
        ""dask[distributed]"",
        ""pandas"",
        ""pyyaml>=6.0.1"",
        ""xmltodict"",
        ""scipy"",
        ""matplotlib"",
        ""netCDF4>=1.6.4"",
        ""nc-time-axis>=1.4.1""
    ],
    ""buildInstructions"": ""Installation\n\n```\npip install dtscalibration\n```\n\nOr the development version directly from GitHub\n\n```\npip install https://github.com/dtscalibration/python-dts-calibration/zipball/main --upgrade\n```"",
    ""author"": [
        {
            ""name"": ""Bas des Tombe, Bart Schilperoort""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""https://doi.org/10.3390/s20082235""
    ],
    ""license"": ""BSD-3-Clause"",
    ""keywords"": [
        ""DTS"",
        ""distributed temperature sensing"",
        ""calibration"",
        ""confidence intervals""
    ]
}","{
  ""buildInstructions"": [
    ""https://python-dts-calibration.readthedocs.io/"",
    ""https://github.com/dtscalibration/python-dts-calibration/wiki"",
    ""https://raw.githubusercontent.com/dtscalibration/python-dts-calibration/main/README.rst""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/dtscalibration""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/dtscalibration/python-dts-calibration/main/CITATION.cff""
  ],
 ""license"": {
    ""name"": ""BSD 3-Clause \""New\"" or \""Revised\"" License"",
    ""url"": ""https://raw.githubusercontent.com/dtscalibration/python-dts-calibration/main/LICENSE""
  },
  ""keywords"": ""calibration, dts, python, temperature"",

}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""BSD 3-Clause \""New\"" or \""Revised\"" License"",
    ""url"": ""https://raw.githubusercontent.com/dtscalibration/python-dts-calibration/main/LICENSE""
  },
  ""codeRepository"": ""https://github.com/dtscalibration/python-dts-calibration"",
  ""issueTracker"": ""https://github.com/dtscalibration/python-dts-calibration/issues"",
  ""dateCreated"": ""2018-07-31"",
  ""dateModified"": ""2025-02-26"",
  ""downloadUrl"": ""https://github.com/dtscalibration/python-dts-calibration/releases"",
  ""name"": ""python-dts-calibration"",
  ""keywords"": ""calibration, dts, python, temperature"",
  ""programmingLanguage"": [
    ""Python"",
    ""Jupyter Notebook""
  ],
  ""buildInstructions"": [
    ""https://python-dts-calibration.readthedocs.io/"",
    ""https://github.com/dtscalibration/python-dts-calibration/wiki"",
    ""https://raw.githubusercontent.com/dtscalibration/python-dts-calibration/main/README.rst""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/dtscalibration""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/dtscalibration/python-dts-calibration/main/CITATION.cff""
  ],
  ""readme"": ""https://raw.githubusercontent.com/dtscalibration/python-dts-calibration/main/README.rst"",
  ""description"": [
    ""A Python package to load raw Distributed Temperature Sensing (DTS) files, perform a calibration, and plot the result."",
    ""DTS measures temperature by calibrating backscatter measurements to sections with a known temperature. DTS devices provide a simple interface to perform a limited calibration. Re-calibrating your measurements with this Python package gives you better temperature estimates and additional options. \n"",
    ""    des Tombe, B., Schilperoort, B., & Bakker, M. (2020). Estimation of Temperature and Associated Uncertainty from Fiber-Optic Raman-Spectrum Distributed Temperature Sensing. Sensors, 20(8), 2235. https://doi.org/10.3390/s20082235 \nCite the specific implementation / repository via Zenodo: \n1. Check the version of `dtscalibration` that is used in your Python console with: \n    >>> # The following line introduces the .dts accessor for xarray datasets\n    >>> import dtscalibration  # noqa: E401\n    >>> dtscalibration.__version__\n    '3.0.1'\n2. Go to `Zenodo <https://zenodo.org/search?q=conceptrecid:%221410097%22&sort=-version&all_versions=True>`_ and follow the link to the version of interest.\n3. The citation is found on the bottom right of the page.\n \n"",
    ""* Silixa Ltd.: **Ultima** & **XT-DTS** .xml files *(up to version 8.1)*\n* Sensornet Ltd.: **Oryx**, **Halo** & **Sentinel** .ddf files\n* AP Sensing: **N4386B** .xml files *(single ended only)*\n* SensorTran: **SensorTran 5100** .dat binary files *(single ended only)*\n \n"",
    ""* Advanced calibration routine\n   * Supports `single <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/07Calibrate_single_ended.ipynb>`_- and `double-ended <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/08Calibrate_double_ended.ipynb>`_ setups\n   * Compute uncertainty of the calibrated temperature\n   * All measurements are used to estimate parameter values that are constant over time.\n   * Weighted least-squares calibration\n   * `Fixing parameters to a previously determined value <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/13Fixed_parameter_calibration.ipynb>`_\n   * `(Asymmetric) step loss correction <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/14Lossy_splices.ipynb>`_ so that fiber connectors can be used instead of welds/splices.\n   * `Matching temperature sections <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/15Matching_sections.ipynb>`_ to support J-configurations\n* Dynamic reference section definition\n* Tools for merging and aligning double-ended setups\n* Data formats of most manufacturers are supported \n"",
    ""Package features\n================\nDTS measures temperature by calibrating backscatter measurements to sections with a known temperature. DTS devices provide a simple interface to perform a limited calibration. Re-calibrating your measurements with this Python package gives you better temperature estimates and additional options. \nDevices currently supported\n===========================\n* Silixa Ltd.: **Ultima** & **XT-DTS** .xml files *(up to version 8.1)*\n* Sensornet Ltd.: **Oryx**, **Halo** & **Sentinel** .ddf files\n* AP Sensing: **N4386B** .xml files *(single ended only)*\n* SensorTran: **SensorTran 5100** .dat binary files *(single ended only)* \nDocumentation\n============= \n* A full calibration procedure for single-ended setups is presented in notebook `07Calibrate_single_ended.ipynb <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/07Calibrate_single_ended.ipynb>`_ and for double-ended setups in `08Calibrate_double_ended.ipynb <https://github.com/dtscalibration/python-dts-calibration/blob/main/docs/notebooks/08Calibrate_double_ended.ipynb>`_.\n* Documentation at `readthedocs <https://python-dts-calibration.readthedocs.io/en/latest/>`_.\n* Example notebooks (`./docs/notebooks`) that work within the browser can be viewed `here <https://mybinder.org/v2/gh/dtscalibration/python-dts-calibration/main?labpath=docs%2Fnotebooks>`_. \nHow to cite\n===========\nThe following article explains and discusses the calibration procedure: \n"",
    "".. code-block:: zsh \nOr the development version directly from GitHub \n"",
    ""========\nOverview\n======== \nDo you have questions, ideas or just want to say hi? Please leave a message on the ` discussions page `_! \n"",
    ""Overview\n======== \n.. start-badges \n.. list-table:: \n    * - Docs\n      - |docs|\n    * - Tests\n      - |tests|\n    * - Package\n      - | |version| |supported-versions| |commits-since|\n    * - Citable\n      - |zenodo|\n    * - Example notebooks\n      - |example-notebooks| \n.. |docs| image:: https://readthedocs.org/projects/python-dts-calibration/badge/?style=flat\n    :target: https://python-dts-calibration.readthedocs.io/en/latest/\n    :alt: Documentation Status \n.. |version| image:: https://img.shields.io/pypi/v/dtscalibration.svg\n    :alt: PyPI Package latest release\n    :target: https://pypi.python.org/pypi/dtscalibration \n.. |commits-since| image:: https://img.shields.io/github/commits-since/dtscalibration/python-dts-calibration/v3.1.0.svg\n    :alt: Commits since latest release\n    :target: https://github.com/dtscalibration/python-dts-calibration/compare/v3.1.0...main \n.. |wheel| image:: https://img.shields.io/pypi/wheel/dtscalibration.svg\n    :alt: PyPI Wheel\n    :target: https://pypi.python.org/pypi/dtscalibration \n.. |supported-versions| image:: https://img.shields.io/pypi/pyversions/dtscalibration.svg\n    :alt: Supported versions\n    :target: https://pypi.python.org/pypi/dtscalibration \n.. |zenodo| image:: https://zenodo.org/badge/143077491.svg\n   :alt: It would be greatly appreciated if you could cite this package in eg articles presentations\n   :target: https://zenodo.org/badge/latestdoi/143077491 \n.. |example-notebooks| image:: https://mybinder.org/badge.svg\n   :alt: Interactively run the example notebooks online\n   :target: https://mybinder.org/v2/gh/dtscalibration/python-dts-calibration/main?labpath=docs%2Fnotebooks \n.. end-badges \nA Python package to load Distributed Temperature Sensing files, perform a calibration, and plot the result. A detailed description of the calibration procedure can be found at https://doi.org/10.3390/s20082235 . \nDo you have questions, ideas or just want to say hi? Please leave a message on the ` discussions page <https://github.com/dtscalibration/python-dts-calibration/discussions>`_! \nInstallation\n============ \n""
  ]
}"
https://github.com/NLeSC/python-template,"# Netherlands eScience Center Python Template <img align=""right"" width=""160"" src=""logo.png"" alt='Python Template logo, created using ChatGPT 4o on 10 September 2024 using prompt ""generate a logo of a copier that looks like a snake-scientist""'> Spend less time setting up and configuring your new Python packages by using this template. This [Copier](https://copier.readthedocs.io) template includes best practices for research software so your new package will include these practices from the start. You can choose from various user profiles, each offering a range of features to suit your needs. ## User profiles The template profiles for a Python package offer varying levels of customization to cater to different user needs. Below are the profiles the template offers. ### Minimum This profile offers the essential features to begin developing a Python package, making it ideal for first-time research software developers. Additional features can be added as needed. ### Recommended This option provides a pre-selected set of features for research software, which users can fully customize. ### Let me choose This fully customizable profile enables you to selectively include or exclude features in your Python package. ## Features - Boilerplate unit tests and documentation, - [Python static setup configuration](template/pyproject.toml.jinja), - Open source software license, - Continuous integration with [GitHub action workflows](template/.github/workflows) for building, testing, link checking and linting, - Code style checking with [ruff](https://beta.ruff.rs/), - [Editorconfig](template/.editorconfig), - Usage and contribution documents: - [README.md](template/README.md.jinja) for package users, - [README.dev.md](template/README.dev.md.jinja) for package developer, - [project_setup.md](template/project_setup.md.jinja) with extensive documentation about project setup, - [Changelog](template/%7B%25%20if%20AddChangeLog%20%25%7DCHANGELOG.md%7B%25%20endif%20%25%7D), - [Code of Conduct](template/CODE_OF_CONDUCT.md.jinja), - [Contributing guidelines](template/CONTRIBUTING.md.jinja), - Continuous code quality and code coverage reporting using [Sonarcloud](https://sonarcloud.io/), - Automatic creation of [issues](template/.github/next_steps) with instructions how to pass all GitHub action workflows and integrate with services like Zenodo and Read the Docs, - Instructions how to make package [citable](.github/next_steps/%7B%25%20if%20AddCitation%20%25%7D02_citation.md%7B%25%20endif%20%25%7D.jinja) - FAIR software recommendation badge, - Optional [pre commit hook](template/README.dev.md.jinja#running-linters-locally) to catch lint errors early ## Badges | fair-software.nl recommendations | | | :-- | :-- | | (1/5) code repository | [![github repo badge](https://img.shields.io/badge/github-repo-000.svg?logo=github&labelColor=gray&color=blue)](https://github.com/nlesc/python-template) | | (2/5) license | [![github license badge](https://img.shields.io/github/license/nlesc/python-template)](https://github.com/nlesc/python-template) | | (3/5) community registry | [![RSD](https://img.shields.io/badge/rsd-python--template-00a3e3.svg)](https://research-software.nl/software/nlesc-python-template) | | (4/5) citation | [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1310751.svg)](https://doi.org/10.5281/zenodo.1310751) | | (5/5) checklist | &nbsp; | | overall | [![fair-software badge](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8B-yellow)](https://fair-software.eu) | | **Other best practices** | &nbsp; | | &nbsp; | &nbsp; | | **GitHub Actions** | &nbsp; | | Citation metadata consistency | [![cffconvert](https://github.com/nlesc/python-template/actions/workflows/cffconvert.yml/badge.svg)](https://github.com/nlesc/python-template/actions/workflows/cffconvert.yml) | | Link checker | [![link-check](https://github.com/nlesc/python-template/actions/workflows/link-check.yml/badge.svg)](https://github.com/nlesc/python-template/actions/workflows/link-check.yml) | | Tests | [![tests](https://github.com/nlesc/python-template/actions/workflows/tests.yml/badge.svg)](https://github.com/nlesc/python-template/actions/workflows/tests.yml) | ## How to use There are multiple scenarios to use this template: - [Scenario 1](#scenario-1-create-a-new-package): Generating a new package using template - [Scenario 2](#scenario-2-apply-to-pre-existing-code): Applying the template to some pre-existing code - [Scenario 3](#scenario-3-updating-a-template-made-package): Updating a package made with the template In all three scenarios, you will need to install Copier first, which we recommend doing with [`pipx`](https://github.com/pypa/pipx): ```shell python3 -m pip install --user pipx python3 -m pipx ensurepath pipx install copier ``` > [!NOTE] > Note that it is also possible to install Copier with regular `pip`, but that > Copier will then be installed in your common environment and may cause > conflicts with its dependencies, while `pipx` will install Copier in a > separate and dedicated environment. ### Scenario 1: Create a new package Run `copier copy` with the template: ```shell copier copy https://github.com/nlesc/python-template.git path/to/destination ``` > [!NOTE] > 1. Make sure that `path/to/destination` is an empty directory > 1. Based on the profile and selected features, the package will be generated in the specified destination directory For an explanation of what's there, read on in the `project_setup.md` file. ### Scenario 2: Apply to pre-existing code To apply the template to pre-existing code, you can use the same `copier copy` command as when creating a new package, except that you point to the folder containing your existing code rather than a new one: ```shell copier copy https://github.com/nlesc/python-template.git path/to/existing/code ``` This works because if `path/to/destination` already exists, Copier will update what is already there by either adding new files or updating existing files. Copier will ask to overwrite any files that resulted in conflicts. Especially if your files are already under version control, it is recommended to answer 'yes' for all files, you will still be able to review the changes suggested by the template. ### Scenario 3. Updating a template-made package Copier provides the functionality for re-applying the template to a previously created project using the `copier update` command. This has two effects: 1. Your project will be updated according to the latest version of the template 2. You can change any of your previous answers to apply these changes throughout your entire project. > [!CAUTION] > Do not manually update answers in `.copier-answers.yml`, > as it will result in unexpected behavior. ```shell cd path/to/project copier update ``` If you don't want to change any of your answers, but only want to update your project according to the latest template updates, you can provide the `--skip-answered` option. This tells Copier to reuse all of your previous answers, and simply bring in all updates from the template into your current project, such as updating which Python versions are supported. You will still be asked to answer any new questions that have been added to the template since you last applied it. ```shell copier update --skip-answered ``` ## Examples Many developers have gone before you in using this template to get started quickly. Check out their projects in the list below: 1. Cerise: [https://github.com/MD-Studio/cerise](https://github.com/MD-Studio/cerise) 1. cerulean: [https://github.com/MD-Studio/cerulean](https://github.com/MD-Studio/cerulean) 1. cffconvert: [https://github.com/citation-file-format/cff-converter-python](https://github.com/citation-file-format/cff-converter-python) 1. fairtally: [https://github.com/fair-software/fairtally](https://github.com/fair-software/fairtally) 1. howfairis: [https://github.com/fair-software/howfairis](https://github.com/fair-software/howfairis) 1. matchms: [https://github.com/matchms/matchms](https://github.com/matchms/matchms) 1. MUSCLE 3: [https://github.com/multiscale/muscle3](https://github.com/multiscale/muscle3) 1. pycff: [https://github.com/citation-file-format/pycff](https://github.com/citation-file-format/pycff) 1. spec2vec: [https://github.com/iomega/spec2vec](https://github.com/iomega/spec2vec) 1. yatiml: [https://github.com/yatiml/yatiml](https://github.com/yatiml/yatiml) 1. _... And many more (see [this discussion](https://github.com/NLeSC/python-template/issues/48)). Make a PR to add your project here, or simply ping us in an issue!_ ## How to contribute Suggestions/improvements/edits are most welcome. Please read the [contribution guidelines](CONTRIBUTING.md) before creating an issue or a pull request. #!/usr/bin/env python import os from setuptools import setup # see setup.cfg setup() Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""{}"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. # YAML 1.2 --- authors: - affiliation: ""Netherlands eScience Center"" family-names: Zwaan given-names: Janneke name-particle: ""van der"" orcid: ""https://orcid.org/0000-0002-8329-7000"" - affiliation: ""Netherlands eScience Center"" family-names: Werkhoven given-names: Ben name-particle: van orcid: ""https://orcid.org/0000-0002-7508-3272"" - affiliation: ""Netherlands eScience Center"" family-names: Andela given-names: Bouwe orcid: ""https://orcid.org/0000-0001-9005-8940"" - affiliation: ""Netherlands eScience Center"" family-names: Bos given-names: Patrick orcid: ""https://orcid.org/0000-0002-6033-960X"" - affiliation: ""Netherlands eScience Center"" family-names: Attema given-names: Jisk orcid: ""https://orcid.org/0000-0002-0948-1176"" - affiliation: ""Netherlands eScience Center"" family-names: Bakker given-names: Tom - affiliation: ""Netherlands eScience Center"" family-names: Spaaks given-names: Jurriaan H. orcid: ""https://orcid.org/0000-0002-7064-4069"" - affiliation: ""Netherlands eScience Center"" family-names: Kuppevelt given-names: Dafne name-particle: van orcid: ""https://orcid.org/0000-0002-2662-1994"" - affiliation: ""Netherlands eScience Center"" family-names: Veen given-names: Lourens orcid: ""https://orcid.org/0000-0002-6311-1168"" - affiliation: ""Netherlands eScience Center"" family-names: Rol given-names: Evert orcid: ""https://orcid.org/0000-0001-8357-4453"" - affiliation: ""Netherlands eScience Center"" family-names: Verhoeven given-names: Stefan orcid: ""https://orcid.org/0000-0002-5821-2060"" - affiliation: ""Netherlands eScience Center"" family-names: Diblen given-names: Faruk orcid: ""https://orcid.org/0000-0002-0989-929X"" - affiliation: ""Netherlands eScience Center"" family-names: Tjong Kim Sang given-names: Erik orcid: ""https://orcid.org/0000-0002-8431-081X"" - given-names: Abel family-names: Soares Siqueira email: abel.s.siqueira@gmail.com affiliation: Netherlands eScience Center orcid: ""https://orcid.org/0000-0003-4451-281X"" - given-names: Olga family-names: Lyashevska email: o.lyashevska@esciencecenter.nl affiliation: Netherlands eScience Center orcid: 'https://orcid.org/0000-0002-8686-8550' - given-names: Sander name-particle: van family-names: Rijn email: s.vanrijn@esciencecenter.nl affiliation: Netherlands eScience Center orcid: 'https://orcid.org/0000-0001-6159-041X' cff-version: ""1.2.0"" date-released: 2018-07-17 doi: 10.5281/zenodo.1310751 keywords: - copier - template - Python license: Apache-2.0 message: ""If you use this software, please cite it using these metadata."" repository-code: ""https://github.com/NLeSC/python-template"" title: ""Netherlands eScience Center Python Template"" version: ""0.6.1""","{
    ""softwareRequirements"": [],
    ""buildInstructions"": ""1. Install Copier using pipx: python3 -m pip install --user pipx python3 -m pipx ensurepath pipx install copier 2. Run copier copy with the template: copier copy https://github.com/nlesc/python-template.git path/to/destination"",
    ""author"": [
        {
            ""name"": ""Janneke van der Zwaan"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8329-7000""
        },
        {
            ""name"": ""Ben van Werkhoven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7508-3272""
        },
        {
            ""name"": ""Bouwe Andela"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-9005-8940""
        },
        {
            ""name"": ""Patrick Bos"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-6033-960X""
        },
        {
            ""name"": ""Jisk Attema"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-0948-1176""
        },
        {
            ""name"": ""Tom Bakker"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Jurriaan H. Spaaks"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7064-4069""
        },
        {
            ""name"": ""Dafne van Kuppevelt"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-2662-1994""
        },
        {
            ""name"": ""Lourens Veen"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-6311-1168""
        },
        {
            ""name"": ""Evert Rol"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-8357-4453""
        },
        {
            ""name"": ""Stefan Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
            ""name"": ""Faruk Diblen"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-0989-929X""
        },
        {
            ""name"": ""Erik Tjong Kim Sang"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8431-081X""
        },
        {
            ""name"": ""Abel Soares Siqueira"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-4451-281X""
        },
        {
            ""name"": ""Olga Lyashevska"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8686-8550""
        },
        {
            ""name"": ""Sander van Rijn"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-6159-041X""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1310751"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""copier"",
        ""template"",
        ""Python"",
        ""research software"",
        ""FAIR software"",
        ""citation"",
        ""metadata"",
        ""software development"",
        ""best practices""
    ]
}","{
    ""softwareRequirements"": [],
    ""buildInstructions"": ""1. Install Copier using pipx: python3 -m pip install --user pipx python3 -m pipx ensurepath pipx install copier 2. Run copier copy with the template: copier copy https://github.com/nlesc/python-template.git path/to/destination"",
    ""author"": [
        {
            ""name"": ""Janneke van der Zwaan"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8329-7000""
        },
        {
            ""name"": ""Ben van Werkhoven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7508-3272""
        },
        {
            ""name"": ""Bouwe Andela"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-9005-8940""
        },
        {
            ""name"": ""Patrick Bos"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-6033-960X""
        },
        {
            ""name"": ""Jisk Attema"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-0948-1176""
        },
        {
            ""name"": ""Tom Bakker"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Jurriaan H. Spaaks"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7064-4069""
        },
        {
            ""name"": ""Dafne van Kuppevelt"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-2662-1994""
        },
        {
            ""name"": ""Lourens Veen"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-6311-1168""
        },
        {
            ""name"": ""Evert Rol"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-8357-4453""
        },
        {
            ""name"": ""Stefan Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
            ""name"": ""Faruk Diblen"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-0989-929X""
        },
        {
            ""name"": ""Erik Tjong Kim Sang"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8431-081X""
        },
        {
            ""name"": ""Abel Soares Siqueira"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-4451-281X""
        },
        {
            ""name"": ""Olga Lyashevska"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8686-8550""
        },
        {
            ""name"": ""Sander van Rijn"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-6159-041X""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1310751"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""copier"",
        ""template"",
        ""Python"",
        ""research software"",
        ""FAIR software"",
        ""citation"",
        ""metadata"",
        ""software development"",
        ""best practices""
    ]
}","{
    ""softwareRequirements"": [],
    ""buildInstructions"": ""How to use\nThere are multiple scenarios to use this template:\n* Scenario 1: Generating a new package using template\n* Scenario 2: Applying the template to some pre-existing code\n* Scenario 3: Updating a package made with the template\nIn all three scenarios, you will need to install Copier first, which we recommend doing with `pipx`:\n\n```\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install copier\n```"",
    ""author"": [
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Zwaan"",
            ""given-names"": ""Janneke"",
            ""name-particle"": ""van der"",
            ""orcid"": ""https://orcid.org/0000-0002-8329-7000""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Werkhoven"",
            ""given-names"": ""Ben"",
            ""name-particle"": ""van"",
            ""orcid"": ""https://orcid.org/0000-0002-7508-3272""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Andela"",
            ""given-names"": ""Bouwe"",
            ""orcid"": ""https://orcid.org/0000-0001-9005-8940""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Bos"",
            ""given-names"": ""Patrick"",
            ""orcid"": ""https://orcid.org/0000-0002-6033-960X""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Attema"",
            ""given-names"": ""Jisk"",
            ""orcid"": ""https://orcid.org/0000-0002-0948-1176""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Bakker"",
            ""given-names"": ""Tom""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Spaaks"",
            ""given-names"": ""Jurriaan H."",
            ""orcid"": ""https://orcid.org/0000-0002-7064-4069""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Kuppevelt"",
            ""given-names"": ""Dafne"",
            ""name-particle"": ""van"",
            ""orcid"": ""https://orcid.org/0000-0002-2662-1994""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Veen"",
            ""given-names"": ""Lourens"",
            ""orcid"": ""https://orcid.org/0000-0002-6311-1168""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Rol"",
            ""given-names"": ""Evert"",
            ""orcid"": ""https://orcid.org/0000-0001-8357-4453""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Verhoeven"",
            ""given-names"": ""Stefan"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Diblen"",
            ""given-names"": ""Faruk"",
            ""orcid"": ""https://orcid.org/0000-0002-0989-929X""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Tjong Kim Sang"",
            ""given-names"": ""Erik"",
            ""orcid"": ""https://orcid.org/0000-0002-8431-081X""
        },
        {
            ""given-names"": ""Abel"",
            ""family-names"": ""Soares Siqueira"",
            ""email"": ""abel.s.siqueira@gmail.com"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-4451-281X""
        },
        {
            ""given-names"": ""Olga"",
            ""family-names"": ""Lyashevska"",
            ""email"": ""o.lyashevska@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8686-8550""
        },
        {
            ""given-names"": ""Sander"",
            ""name-particle"": ""van"",
            ""family-names"": ""Rijn"",
            ""email"": ""s.vanrijn@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-6159-041X""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.1310751""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""copier"",
        ""template"",
        ""python""
    ]
}","{
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.1310751"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/python-template/main/LICENSE""
  },
  ""keywords"": ""boilerplate, copier, copier-python, copier-template, python, python-template, research-software, template"",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/python-template/main/LICENSE""
  },
  ""codeRepository"": ""https://github.com/NLeSC/python-template"",
  ""issueTracker"": ""https://github.com/NLeSC/python-template/issues"",
  ""dateCreated"": ""2016-09-20"",
  ""dateModified"": ""2025-03-08"",
  ""downloadUrl"": ""https://github.com/NLeSC/python-template/releases"",
  ""name"": ""python-template"",
  ""keywords"": ""boilerplate, copier, copier-python, copier-template, python, python-template, research-software, template"",
  ""programmingLanguage"": [
    ""Jinja"",
    ""Python"",
    ""Shell""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/NLeSC/python-template/main/CITATION.cff""
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.1310751"",
  ""readme"": ""https://raw.githubusercontent.com/NLeSC/python-template/main/README.md"",
  ""description"": [
    ""Netherlands eScience Center Python Template"",
    ""- Boilerplate unit tests and documentation,\n- [Python static setup configuration](template/pyproject.toml.jinja),\n- Open source software license,\n- Continuous integration with [GitHub action workflows](template/.github/workflows) for building, testing, link checking and linting,\n- Code style checking with [ruff](https://beta.ruff.rs/),\n- [Editorconfig](template/.editorconfig),\n- Usage and contribution documents:\n  - [README.md](template/README.md.jinja) for package users,\n  - [README.dev.md](template/README.dev.md.jinja) for package developer,\n  - [project_setup.md](template/project_setup.md.jinja) with extensive documentation about project setup,\n  - [Changelog](template/%7B%25%20if%20AddChangeLog%20%25%7DCHANGELOG.md%7B%25%20endif%20%25%7D),\n  - [Code of Conduct](template/CODE_OF_CONDUCT.md.jinja),\n  - [Contributing guidelines](template/CONTRIBUTING.md.jinja),\n- Continuous code quality and code coverage reporting using [Sonarcloud](https://sonarcloud.io/),\n- Automatic creation of [issues](template/.github/next_steps) with instructions how to pass all GitHub action workflows and integrate with services like Zenodo and Read the Docs,\n- Instructions how to make package [citable](.github/next_steps/%7B%25%20if%20AddCitation%20%25%7D02_citation.md%7B%25%20endif%20%25%7D.jinja)\n- FAIR software recommendation badge,\n- Optional [pre commit hook](template/README.dev.md.jinja#running-linters-locally) to catch lint errors early\n \n"",
    ""This fully customizable profile enables you to selectively include or exclude features in your Python package.\n \n"",
    ""This option provides a pre-selected set of features for research software, which users can fully customize.\n \n"",
    ""This profile offers the essential features to begin developing a Python package, making it ideal for first-time research software developers. Additional features can be added as needed.\n \n"",
    ""<img align=\""right\"" width=\""160\"" src=\""logo.png\"" alt='Python Template logo, created using ChatGPT 4o on 10 September 2024 using prompt \""generate a logo of a copier that looks like a snake-scientist\""'> \nSpend less time setting up and configuring your new Python packages by using this template. This [Copier](https://copier.readthedocs.io) template includes best practices for research software so your new package will include these practices from the start.  \nYou can choose from various user profiles, each offering a range of features to suit your needs.\n \n"",
    ""The template profiles for a Python package offer varying levels of customization to cater to different user needs. Below are the profiles the template offers.\n \n"",
    ""| fair-software.nl recommendations | |\n| :-- | :--  |\n| (1/5) code repository              | [![github repo badge](https://img.shields.io/badge/github-repo-000.svg?logo=github&labelColor=gray&color=blue)](https://github.com/nlesc/python-template) |\n| (2/5) license                      | [![github license badge](https://img.shields.io/github/license/nlesc/python-template)](https://github.com/nlesc/python-template) |\n| (3/5) community registry           | [![RSD](https://img.shields.io/badge/rsd-python--template-00a3e3.svg)](https://research-software.nl/software/nlesc-python-template) |\n| (4/5) citation                     | [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1310751.svg)](https://doi.org/10.5281/zenodo.1310751) |\n| (5/5) checklist                    | &nbsp; |\n| overall                            | [![fair-software badge](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8B-yellow)](https://fair-software.eu) |\n| **Other best practices**           | &nbsp; |\n| &nbsp;                             | &nbsp; |\n| **GitHub Actions**                 | &nbsp; |\n| Citation metadata consistency      | [![cffconvert](https://github.com/nlesc/python-template/actions/workflows/cffconvert.yml/badge.svg)](https://github.com/nlesc/python-template/actions/workflows/cffconvert.yml) |\n| Link checker              | [![link-check](https://github.com/nlesc/python-template/actions/workflows/link-check.yml/badge.svg)](https://github.com/nlesc/python-template/actions/workflows/link-check.yml) |\n| Tests                              | [![tests](https://github.com/nlesc/python-template/actions/workflows/tests.yml/badge.svg)](https://github.com/nlesc/python-template/actions/workflows/tests.yml) |\n \n""
  ]
}"
https://github.com/iomega/paired-data-form,"# Pairing Omics Data Platform Linking mas spectra and genomic information to discover new chemistry. * Links MS/MS mass spectra with genome, sample preparation, extraction method and instrumentation method * Links biosynthetic gene cluster with MS^2 mass spectra A web application for storing paired omics data projects. The [JSON schema (app/public/schema.json)](app/public/schema.json) describes the format of an project. [![Node.js CI](https://github.com/iomega/paired-data-form/workflows/CI/badge.svg)](https://github.com/iomega/paired-data-form/actions?query=workflow%3A%22CI%22CI) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=iomega_paired-data-form&metric=alert_status)](https://sonarcloud.io/dashboard?id=iomega_paired-data-form) [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=iomega_paired-data-form&metric=coverage)](https://sonarcloud.io/dashboard?id=iomega_paired-data-form) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3757/badge)](https://bestpractices.coreinfrastructure.org/projects/3757) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2656630.svg)](https://doi.org/10.5281/zenodo.2656630) ## Documentation Developer, admin and system operator manuals can be found in [manuals/](manuals/) directory. ## Contributing If you want to contribute to the platform, have a look at the [contribution guidelines](CONTRIBUTING.md). ## Architecture The Pairing Omics Data Platform consists of: 1. A Web application, user interface, see [app/](app/) directory 2. An API web service, service responsible for storing projects, see [api.](api/) directory [![Architecture diagram](app/src/pages/methods/architecture.svg)](app/src/pages/methods/architecture.svg) The platform is implemented using Javascript based web service and a React (v16.13.1) based web application. The web application renders the submission form from the JSON schema. The web service stores each project as a file on disk. The application offers full text search functionality via web services using an elastic search (v7.6.2) index. The web service uses a redis queue (v5.0.5) to schedule jobs to fetch more information about the public identifiers and to upload the projects to Zenodo each month. For example, the scientific species name is fetched from GenBank using the public genome identifiers in the project. The web service has an OpenAPI (v3.0.3) specification ([https://www.openapis.org/](https://www.openapis.org/)) which can be used to submit and retrieve projects in a programmatic manner. The platform runs using Docker Compose (v1.25.4) with containers for the web application, web service and redis queue. ## Run using Docker compose The application can be configured using environment variables: * PORT, http port application is running on. Default is 8443. * SHARED_TOKEN, token required to login to review area. * ZENODO_ACCESS_TOKEN, Zenodo access token used for uploading database to Zenodo. * ZENODO_DEPOSITION_ID, Zenodo deposition identifier used for uploading database to Zenodo. Set to -1 to disable scheduled uploading. * SLACK_TOKEN, Token of Slack app with chat:write permission in workspace of channel * SLACK_CHANNEL, Slack channel in which service should post messages The environment variables can be set in the terminal or be put in a `.env` file. ```shell docker-compose up -d --build ``` Starts application, api webservice and reverse proxy on [http://localhost:8443](http://localhost:8443). Project JSON files are stored in a `./data/` directory. To run on production put application behind a reverse proxy web server with a proper domain and secure transport with https. ## New release This chapter is for developers of the platform. To make a new release of the platform do: 1. Determine new version of release, using semantic versioning (x.y.z) 2. Add version to [CHANGELOG.md](CHANGELOG.md) * Create a new `##` chapter for the new version * Update version links at bottom of CHANGELOG 3. Set new version of api web service by ```shell cd api npm version x.y.z ``` 4. Set new version of web application by ```shell cd app npm version x.y.z ``` 5. Commit & push changes 6. Create a GitHub release 7. On [https://doi.org/10.5281/zenodo.2656630](https://doi.org/10.5281/zenodo.2656630) * Update author list * Add `https://doi.org/10.5281/zenodo.3736430`, `is compiled/create by this upload` as `Dataset` in related identifiers section. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""{}"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright 2018 Wageningen University and Research Center & Netherlands eScience Center Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. # YAML 1.2 # Metadata for citation of this software according to the CFF format (https://citation-file-format.github.io/) cff-version: 1.2.0 message: If you use this software, please cite it using these metadata. title: 'Integrated Omics for MEtabolomics and Genomics Annotation: Pairing Omics Data Platform' doi: 10.5281/zenodo.2656630 authors: - given-names: Stefan family-names: Verhoeven affiliation: Netherlands eScience Center orcid: https://orcid.org/0000-0002-5821-2060 - given-names: Michelle family-names: Schorn affiliation: Wageningen University and Research Center orcid: https://orcid.org/0000-0001-8144-6052 - given-names: Justin family-names: van der Hooft affiliation: Wageningen University and Research Center orcid: https://orcid.org/0000-0002-9340-5511 repository-code: https://github.com/iomega/paired-data-form license: Apache-2.0","{
    ""softwareRequirements"": [
        ""node: ^16.13.1"",
        ""react: ^16.13.1"",
        ""elastic-search: ^7.6.2"",
        ""redis-queue: ^5.0.5"",
        ""open-api: ^3.0.3"",
        ""docker-compose: ^1.25.4""
    ],
    ""buildInstructions"": ""1. Set environment variables: PORT, SHARED_TOKEN, ZENODO_ACCESS_TOKEN, ZENODO_DEPOSITION_ID, SLACK_TOKEN, SLACK_CHANNEL. 2. Run 'docker-compose up -d --build' to start application, api webservice and reverse proxy on http://localhost:8443. 3. Project JSON files are stored in a ./data/ directory. 4. To run on production, put application behind a reverse proxy web server with a proper domain and secure transport with https."",
    ""author"": [
        {
            ""name"": ""Stefan Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
            ""name"": ""Michelle Schorn"",
            ""affiliation"": ""Wageningen University and Research Center"",
            ""orcid"": ""https://orcid.org/0000-0001-8144-6052""
        },
        {
            ""name"": ""Justin van der Hooft"",
            ""affiliation"": ""Wageningen University and Research Center"",
            ""orcid"": ""https://orcid.org/0000-0002-9340-5511""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.2656630"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""Omics Data Platform"",
        ""MS/MS Mass Spectra"",
        ""Genomic Information"",
        ""Biosynthetic Gene Cluster"",
        ""Web Application"",
        ""API Web Service"",
        ""Elastic Search"",
        ""Redis Queue"",
        ""OpenAPI"",
        ""Docker Compose""
    ]
}","{
    ""softwareRequirements"": [
        ""node: ^16.13.1"",
        ""react: ^16.13.1"",
        ""elastic-search: ^7.6.2"",
        ""redis-queue: ^5.0.5"",
        ""open-api: ^3.0.3"",
        ""docker-compose: ^1.25.4""
    ],
    ""buildInstructions"": ""1. Set environment variables: PORT, SHARED_TOKEN, ZENODO_ACCESS_TOKEN, ZENODO_DEPOSITION_ID, SLACK_TOKEN, SLACK_CHANNEL. 2. Run 'docker-compose up -d --build' to start application, api webservice and reverse proxy on http://localhost:8443. 3. Project JSON files are stored in a ./data/ directory. 4. To run on production, put application behind a reverse proxy web server with a proper domain and secure transport with https."",
    ""author"": [
        {
            ""name"": ""Stefan Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
            ""name"": ""Michelle Schorn"",
            ""affiliation"": ""Wageningen University and Research Center"",
            ""orcid"": ""https://orcid.org/0000-0001-8144-6052""
        },
        {
            ""name"": ""Justin van der Hooft"",
            ""affiliation"": ""Wageningen University and Research Center"",
            ""orcid"": ""https://orcid.org/0000-0002-9340-5511""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.2656630"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""Omics Data Platform"",
        ""MS/MS Mass Spectra"",
        ""Genomic Information"",
        ""Biosynthetic Gene Cluster"",
        ""Web Application"",
        ""API Web Service"",
        ""Elastic Search"",
        ""Redis Queue"",
        ""OpenAPI"",
        ""Docker Compose""
    ]
}","{
    ""softwareRequirements"": [
        ""node: ^16.13.1"",
        ""react: ^16.13.1"",
        ""elastic-search: ^7.6.2"",
        ""redis-queue: ^5.0.5"",
        ""open-api: ^3.0.3"",
        ""docker-compose: ^1.25.4""
    ],
    ""buildInstructions"": ""Run using Docker compose\n\nThe application can be configured using environment variables:\n* PORT, http port application is running on. Default is 8443.\n* SHARED_TOKEN, token required to login to review area.\n* ZENODO_ACCESS_TOKEN, Zenodo access token used for uploading database to Zenodo.\n* ZENODO_DEPOSITION_ID, Zenodo deposition identifier used for uploading database to Zenodo. Set to -1 to disable scheduled uploading.\n* SLACK_TOKEN, Token of Slack app with chat:write permission in workspace of channel\n* SLACK_CHANNEL, Slack channel in which service should post messages\n\nThe environment variables can be set in the terminal or be put in a `.env` file.\n\n```\ndocker-compose up -d --build\n```\n\nStarts application, api webservice and reverse proxy on http://localhost:8443. Project JSON files are stored in a `./data/` directory.\nTo run on production put application behind a reverse proxy web server with a proper domain and secure transport with https."",
    ""author"": [
        {
            ""given-names"": ""Stefan"",
            ""family-names"": ""Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
            ""given-names"": ""Michelle"",
            ""family-names"": ""Schorn"",
            ""affiliation"": ""Wageningen University and Research Center"",
            ""orcid"": ""https://orcid.org/0000-0001-8144-6052""
        },
        {
            ""given-names"": ""Justin"",
            ""family-names"": ""van der Hooft"",
            ""affiliation"": ""Wageningen University and Research Center"",
            ""orcid"": ""https://orcid.org/0000-0002-9340-5511""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.2656630""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": []
}","{
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/iomega/paired-data-form/master/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/iomega""
    }
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.2656630"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/iomega/paired-data-form/master/LICENSE""
  },
  ""keywords"": """",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/iomega/paired-data-form/master/LICENSE""
  },
  ""codeRepository"": ""https://github.com/iomega/paired-data-form"",
  ""issueTracker"": ""https://github.com/iomega/paired-data-form/issues"",
  ""dateCreated"": ""2018-11-02"",
  ""dateModified"": ""2024-08-05"",
  ""downloadUrl"": ""https://github.com/iomega/paired-data-form/releases"",
  ""name"": ""paired-data-form"",
  ""logo"": ""https://sonarcloud.io/api/project_badges/measure?project=iomega_paired-data-form&amp;metric=alert_status"",
  ""keywords"": """",
  ""programmingLanguage"": [
    ""TypeScript"",
    ""JavaScript"",
    ""HTML"",
    ""Shell"",
    ""CSS"",
    ""Dockerfile""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/iomega/paired-data-form/master/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/iomega""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/iomega/paired-data-form/master/CITATION.cff""
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.2656630"",
  ""readme"": ""https://raw.githubusercontent.com/iomega/paired-data-form/master/README.md"",
  ""description"": [
    ""Linking mas spectra and genomic information to discover new chemistry"",
    ""Linking mas spectra and genomic information to discover new chemistry. \n* Links MS/MS mass spectra with genome, sample preparation, extraction method and instrumentation method\n* Links biosynthetic gene cluster with MS^2 mass spectra \nA web application for storing paired omics data projects. \nThe [JSON schema (app/public/schema.json)](app/public/schema.json) describes the format of an project. \n"",
    ""The Pairing Omics Data Platform consists of: \n1. A Web application, user interface, see [app/](app/) directory\n2. An API web service, service responsible for storing projects, see [api.](api/) directory \nThe platform is implemented using Javascript based web service and a React (v16.13.1) based web application. The web application renders the submission form from the JSON schema. The web service stores each project as a file on disk. The application offers full text search functionality via web services using an elastic search (v7.6.2) index. The web service uses a redis queue (v5.0.5) to schedule jobs to fetch more information about the public identifiers and to upload the projects to Zenodo each month. For example, the scientific species name is fetched from GenBank using the public genome identifiers in the project. The web service has an OpenAPI (v3.0.3) specification ([https://www.openapis.org/](https://www.openapis.org/)) which can be used to submit and retrieve projects in a programmatic manner. The platform runs using Docker Compose (v1.25.4) with containers for the web application, web service and redis queue.\n \n"",
    ""This chapter is for developers of the platform. \nTo make a new release of the platform do: \n1. Determine new version of release, using semantic versioning (x.y.z)\n2. Add version to [CHANGELOG.md](CHANGELOG.md)\n    * Create a new `##` chapter for the new version\n    * Update version links at bottom of CHANGELOG\n3. Set new version of api web service by \n    ```shell\n    cd api\n    npm version x.y.z\n    ``` \n4. Set new version of web application by \n    ```shell\n    cd app\n    npm version x.y.z\n    ``` \n5. Commit & push changes\n6. Create a GitHub release\n7. On [https://doi.org/10.5281/zenodo.2656630](https://doi.org/10.5281/zenodo.2656630)\n    * Update author list\n    * Add `https://doi.org/10.5281/zenodo.3736430`, `is compiled/create by this upload` as `Dataset` in related identifiers section.\n \n""
  ]
}"
https://github.com/pism/pism,,"{
    ""softwareRequirements"": [
        ""PETSc"",
        ""MPI"",
        ""PROJ"",
        ""YAC"",
        ""NetCDF-4"",
        ""PnetCDF"",
        ""Jansson"",
        ""Python3"",
        ""SWIG"",
        ""PETSc4Py"",
        ""Everytrace""
    ],
    ""buildInstructions"": ""See the section 'Installing PISM' on 'pism.io'."",
    ""author"": [
        {
            ""name"": ""Constantine Khrulev"",
            ""email"": ""ckhrulev@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0003-2170-7454""
        },
        {
            ""name"": ""Andy Aschwanden"",
            ""email"": ""aaschwanden@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0001-8149-2315""
        },
        {
            ""name"": ""Ed Bueler"",
            ""email"": ""elbueler@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0001-8232-4145""
        },
        {
            ""name"": ""Jed Brown"",
            ""email"": ""jed.brown@colorado.edu"",
            ""affiliation"": ""University of Colorado Boulder"",
            ""orcid"": ""https://orcid.org/0000-0002-9945-0639""
        },
        {
            ""name"": ""David Maxwell"",
            ""email"": ""damaxwell@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Torsten Albrecht"",
            ""email"": ""albrecht@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-7459-2860""
        },
        {
            ""name"": ""Ronja Reese"",
            ""email"": ""ronja.reese@northumbria.ac.uk"",
            ""affiliation"": ""University of Northumbria at Newcastle"",
            ""orcid"": ""https://orcid.org/0000-0001-7625-040X""
        },
        {
            ""name"": ""Matthias Mengel"",
            ""email"": ""matthias.mengel@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-6724-9685""
        },
        {
            ""name"": ""Maria Martin"",
            ""email"": ""maria.martin@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0002-1443-0891""
        },
        {
            ""name"": ""Ricarda Winkelmann"",
            ""email"": ""ricarda.winkelmann@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-1248-3217""
        },
        {
            ""name"": ""Maria Zeitz"",
            ""email"": ""maria.zeitz@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-8129-1329""
        },
        {
            ""name"": ""Anders Levermann"",
            ""email"": ""anders.levermann@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-4432-4704""
        },
        {
            ""name"": ""Johannes Feldmann"",
            ""email"": ""johannes.feldmann@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-4210-0221""
        },
        {
            ""name"": ""Julius Garbe"",
            ""email"": ""julius.garbe@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-3140-3307""
        },
        {
            ""name"": ""Marianne Haseloff"",
            ""email"": ""haseloff@wisc.edu"",
            ""affiliation"": ""University of Wisconsin-Madison"",
            ""orcid"": ""https://orcid.org/0000-0002-6576-5384""
        },
        {
            ""name"": ""Julien Seguinot"",
            ""email"": ""julien.seguinot@uib.no"",
            ""affiliation"": ""University of Bergen"",
            ""orcid"": ""https://orcid.org/0000-0002-5315-0761""
        },
        {
            ""name"": ""Sebastian Hinck"",
            ""email"": ""sebastian.hinck@dkrz.de"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH"",
            ""orcid"": ""https://orcid.org/0000-0002-6428-305X""
        },
        {
            ""name"": ""Thomas Kleiner"",
            ""email"": ""thomas.kleiner@awi.de"",
            ""affiliation"": ""Alfred Wegener Institute Helmholtz Centre for Polar and Marine Research"",
            ""orcid"": ""https://orcid.org/0000-0001-7825-5765""
        },
        {
            ""name"": ""Elizabeth Fischer"",
            ""email"": ""efischer@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0002-3987-2696""
        },
        {
            ""name"": ""Anders Damsgaard"",
            ""email"": ""anders.damsgaard@geo.au.dk"",
            ""affiliation"": ""Aarhus University"",
            ""orcid"": ""https://orcid.org/0000-0002-9284-1709""
        },
        {
            ""name"": ""Craig Lingle"",
            ""email"": ""clingle@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Ward van Pelt"",
            ""email"": ""w.vanpelt@uu.nl"",
            ""affiliation"": ""Uppsala Universitet"",
            ""orcid"": ""https://orcid.org/0000-0003-4839-7900""
        },
        {
            ""name"": ""Florian Ziemen"",
            ""email"": ""fziemen@dkrz.de"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH"",
            ""orcid"": ""https://orcid.org/0000-0001-7095-5740""
        },
        {
            ""name"": ""Nathan Shemonski"",
            ""email"": ""nshemonski@zoox.com"",
            ""affiliation"": ""Zoox, Inc""
        },
        {
            ""name"": ""Kenneth Mankoff"",
            ""email"": ""kmankoff@giss.nasa.gov"",
            ""affiliation"": ""Goddard Institute for Space Studies"",
            ""orcid"": ""https://orcid.org/0000-0001-5453-2019""
        },
        {
            ""name"": ""Joseph Kennedy"",
            ""email"": ""joseph.kennedy@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0002-9348-693X""
        },
        {
            ""name"": ""Kyle Blum"",
            ""email"": ""kblum@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Marijke Habermann"",
            ""email"": ""mhabermann@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Daniella DellaGiustina"",
            ""email"": ""daniella.dellagiustina@arizona.edu"",
            ""affiliation"": ""University of Arizona"",
            ""orcid"": ""https://orcid.org/0000-0002-5643-1956""
        },
        {
            ""name"": ""Regine Hock"",
            ""email"": ""regine.hock@geo.uio.no"",
            ""affiliation"": ""University of Oslo"",
            ""orcid"": ""https://orcid.org/0000-0001-8336-9441""
        },
        {
            ""name"": ""Moritz Kreuzer"",
            ""email"": ""moritz.kreuzer@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0002-8622-6638""
        },
        {
            ""name"": ""Enrico Degregori"",
            ""email"": ""enrico.degregori@dkrz.de"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH""
        },
        {
            ""name"": ""Simon Schoell"",
            ""email"": ""simon.schoell@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1199019"",
    ""license"": ""GPL-3.0-or-later"",
    ""keywords"": [
        ""Ice Sheet Model"",
        ""Open Source"",
        ""Geophysics"",
        ""Sea Level""
    ]
}","{
    ""softwareRequirements"": [
        ""PETSc"",
        ""MPI"",
        ""PROJ"",
        ""YAC"",
        ""NetCDF-4"",
        ""PnetCDF"",
        ""Jansson"",
        ""Python3"",
        ""SWIG"",
        ""PETSc4Py"",
        ""Everytrace""
    ],
    ""buildInstructions"": ""See the section 'Installing PISM' on 'pism.io'."",
    ""author"": [
        {
            ""name"": ""Constantine Khrulev"",
            ""email"": ""ckhrulev@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0003-2170-7454""
        },
        {
            ""name"": ""Andy Aschwanden"",
            ""email"": ""aaschwanden@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0001-8149-2315""
        },
        {
            ""name"": ""Ed Bueler"",
            ""email"": ""elbueler@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0001-8232-4145""
        },
        {
            ""name"": ""Jed Brown"",
            ""email"": ""jed.brown@colorado.edu"",
            ""affiliation"": ""University of Colorado Boulder"",
            ""orcid"": ""https://orcid.org/0000-0002-9945-0639""
        },
        {
            ""name"": ""David Maxwell"",
            ""email"": ""damaxwell@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Torsten Albrecht"",
            ""email"": ""albrecht@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-7459-2860""
        },
        {
            ""name"": ""Ronja Reese"",
            ""email"": ""ronja.reese@northumbria.ac.uk"",
            ""affiliation"": ""University of Northumbria at Newcastle"",
            ""orcid"": ""https://orcid.org/0000-0001-7625-040X""
        },
        {
            ""name"": ""Matthias Mengel"",
            ""email"": ""matthias.mengel@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-6724-9685""
        },
        {
            ""name"": ""Maria Martin"",
            ""email"": ""maria.martin@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0002-1443-0891""
        },
        {
            ""name"": ""Ricarda Winkelmann"",
            ""email"": ""ricarda.winkelmann@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-1248-3217""
        },
        {
            ""name"": ""Maria Zeitz"",
            ""email"": ""maria.zeitz@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-8129-1329""
        },
        {
            ""name"": ""Anders Levermann"",
            ""email"": ""anders.levermann@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-4432-4704""
        },
        {
            ""name"": ""Johannes Feldmann"",
            ""email"": ""johannes.feldmann@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-4210-0221""
        },
        {
            ""name"": ""Julius Garbe"",
            ""email"": ""julius.garbe@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-3140-3307""
        },
        {
            ""name"": ""Marianne Haseloff"",
            ""email"": ""haseloff@wisc.edu"",
            ""affiliation"": ""University of Wisconsin-Madison"",
            ""orcid"": ""https://orcid.org/0000-0002-6576-5384""
        },
        {
            ""name"": ""Julien Seguinot"",
            ""email"": ""julien.seguinot@uib.no"",
            ""affiliation"": ""University of Bergen"",
            ""orcid"": ""https://orcid.org/0000-0002-5315-0761""
        },
        {
            ""name"": ""Sebastian Hinck"",
            ""email"": ""sebastian.hinck@dkrz.de"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH"",
            ""orcid"": ""https://orcid.org/0000-0002-6428-305X""
        },
        {
            ""name"": ""Thomas Kleiner"",
            ""email"": ""thomas.kleiner@awi.de"",
            ""affiliation"": ""Alfred Wegener Institute Helmholtz Centre for Polar and Marine Research"",
            ""orcid"": ""https://orcid.org/0000-0001-7825-5765""
        },
        {
            ""name"": ""Elizabeth Fischer"",
            ""email"": ""efischer@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0002-3987-2696""
        },
        {
            ""name"": ""Anders Damsgaard"",
            ""email"": ""anders.damsgaard@geo.au.dk"",
            ""affiliation"": ""Aarhus University"",
            ""orcid"": ""https://orcid.org/0000-0002-9284-1709""
        },
        {
            ""name"": ""Craig Lingle"",
            ""email"": ""clingle@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Ward van Pelt"",
            ""email"": ""w.vanpelt@uu.nl"",
            ""affiliation"": ""Uppsala Universitet"",
            ""orcid"": ""https://orcid.org/0000-0003-4839-7900""
        },
        {
            ""name"": ""Florian Ziemen"",
            ""email"": ""fziemen@dkrz.de"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH"",
            ""orcid"": ""https://orcid.org/0000-0001-7095-5740""
        },
        {
            ""name"": ""Nathan Shemonski"",
            ""email"": ""nshemonski@zoox.com"",
            ""affiliation"": ""Zoox, Inc""
        },
        {
            ""name"": ""Kenneth Mankoff"",
            ""email"": ""kmankoff@giss.nasa.gov"",
            ""affiliation"": ""Goddard Institute for Space Studies"",
            ""orcid"": ""https://orcid.org/0000-0001-5453-2019""
        },
        {
            ""name"": ""Joseph Kennedy"",
            ""email"": ""joseph.kennedy@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0002-9348-693X""
        },
        {
            ""name"": ""Kyle Blum"",
            ""email"": ""kblum@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Marijke Habermann"",
            ""email"": ""mhabermann@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""name"": ""Daniella DellaGiustina"",
            ""email"": ""daniella.dellagiustina@arizona.edu"",
            ""affiliation"": ""University of Arizona"",
            ""orcid"": ""https://orcid.org/0000-0002-5643-1956""
        },
        {
            ""name"": ""Regine Hock"",
            ""email"": ""regine.hock@geo.uio.no"",
            ""affiliation"": ""University of Oslo"",
            ""orcid"": ""https://orcid.org/0000-0001-8336-9441""
        },
        {
            ""name"": ""Moritz Kreuzer"",
            ""email"": ""moritz.kreuzer@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0002-8622-6638""
        },
        {
            ""name"": ""Enrico Degregori"",
            ""email"": ""enrico.degregori@dkrz.de"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH""
        },
        {
            ""name"": ""Simon Schoell"",
            ""email"": ""simon.schoell@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.1199019"",
    ""license"": ""GPL-3.0-or-later"",
    ""keywords"": [
        ""Ice Sheet Model"",
        ""Open Source"",
        ""Geophysics"",
        ""Sea Level""
    ]
}","{
    ""softwareRequirements"": [
        ""CMAKE:3.16"",
        ""C++"",
        ""C++11"",
        ""PETSc"",
        ""NetCDF4"",
        ""PnetCDF"",
        ""Jansson"",
        ""Everytrace"",
        ""Python3"",
        ""PETSc4Py"",
        ""SWIG"",
        ""PROJ"",
        ""YAC""
    ],
    ""buildInstructions"": ""See the section Installing PISM on pism.io."",
    ""author"": [
        {
            ""given-names"": ""Constantine"",
            ""family-names"": ""Khrulev"",
            ""email"": ""ckhroulev@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0003-2170-7454""
        },
        {
            ""given-names"": ""Andy"",
            ""family-names"": ""Aschwanden"",
            ""email"": ""aaschwanden@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0001-8149-2315""
        },
        {
            ""given-names"": ""Ed"",
            ""family-names"": ""Bueler"",
            ""email"": ""elbueler@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0001-8232-4145""
        },
        {
            ""given-names"": ""Jed"",
            ""family-names"": ""Brown"",
            ""affiliation"": ""University of Colorado Boulder"",
            ""orcid"": ""https://orcid.org/0000-0002-9945-0639""
        },
        {
            ""given-names"": ""David"",
            ""family-names"": ""Maxwell"",
            ""email"": ""damaxwell@alaska.edu"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""given-names"": ""Torsten"",
            ""family-names"": ""Albrecht"",
            ""email"": ""albrecht@pik-potsdam.de"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-7459-2860""
        },
        {
            ""given-names"": ""Ronja"",
            ""family-names"": ""Reese"",
            ""affiliation"": ""University of Northumbria at Newcastle"",
            ""orcid"": ""https://orcid.org/0000-0001-7625-040X""
        },
        {
            ""given-names"": ""Matthias"",
            ""family-names"": ""Mengel"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-6724-9685""
        },
        {
            ""given-names"": ""Maria"",
            ""family-names"": ""Martin"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0002-1443-0891""
        },
        {
            ""given-names"": ""Ricarda"",
            ""family-names"": ""Winkelmann"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-1248-3217""
        },
        {
            ""given-names"": ""Maria"",
            ""family-names"": ""Zeitz"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0001-8129-1329""
        },
        {
            ""given-names"": ""Anders"",
            ""family-names"": ""Levermann"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0003-4432-4704""
        },
        {
            ""given-names"": ""Johannes"",
            ""family-names"": ""Feldmann"",
            ""orcid"": ""https://orcid.org/0000-0003-4210-0221"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)""
        },
        {
            ""given-names"": ""Julius"",
            ""family-names"": ""Garbe"",
            ""orcid"": ""https://orcid.org/0000-0003-3140-3307"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)""
        },
        {
            ""given-names"": ""Marianne"",
            ""family-names"": ""Haseloff"",
            ""affiliation"": ""University of Wisconsin-Madison"",
            ""orcid"": ""https://orcid.org/0000-0002-6576-5384""
        },
        {
            ""given-names"": ""Julien"",
            ""family-names"": ""Seguinot"",
            ""affiliation"": ""University of Bergen"",
            ""orcid"": ""https://orcid.org/0000-0002-5315-0761""
        },
        {
            ""given-names"": ""Sebastian"",
            ""family-names"": ""Hinck"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH"",
            ""orcid"": ""https://orcid.org/0000-0002-6428-305X""
        },
        {
            ""given-names"": ""Thomas"",
            ""family-names"": ""Kleiner"",
            ""affiliation"": ""Alfred Wegener Institute Helmholtz Centre for Polar and Marine Research"",
            ""orcid"": ""https://orcid.org/0000-0001-7825-5765""
        },
        {
            ""given-names"": ""Elizabeth"",
            ""family-names"": ""Fischer"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0002-3987-2696""
        },
        {
            ""given-names"": ""Anders"",
            ""family-names"": ""Damsgaard"",
            ""affiliation"": ""Aarhus University"",
            ""orcid"": ""https://orcid.org/0000-0002-9284-1709""
        },
        {
            ""given-names"": ""Craig"",
            ""family-names"": ""Lingle"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""given-names"": ""Ward"",
            ""family-names"": ""van Pelt"",
            ""affiliation"": ""Uppsala Universitet"",
            ""orcid"": ""https://orcid.org/0000-0003-4839-7900""
        },
        {
            ""given-names"": ""Florian"",
            ""family-names"": ""Ziemen"",
            ""orcid"": ""https://orcid.org/0000-0001-7095-5740"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH""
        },
        {
            ""given-names"": ""Nathan"",
            ""family-names"": ""Shemonski"",
            ""affiliation"": ""Zoox, Inc""
        },
        {
            ""given-names"": ""Kenneth"",
            ""family-names"": ""Mankoff"",
            ""affiliation"": ""Goddard Institute for Space Studies"",
            ""orcid"": ""https://orcid.org/0000-0001-5453-2019""
        },
        {
            ""given-names"": ""Joseph"",
            ""family-names"": ""Kennedy"",
            ""affiliation"": ""University of Alaska Fairbanks"",
            ""orcid"": ""https://orcid.org/0000-0002-9348-693X""
        },
        {
            ""given-names"": ""Kyle"",
            ""family-names"": ""Blum"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""given-names"": ""Marijke"",
            ""family-names"": ""Habermann"",
            ""affiliation"": ""University of Alaska Fairbanks""
        },
        {
            ""given-names"": ""Daniella"",
            ""family-names"": ""DellaGiustina"",
            ""affiliation"": ""University of Arizona"",
            ""orcid"": ""https://orcid.org/0000-0002-5643-1956""
        },
        {
            ""given-names"": ""Regine"",
            ""family-names"": ""Hock"",
            ""affiliation"": ""University of Oslo"",
            ""orcid"": ""https://orcid.org/0000-0001-8336-9441""
        },
        {
            ""given-names"": ""Moritz"",
            ""family-names"": ""Kreuzer"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)"",
            ""orcid"": ""https://orcid.org/0000-0002-8622-6638""
        },
        {
            ""given-names"": ""Enrico"",
            ""family-names"": ""Degregori"",
            ""affiliation"": ""Deutsches Klimarechenzentrum GmbH""
        },
        {
            ""given-names"": ""Simon"",
            ""family-names"": ""Schoell"",
            ""affiliation"": ""Potsdam Institute for Climate Impact Research (PIK)""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.1199019""
    ],
    ""license"": ""GPL-3.0-or-later"",
    ""keywords"": [
        ""ice sheet model"",
        ""open source"",
        ""geophysics"",
        ""sea level""
    ]
}","{
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/pism/pism/main/README.rst""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/pism""
    }
  ],
 ""license"": {
    ""name"": ""GNU General Public License v3.0"",
    ""url"": ""https://api.github.com/licenses/gpl-3.0""
  },
  ""keywords"": ""c-plus-plus, climate, geophysics, glacier, ice-sheet, mpi, numerical, parallel, petsc, python, scientific-computing, sea-level, sphinx"",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""GNU General Public License v3.0"",
    ""url"": ""https://api.github.com/licenses/gpl-3.0""
  },
  ""codeRepository"": ""https://github.com/pism/pism"",
  ""issueTracker"": ""https://github.com/pism/pism/issues"",
  ""dateCreated"": ""2011-11-04"",
  ""dateModified"": ""2025-03-07"",
  ""downloadUrl"": ""https://github.com/pism/pism/releases"",
  ""name"": ""pism"",
  ""keywords"": ""c-plus-plus, climate, geophysics, glacier, ice-sheet, mpi, numerical, parallel, petsc, python, scientific-computing, sea-level, sphinx"",
  ""programmingLanguage"": [
    ""C++"",
    ""Python"",
    ""TeX"",
    ""Shell"",
    ""C"",
    ""CMake"",
    ""SWIG"",
    ""Fortran"",
    ""Dockerfile"",
    ""MATLAB"",
    ""Makefile"",
    ""Emacs Lisp""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/pism/pism/main/README.rst""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/pism""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/pism/pism/main/CITATION.cff""
  ],
  ""readme"": ""https://raw.githubusercontent.com/pism/pism/main/README.rst"",
  ""description"": [
    ""Repository for the Parallel Ice Sheet Model (PISM)"",
    ""\n.. image:: https://github.com/pism/pism/blob/dev/images/Greenland_RCP_85_2008_2300_comp_1080p30.gif \n\nThe Parallel Ice Sheet Model is an open source, parallel, high-resolution ice sheet model that includes: \n- A hierarchy of available stress balances\n- Marine ice sheet physics, dynamic calving fronts\n- A polythermal, enthalpy-based conservation of energy scheme\n- Extensible coupling to atmospheric and ocean models\n- Verification and validation tools\n- `Documentation <pism-manual_>`_ for users and developers\n- Links to MPI_ and PETSc_ for parallel simulations\n- Use of `CF-compliant <cf_>`_  NetCDF_ files for input and output \nPISM is jointly developed at the `University of Alaska, Fairbanks (UAF) <uaf_>`_ and the\n`Potsdam Institute for Climate Impact Research (PIK) <pik_>`_. UAF developers are based in\nthe `Snow, Ice, and Permafrost Group <sip_>`_ at the `Geophysical Institute <gi_>`_. \nPlease see PISM's manual https://www.pism.io/docs/citing for how to acknowledge the use of\nPISM and PISM's funding sources. If the manual is not available, please refer to the file\n``doc/sphinx/citing/index.rst`` in the PISM repository.\n \n"",
    ""    http://www.pism.io/\n \n""
  ]
}"
https://github.com/NLeSC/MAGMa,"The eMetabolomics research project ================================== .. image:: https://travis-ci.org/NLeSC/MAGMa.svg?branch=master :target: https://travis-ci.org/NLeSC/MAGMa .. image:: https://landscape.io/github/NLeSC/MAGMa/master/landscape.svg?style=flat :target: https://landscape.io/github/NLeSC/MAGMa/master :alt: Code Health .. image:: https://coveralls.io/repos/NLeSC/MAGMa/badge.svg?branch=master :target: https://coveralls.io/r/NLeSC/MAGMa?branch=master .. image:: https://img.shields.io/badge/docker-ready-blue.svg :target: https://hub.docker.com/r/nlesc/magma .. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.1043226.svg :target: https://doi.org/10.5281/zenodo.1043226 The eMetabolomics project is funded by the Netherlands eScience Center and is carried out at Wageningen University and the Netherlands eScience Center in collaboration with the Netherlands Metabolomics Centre. The project develops chemo-informatics based methods for metabolite identification and biochemical network reconstruction in an integrative metabolomics data analysis workflow. Homepage: http://www.emetabolomics.org MAGMa is a abbreviation for 'Ms Annotation based on in silico Generated Metabolites'. .. image:: web/magmaweb/static/img/metabolites.png :alt: Screenshot MAGMa results page Subprojects: - emetabolomics_site - The http://www.emetabolomics.org website - job - Runs MAGMa calculation - joblauncher - Webservice to execute jobs - pubchem - Processing of PubChem database, used to find mass candidates - web - Web application to start jobs and view results Subproject interdependencies ---------------------------- - The `emetabolomics_site` website can be used as starting pages for the `web` application. - The `job` calculation requires a pubchem lookup database which can be made using the `pubchem` application. - The `web` application starts `job` calculations via the `joblauncher` webservice. Joblauncher submodule --------------------- Use following command to initialize and fetch the joblauncher submodule: .. code-block:: bash git submodule update --init License ------- MAGMa is released under the Apache License Version 2.0. The MAGMa web application uses ExtJS GPLv3 with application exception. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""[]"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. # YAML 1.2 # Metadata for citation of this software according to the CFF format (https://citation-file-format.github.io/) cff-version: 1.0.3 message: If you use this software, please cite it as below. title: MAGMa doi: 10.5281/zenodo.1043226 authors: - given-names: Stefan family-names: Verhoeven affiliation: Netherlands eScience Center - given-names: Lars family-names: Ridder affiliation: Netherlands eScience Center - given-names: Marijn family-names: Sanders affiliation: Netherlands eScience Center version: '1.3' date-released: 2017-11-07 repository-code: https://github.com/NLeSC/MAGMa license: Apache-2.0","{
    ""softwareRequirements"": [],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Stefan Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Lars Ridder"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Marijn Sanders"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": ""Netherlands eScience Center"",
    ""identifier"": ""10.5281/zenodo.1043226"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""Metabolomics"",
        ""Data Analysis"",
        ""Chemoinformatics"",
        ""Mass Spectrometry"",
        ""Biochemical Network Reconstruction""
    ]
}","{
    ""softwareRequirements"": [],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Stefan Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Lars Ridder"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Marijn Sanders"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": ""Netherlands eScience Center"",
    ""identifier"": ""10.5281/zenodo.1043226"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""Metabolomics"",
        ""Data Analysis"",
        ""Chemoinformatics"",
        ""Mass Spectrometry"",
        ""Biochemical Network Reconstruction""
    ]
}","{
    ""softwareRequirements"": [
        ""sqlalchemy"",
        ""lxml"",
        ""numpy"",
        ""requests"",
        ""macauthlib"",
        ""mock"",
        ""nose"",
        ""coverage""
    ],
    ""buildInstructions"": ""Installation\n============\n\nEach sub-project has it own installation instructions.\n\nImport into Eclipse\n-------------------\n\nTo get the subprojects as seperate projects into Eclipse do:\n\n1. Import 'Projects from Git'\n2. Use URI with 'git@github.com:NLeSC/MAGMa.git'\n3. Import all branches\n4. Use default destination '~/git/MAGMa'\n5. Import 'Projects from Git'\n6. Use Local with '~/git/MAGMa'\n7. Select import as general project\n8. Open working directory tree and select 'emetabolomics_site'\n9. Repeat steps 5..8 for 'job' and 'web', rename projects by prefixing 'magma'\n10. On 'job' and 'web' project folder right click and select 'PyDev>Set as PyDev Project'\n11. On 'job' and 'web' project folder right click and select 'Properties>PyDev PYTHONPATH'\n12. Press 'Add source folder' and select project folder\n13. Install virtualenv python with packages required by job and web and run 'python setup.py develop' and setup python interpreter.\n14. Import Maven>'Existing Maven Projects'\n15. Set Root Directory to ~/git/MAGMa/joblauncher\n16. On 'joblauncher' project folder right click and select 'Team>Share project'\n17. Select git select magma git repo"",
    ""author"": [
        {
            ""given-names"": ""Stefan"",
            ""family-names"": ""Verhoeven"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""given-names"": ""Lars"",
            ""family-names"": ""Ridder"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""given-names"": ""Marijn"",
            ""family-names"": ""Sanders"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": ""Netherlands eScience Center"",
    ""identifier"": [
        ""10.5281/zenodo.1043226""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": [],
    ""Note"": ""Dependencies are found in another level folder and installation was in INSTALL.rst""
}","{
  ""buildInstructions"": [
    ""https://github.com/NLeSC/MAGMa/tree/master/docs"",
    ""https://github.com/NLeSC/MAGMa/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/MAGMa/master/LICENSE""
  },
  ""keywords"": """",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/MAGMa/master/LICENSE""
  },
  ""codeRepository"": ""https://github.com/NLeSC/MAGMa"",
  ""issueTracker"": ""https://github.com/NLeSC/MAGMa/issues"",
  ""dateCreated"": ""2012-09-20"",
  ""dateModified"": ""2025-01-02"",
  ""downloadUrl"": ""https://github.com/NLeSC/MAGMa/releases"",
  ""name"": ""MAGMa"",
  ""keywords"": """",
  ""programmingLanguage"": [
    ""Python"",
    ""JavaScript"",
    ""Makefile"",
    ""HTML"",
    ""Cython"",
    ""CSS"",
    ""Dockerfile"",
    ""Mako""
  ],
  ""buildInstructions"": [
    ""https://github.com/NLeSC/MAGMa/tree/master/docs"",
    ""https://github.com/NLeSC/MAGMa/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/NLeSC/MAGMa/master/CITATION.cff""
  ],
  ""readme"": ""https://raw.githubusercontent.com/NLeSC/MAGMa/master/README.rst"",
  ""description"": [
    ""eMetabolomics project: Mass Annotation based on in silico Generated Metabolites"",
    ""- The `emetabolomics_site` website can be used as starting pages for the `web` application.\n- The `job` calculation requires a pubchem lookup database which can be made using the `pubchem` application.\n- The `web` application starts `job` calculations via the `joblauncher` webservice.\n \n"",
    "".. image:: https://travis-ci.org/NLeSC/MAGMa.svg?branch=master\n    :target: https://travis-ci.org/NLeSC/MAGMa \n.. image:: https://landscape.io/github/NLeSC/MAGMa/master/landscape.svg?style=flat\n    :target: https://landscape.io/github/NLeSC/MAGMa/master\n    :alt: Code Health \n.. image:: https://coveralls.io/repos/NLeSC/MAGMa/badge.svg?branch=master\n    :target: https://coveralls.io/r/NLeSC/MAGMa?branch=master \n.. image:: https://img.shields.io/badge/docker-ready-blue.svg\n    :target: https://hub.docker.com/r/nlesc/magma \n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.1043226.svg\n   :target: https://doi.org/10.5281/zenodo.1043226 \nThe eMetabolomics project is funded by the Netherlands eScience Center and is carried out at Wageningen University and the Netherlands eScience Center in collaboration with the Netherlands Metabolomics Centre. The project develops chemo-informatics based methods for metabolite identification and biochemical network reconstruction in an integrative metabolomics data analysis workflow. \nHomepage: http://www.emetabolomics.org \nMAGMa is a abbreviation for 'Ms Annotation based on in silico Generated Metabolites'. \n  .. image:: web/magmaweb/static/img/metabolites.png\n     :alt: Screenshot MAGMa results page \nSubprojects: \n- emetabolomics_site - The http://www.emetabolomics.org website\n- job - Runs MAGMa calculation\n- joblauncher - Webservice to execute jobs\n- pubchem - Processing of PubChem database, used to find mass candidates\n- web - Web application to start jobs and view results\n \n"",
    ""Use following command to initialize and fetch the joblauncher submodule: \n.. code-block:: bash \n    git submodule update --init\n \n""
  ]
}"
https://github.com/NLeSC/mcfly,"<p align=""left""> <img src=""https://raw.githubusercontent.com/NLeSC/mcfly/master/mcflylogo_with_regression.png"" width=""200""/> </p> [![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/NLeSC/mcfly/CI_build.yml?branch=main)](https://github.com/NLeSC/mcfly/actions/workflows/CI_build.yml) [![Coverage](https://scrutinizer-ci.com/g/NLeSC/mcfly/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/NLeSC/mcfly/statistics/) [![PyPI](https://img.shields.io/pypi/v/mcfly.svg)](https://pypi.python.org/pypi/mcfly/) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.596127.svg)](https://doi.org/10.5281/zenodo.596127) [![Binder](http://mybinder.org/badge.svg)](http://mybinder.org:/repo/nlesc/mcfly) <!-- The first 12 lines are skipped while generating 'long description' (see setup.py)) --> The goal of mcfly is to ease the use of deep learning technology for time series classification and regression. The advantage of deep learning is that it can handle raw data directly, without the need to compute signal features. Deep learning does not require expert domain knowledge about the data, and has been shown to be competitive with conventional machine learning techniques. As an example, you can apply mcfly on accelerometer data for activity classification, as shown in [the tutorial](https://github.com/NLeSC/mcfly-tutorial). If you use mcfly in your research, please cite the following software paper: D. van Kuppevelt, C. Meijer, F. Huber, A. van der Ploeg, S. Georgievska, V.T. van Hees. _Mcfly: Automated deep learning on time series._ SoftwareX, Volume 12, 2020. [doi: 10.1016/j.softx.2020.100548](https://doi.org/10.1016/j.softx.2020.100548) ## Installation Prerequisites: - Python 3.10, 3.11 - pip - Tensorflow 2 Installing all dependencies in separate conda environment: ```sh conda env create -f environment.yml # activate this new environment source activate mcfly ``` To install the package, run in the project directory: `pip install mcfly` ## Visualization We build a tool to visualize the configuration and performance of the models. The tool can be found on http://nlesc.github.io/mcfly/. To run the model visualization on your own computer, cd to the `html` directory and start up a python web server: `python -m http.server 8888 &` Navigate to `http://localhost:8888/` in your browser to open the visualization. For a more elaborate description of the visualization see [user manual](https://mcfly.readthedocs.io/en/latest/user_manual.html). ## User documentation [User and code documentation](https://mcfly.readthedocs.io). ## Contributing You are welcome to contribute to the code via pull requests. Please have a look at the [NLeSC guide](https://nlesc.gitbooks.io/guide/content/software/software_overview.html) for guidelines about software development. We use numpy-style docstrings for code documentation. ## Licensing Source code and data of mcfly are licensed under the Apache License, version 2.0. import os from setuptools import setup, find_packages with open(os.path.join(os.path.dirname(__file__), 'mcfly/_version.py')) as versionpy: exec(versionpy.read()) def read(fname): return open(os.path.join(os.path.dirname(__file__), fname)).read() setup( name = ""mcfly"", version = __version__, description = (""Deep learning for time series data""), license = ""Apache Software License 2.0"", keywords = ""Python"", url = ""https://github.com/NLeSC/mcfly"", packages = find_packages(), long_description=read('README.md'), long_description_content_type='text/markdown', classifiers=[ 'License :: OSI Approved :: Apache Software License', 'Programming Language :: Python', ], test_suite=""tests"", python_requires='>=3.10', install_requires=[ ""numpy<1.22.0"", ""scikit-learn>=0.15.0,<1.1.0"", ""scipy>=0.11,<1.8.0"", ""tensorflow>=2.0.0"", ""h5py"", ], extras_require={""dev"": [""coverage"", ""prospector[with_pyroma]==1.7.7"", ""pytest"", ""pytest-cov"", ], ""publishing"": [ ""build"", ""twine"", ""wheel"", ""sphinx"", ""sphinx-rtd-theme"" ] } ) Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""{}"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright {yyyy} {name of copyright owner} Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. # YAML 1.2 --- abstract: ""The goal of mcfly is to ease the use of deep learning technology for time series classification. The advantage of deep learning is that it can handle raw data directly, without the need to compute signal features. Deep learning does not require expert domain knowledge about the data, and has been shown to be competitive with conventional machine learning techniques. As an example, you can apply mcfly on accelerometer data for activity classification."" authors: - affiliation: ""Netherlands eScience Center"" family-names: Kuppevelt given-names: Dafne name-particle: van - affiliation: ""Netherlands eScience Center"" family-names: Meijer given-names: Christiaan orcid: ""https://orcid.org/0000-0002-5529-5761"" - affiliation: ""Netherlands eScience Center"" family-names: Huber given-names: Florian orcid: ""https://orcid.org/0000-0002-3535-9406"" - affiliation: ""Netherlands eScience Center"" family-names: Hees given-names: Vincent name-particle: van orcid: ""https://orcid.org/0000-0003-0182-9008"" - affiliation: ""Netherlands eScience Center"" family-names: Solino Fernandez given-names: Breixo - affiliation: ""Netherlands eScience Center"" family-names: Bos given-names: Patrick - affiliation: ""Netherlands eScience Center"" family-names: Spaaks given-names: Jurriaan - affiliation: ""Netherlands eScience Center"" family-names: Kuzak given-names: Mateusz orcid: ""https://orcid.org/0000-0003-0087-6021"" - affiliation: ""Netherlands eScience Center"" family-names: Hidding given-names: Johan - affiliation: ""Netherlands eScience Center"" family-names: Ploeg given-names: Atze name-particle: ""van der"" - affiliation: ""Netherlands eScience Center"" family-names: Lüken given-names: Malte orcid: ""https://orcid.org/0000-0001-7095-203X"" - affiliation: ""Netherlands eScience Center"" family-names: Lyashevska given-names: Olga orcid: ""https://orcid.org/0000-0002-8686-8550"" cff-version: ""1.2.0"" date-released: 2022-12-21 doi: ""10.5281/zenodo.596127"" keywords: - ""machine learning"" - ""deep learning"" - ""time series"" - ""automated machine learning"" license: ""Apache-2.0"" message: ""If you use this software, please cite it using these metadata."" title: ""mcfly: deep learning for time series"" version: ""4.0.0"" references: - type: article title: ""Mcfly: Automated deep learning on time series"" doi: 10.1016/j.softx.2020.100548 authors: - affiliation: ""Netherlands eScience Center"" family-names: Kuppevelt given-names: Dafne name-particle: van - affiliation: ""Netherlands eScience Center"" family-names: Meijer given-names: Christiaan - affiliation: ""Netherlands eScience Center"" family-names: Huber given-names: Florian orcid: ""https://orcid.org/0000-0002-3535-9406"" - affiliation: ""Netherlands eScience Center"" family-names: Ploeg given-names: Atze name-particle: ""van der"" - affiliation: ""Netherlands eScience Center"" family-names: Sonja given-names: Georgievska - affiliation: ""Netherlands eScience Center"" family-names: Hees given-names: Vincent name-particle: van orcid: ""https://orcid.org/0000-0003-0182-9008""","{
    ""softwareRequirements"": [
        ""numpy: >=3.10"",
        ""scikit-learn: >=0.15.0,<1.1.0"",
        ""scipy: >=0.11,<1.8.0"",
        ""tensorflow: >=2.0.0"",
        ""h5py""
    ],
    ""buildInstructions"": ""1. Install all dependencies in a separate conda environment: conda env create -f environment.yml 2. Activate the new environment: source activate mcfly 3. Install the package: pip install mcfly"",
    ""author"": [
        {
            ""name"": ""Dafne van Kuppevelt"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Christiaan Meijer"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5529-5761""
        },
        {
            ""name"": ""Florian Huber"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-3535-9406""
        },
        {
            ""name"": ""Atze van der Ploeg"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Sonja Georgievska"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Vincent van Hees"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-0182-9008""
        },
        {
            ""name"": ""Breixo Solino Fernandez"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Patrick Bos"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Jurriaan Spaaks"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Mateusz Kuzak"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-0087-6021""
        },
        {
            ""name"": ""Johan Hidding"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Malte Lüken"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-7095-203X""
        },
        {
            ""name"": ""Olga Lyashevska"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8686-8550""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.596127"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""Machine Learning"",
        ""Deep Learning"",
        ""Time Series"",
        ""Automated Machine Learning""
    ]
}","{
    ""softwareRequirements"": [
        ""numpy: >=3.10"",
        ""scikit-learn: >=0.15.0,<1.1.0"",
        ""scipy: >=0.11,<1.8.0"",
        ""tensorflow: >=2.0.0"",
        ""h5py""
    ],
    ""buildInstructions"": ""1. Install all dependencies in a separate conda environment: conda env create -f environment.yml 2. Activate the new environment: source activate mcfly 3. Install the package: pip install mcfly"",
    ""author"": [
        {
            ""name"": ""Dafne van Kuppevelt"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Christiaan Meijer"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5529-5761""
        },
        {
            ""name"": ""Florian Huber"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-3535-9406""
        },
        {
            ""name"": ""Atze van der Ploeg"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Sonja Georgievska"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Vincent van Hees"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-0182-9008""
        },
        {
            ""name"": ""Breixo Solino Fernandez"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Patrick Bos"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Jurriaan Spaaks"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Mateusz Kuzak"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-0087-6021""
        },
        {
            ""name"": ""Johan Hidding"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Malte Lüken"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0001-7095-203X""
        },
        {
            ""name"": ""Olga Lyashevska"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-8686-8550""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.596127"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""Machine Learning"",
        ""Deep Learning"",
        ""Time Series"",
        ""Automated Machine Learning""
    ]
}","{
    ""softwareRequirements"": [
        ""numpy:<1.22.0"",
        ""scikit-learn:>=0.15.0,<1.1.0"",
        ""scipy:>=0.11,<1.8.0"",
        ""tensorflow:>=2.0.0"",
        ""h5py""
    ],
    ""buildInstructions"": ""\nPrerequisites:\n* Python 3.10, 3.11\n* pip\n* Tensorflow 2\nInstalling all dependencies in separate conda environment:\n\nconda env create -f environment.yml\n\n# activate this new environment\nsource activate mcfly\n\nTo install the package, run in the project directory:\n`pip install mcfly`"",
    ""author"": [
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""van Kuppevelt, Dafne""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Meijer, Christiaan"",
            ""orcid"": ""0000-0002-5529-5761""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Huber, Florian"",
            ""orcid"": ""0000-0002-3535-9406""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""van Hees, Vincent"",
            ""orcid"": ""0000-0003-0182-9008""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Solino Fernandez, Breixo""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Bos, Patrick""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Spaaks, Jurriaan""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Kuzak, Mateusz"",
            ""orcid"": ""0000-0003-0087-6021""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Hidding, Johan""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""van der Ploeg, Atze""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Lüken, Malte"",
            ""orcid"": ""0000-0001-7095-203X""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Lyashevska, Olga"",
            ""orcid"": ""0000-0002-8686-8550""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.596127""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""machine learning"",
        ""deep learning"",
        ""time series"",
        ""automated machine learning""
    ]
}","{
  ""buildInstructions"": [
    ""https://github.com/NLeSC/mcfly/wiki"",
    ""https://raw.githubusercontent.com/NLeSC/mcfly/main/README.md"",
    ""https://mcfly.readthedocs.io/""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.596127"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/mcfly/main/LICENSE""
  },
  ""keywords"": ""auto-ml, deep-learning, time-series"", 
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/mcfly/main/LICENSE""
  },
  ""codeRepository"": ""https://github.com/NLeSC/mcfly"",
  ""issueTracker"": ""https://github.com/NLeSC/mcfly/issues"",
  ""dateCreated"": ""2016-05-19"",
  ""dateModified"": ""2025-02-25"",
  ""downloadUrl"": ""https://github.com/NLeSC/mcfly/releases"",
  ""name"": ""mcfly"",
  ""logo"": ""https://raw.githubusercontent.com/NLeSC/mcfly/master/mcflylogo_with_regression.png"",
  ""keywords"": ""auto-ml, deep-learning, time-series"",
  ""programmingLanguage"": [
    ""JavaScript"",
    ""Python"",
    ""CSS"",
    ""HTML""
  ],
  ""buildInstructions"": [
    ""https://github.com/NLeSC/mcfly/wiki"",
    ""https://raw.githubusercontent.com/NLeSC/mcfly/main/README.md"",
    ""https://mcfly.readthedocs.io/""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/NLeSC/mcfly/main/CITATION.cff""
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.596127"",
  ""readme"": ""https://raw.githubusercontent.com/NLeSC/mcfly/main/README.md"",
  ""description"": [
    ""A deep learning tool for time series classification and regression"",
    ""Source code and data of mcfly are licensed under the Apache License, version 2.0.\n \n"",
    ""The goal of mcfly is to ease the use of deep learning technology for time series classification and regression. The advantage of deep learning is that it can handle raw data directly, without the need to compute signal features. Deep learning does not require  expert domain knowledge about the data, and has been shown to be competitive with conventional machine learning techniques. As an example, you can apply mcfly on accelerometer data for activity classification, as shown in . \nIf you use mcfly in your research, please cite the following software paper: \nD. van Kuppevelt, C. Meijer, F. Huber, A. van der Ploeg, S. Georgievska, V.T. van Hees. _Mcfly: Automated deep learning on time series._\nSoftwareX,\nVolume 12,\n2020. \n"",
    ""We build a tool to visualize the configuration and performance of the models. The tool can be found on http://nlesc.github.io/mcfly/. To run the  model visualization on your own computer, cd to the `html` directory and start up a python web server: \n`python -m http.server 8888 &` \nNavigate to `http://localhost:8888/` in your browser to open the visualization. For a more elaborate description of the visualization see [user manual](https://mcfly.readthedocs.io/en/latest/user_manual.html). \n""
  ]
}"
https://github.com/cdk/cdk,,"{
    ""softwareRequirements"": [
        ""uk.ac.ebi.beam:beam-core:1.3.9"",
        ""uk.ac.ebi.beam:beam-func:1.3.9"",
        ""org.junit.jupiter:junit-jupiter-api:5.11.4"",
        ""org.junit.jupiter:junit-jupiter-params:5.11.4"",
        ""org.junit.jupiter:junit-jupiter-engine:5.11.4"",
        ""org.hamcrest:hamcrest-core:3.0"",
        ""org.hamcrest:hamcrest:3.0"",
        ""org.assertj:assertj-core:3.27.3"",
        ""org.mockito:mockito-core:4.11.0"",
        ""org.mockito:mockito-junit-jupiter:5.15.2"",
        ""javax.vecmath:vecmath:1.5.2"",
        ""gov.nist.math:jama:1.0.3"",
        ""net.sf.jni-inchi:jni-inchi:0.8"",
        ""xom:xom:1.3.9"",
        ""org.apache.felix:org.osgi.core:1.4.0"",
        ""org.apache.logging.log4j:log4j-api:2.24.3"",
        ""org.apache.logging.log4j:log4j-core:2.24.3"",
        ""org.apache.logging.log4j:log4j-1.2-api:2.24.3"",
        ""xerces:xercesImpl:2.12.2"",
        ""xml-apis:xml-apis:2.0.2""
    ],
    ""buildInstructions"": ""mvn install"",
    ""author"": [
        {
            ""name"": ""Christoph Steinbeck""
        },
        {
            ""name"": ""Egon Willighagen"",
            ""email"": ""egonw@users.sf.net"",
            ""url"": ""https://chem-bla-ics.linkedchemistry.info/""
        },
        {
            ""name"": ""Rajarshi Guha""
        },
        {
            ""name"": ""Miguel Rojas Cherto""
        },
        {
            ""name"": ""John Mayfield"",
            ""email"": ""john@nextmovesoftware.com"",
            ""url"": ""http://www.github.com/johnmay/""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Sam Adams""
        },
        {
            ""name"": ""Jonathan Alvarsson""
        },
        {
            ""name"": ""Rich Apodaca""
        },
        {
            ""name"": ""Saravanaraj N Ayyampalayam""
        },
        {
            ""name"": ""Eric Bach""
        },
        {
            ""name"": ""Parit Bansal""
        },
        {
            ""name"": ""Ulrich Bauer""
        },
        {
            ""name"": ""Felix Bänsch""
        },
        {
            ""name"": ""Stephan Beisken""
        },
        {
            ""name"": ""Arvid Berg""
        },
        {
            ""name"": ""Lyle D. Burgoon""
        },
        {
            ""name"": ""Ed Cannon""
        },
        {
            ""name"": ""Zach Charlop-Powers""
        },
        {
            ""name"": ""Alison Choy""
        },
        {
            ""name"": ""Alex Clark""
        },
        {
            ""name"": ""Miguel Correa""
        },
        {
            ""name"": ""Fabian Dortu""
        },
        {
            ""name"": ""Krishna Dole""
        },
        {
            ""name"": ""Tim Dudgeon""
        },
        {
            ""name"": ""Kai Dührkop""
        },
        {
            ""name"": ""Martin Eklund""
        },
        {
            ""name"": ""Luis de Figueiredo""
        },
        {
            ""name"": ""Matteo Floris""
        },
        {
            ""name"": ""Sambit Gaan""
        },
        {
            ""name"": ""Jakub Galgonek""
        },
        {
            ""name"": ""Dan Gezelter""
        },
        {
            ""name"": ""Uli Fechner""
        },
        {
            ""name"": ""Thorsten Flügel""
        },
        {
            ""name"": ""Marco Foscato""
        },
        {
            ""name"": ""Marco Glur""
        },
        {
            ""name"": ""Nimish Gopal""
        },
        {
            ""name"": ""Saulius Gražulis""
        },
        {
            ""name"": ""Martin Gütlein""
        },
        {
            ""name"": ""Yonquan Han""
        },
        {
            ""name"": ""Thierry Hanser""
        },
        {
            ""name"": ""Kai Hartmann""
        },
        {
            ""name"": ""Cyrus Harmon""
        },
        {
            ""name"": ""Tobias Helmus""
        },
        {
            ""name"": ""Christian Hoppe""
        },
        {
            ""name"": ""Oliver Horlacher""
        },
        {
            ""name"": ""Miguel Howard""
        },
        {
            ""name"": ""Andy Howlett""
        },
        {
            ""name"": ""Yi Hsiao""
        },
        {
            ""name"": ""Rafel Israels""
        },
        {
            ""name"": ""Nina Jeliazkova""
        },
        {
            ""name"": ""Geert Josten""
        },
        {
            ""name"": ""Klas Jönsson""
        },
        {
            ""name"": ""Dmitry Katsubo""
        },
        {
            ""name"": ""Danny Katzel""
        },
        {
            ""name"": ""Jules Kerssemakers""
        },
        {
            ""name"": ""Joos Kiener""
        },
        {
            ""name"": ""Valentyn Kolesnikov""
        },
        {
            ""name"": ""Anatoli Krassavine""
        },
        {
            ""name"": ""Stefan Kuhn""
        },
        {
            ""name"": ""Uli Köhler""
        },
        {
            ""name"": ""Violeta Labarta""
        },
        {
            ""name"": ""Jonty Lawson""
        },
        {
            ""name"": ""Kevin Lawson""
        },
        {
            ""name"": ""Daniel Leidert""
        },
        {
            ""name"": ""Katrin Leinweber""
        },
        {
            ""name"": ""Xavier Linn""
        },
        {
            ""name"": ""Qinqing Liu""
        },
        {
            ""name"": ""Edgar Luttmann""
        },
        {
            ""name"": ""Matthias Mailänder""
        },
        {
            ""name"": ""Jean Marois""
        },
        {
            ""name"": ""Todd Martin""
        },
        {
            ""name"": ""Nathanaël Mazuir""
        },
        {
            ""name"": ""Stephan Michels""
        },
        {
            ""name"": ""Martin Morissette""
        },
        {
            ""name"": ""Hirotomo Moriwaki""
        },
        {
            ""name"": ""Scooter Morris""
        },
        {
            ""name"": ""Peter Murray-Rust""
        },
        {
            ""name"": ""Carl Mäsak""
        },
        {
            ""name"": ""Irilenia Nobeli""
        },
        {
            ""name"": ""Noel O'Boyle""
        },
        {
            ""name"": ""Peter Odéus""
        },
        {
            ""name"": ""Magda Oprian""
        },
        {
            ""name"": ""Niels Out""
        },
        {
            ""name"": ""Jerome Pansanel""
        },
        {
            ""name"": ""Julio Peironcely""
        },
        {
            ""name"": ""Diego Pedrosa""
        },
        {
            ""name"": ""Tyler Peryea""
        },
        {
            ""name"": ""Jeffrey Plante""
        },
        {
            ""name"": ""Tomáš Pluskal""
        },
        {
            ""name"": ""Chris Pudney""
        },
        {
            ""name"": ""Syed Asad Rahman""
        },
        {
            ""name"": ""Jonathan Rienstra-Kiracofe""
        },
        {
            ""name"": ""Mark Rijnbeek""
        },
        {
            ""name"": ""David Robinson""
        },
        {
            ""name"": ""Bhupinder Sandhu""
        },
        {
            ""name"": ""Jonas Schaub""
        },
        {
            ""name"": ""Robin Schmid""
        },
        {
            ""name"": ""Jean-Sebastien Senecal""
        },
        {
            ""name"": ""Onkar Shinde""
        },
        {
            ""name"": ""Sulev Sild""
        },
        {
            ""name"": ""Bradley Smith""
        },
        {
            ""name"": ""Ola Spjuth""
        },
        {
            ""name"": ""Christoph Steinbeck""
        },
        {
            ""name"": ""Ralf Stephan""
        },
        {
            ""name"": ""Matt Swain""
        },
        {
            ""name"": ""John K Sterling""
        },
        {
            ""name"": ""Oliver Stueker""
        },
        {
            ""name"": ""Daniel Szisz""
        },
        {
            ""name"": ""Aleksey Tarkhov""
        },
        {
            ""name"": ""Stephan Tomkinson""
        },
        {
            ""name"": ""Gilleain Torrance""
        },
        {
            ""name"": ""Andreas Truszkowski""
        },
        {
            ""name"": ""Paul Turner""
        },
        {
            ""name"": ""Kazuya Ujihara""
        },
        {
            ""name"": ""Tagir Valeev""
        },
        {
            ""name"": ""Mark B Vine""
        },
        {
            ""name"": ""Joerg Wegner""
        },
        {
            ""name"": ""Yap Chun Wei""
        },
        {
            ""name"": ""Michael Wenk""
        },
        {
            ""name"": ""Stephane Werner""
        },
        {
            ""name"": ""Mark Williamson""
        },
        {
            ""name"": ""Lars Willighagen""
        },
        {
            ""name"": ""Yong Zhang""
        },
        {
            ""name"": ""Daniel Zaharevitz""
        },
        {
            ""name"": ""Daniel Katzel""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.5281/ZENODO.8270947"",
    ""license"": ""GNU LGPL 2.1 or later"",
    ""keywords"": [
        ""Cheminformatics"",
        ""Bioinformatics"",
        ""Molecule Representation"",
        ""Reaction Representation"",
        ""File Formats"",
        ""Molecule Processing Algorithms"",
        ""Coordinate Generation"",
        ""Canonical Identifiers"",
        ""Substructure Searching"",
        ""Fingerprint Methods"",
        ""QSAR Descriptor Calculations""
    ]
}","{
    ""softwareRequirements"": [
        ""uk.ac.ebi.beam:beam-core:1.3.9"",
        ""uk.ac.ebi.beam:beam-func:1.3.9"",
        ""org.junit.jupiter:junit-jupiter-api:5.11.4"",
        ""org.junit.jupiter:junit-jupiter-params:5.11.4"",
        ""org.junit.jupiter:junit-jupiter-engine:5.11.4"",
        ""org.hamcrest:hamcrest-core:3.0"",
        ""org.hamcrest:hamcrest:3.0"",
        ""org.assertj:assertj-core:3.27.3"",
        ""org.mockito:mockito-core:4.11.0"",
        ""org.mockito:mockito-junit-jupiter:5.15.2"",
        ""javax.vecmath:vecmath:1.5.2"",
        ""gov.nist.math:jama:1.0.3"",
        ""net.sf.jni-inchi:jni-inchi:0.8"",
        ""xom:xom:1.3.9"",
        ""org.apache.felix:org.osgi.core:1.4.0"",
        ""org.apache.logging.log4j:log4j-api:2.24.3"",
        ""org.apache.logging.log4j:log4j-core:2.24.3"",
        ""org.apache.logging.log4j:log4j-1.2-api:2.24.3"",
        ""xerces:xercesImpl:2.12.2"",
        ""xml-apis:xml-apis:2.0.2""
    ],
    ""buildInstructions"": ""mvn install"",
    ""author"": [
        {
            ""name"": ""Christoph Steinbeck""
        },
        {
            ""name"": ""Egon Willighagen"",
            ""email"": ""egonw@users.sf.net"",
            ""url"": ""https://chem-bla-ics.linkedchemistry.info/""
        },
        {
            ""name"": ""Rajarshi Guha""
        },
        {
            ""name"": ""Miguel Rojas Cherto""
        },
        {
            ""name"": ""John Mayfield"",
            ""email"": ""john@nextmovesoftware.com"",
            ""url"": ""http://www.github.com/johnmay/""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Sam Adams""
        },
        {
            ""name"": ""Jonathan Alvarsson""
        },
        {
            ""name"": ""Rich Apodaca""
        },
        {
            ""name"": ""Saravanaraj N Ayyampalayam""
        },
        {
            ""name"": ""Eric Bach""
        },
        {
            ""name"": ""Parit Bansal""
        },
        {
            ""name"": ""Ulrich Bauer""
        },
        {
            ""name"": ""Felix Bänsch""
        },
        {
            ""name"": ""Stephan Beisken""
        },
        {
            ""name"": ""Arvid Berg""
        },
        {
            ""name"": ""Lyle D. Burgoon""
        },
        {
            ""name"": ""Ed Cannon""
        },
        {
            ""name"": ""Zach Charlop-Powers""
        },
        {
            ""name"": ""Alison Choy""
        },
        {
            ""name"": ""Alex Clark""
        },
        {
            ""name"": ""Miguel Correa""
        },
        {
            ""name"": ""Fabian Dortu""
        },
        {
            ""name"": ""Krishna Dole""
        },
        {
            ""name"": ""Tim Dudgeon""
        },
        {
            ""name"": ""Kai Dührkop""
        },
        {
            ""name"": ""Martin Eklund""
        },
        {
            ""name"": ""Luis de Figueiredo""
        },
        {
            ""name"": ""Matteo Floris""
        },
        {
            ""name"": ""Sambit Gaan""
        },
        {
            ""name"": ""Jakub Galgonek""
        },
        {
            ""name"": ""Dan Gezelter""
        },
        {
            ""name"": ""Uli Fechner""
        },
        {
            ""name"": ""Thorsten Flügel""
        },
        {
            ""name"": ""Marco Foscato""
        },
        {
            ""name"": ""Marco Glur""
        },
        {
            ""name"": ""Nimish Gopal""
        },
        {
            ""name"": ""Saulius Gražulis""
        },
        {
            ""name"": ""Martin Gütlein""
        },
        {
            ""name"": ""Yonquan Han""
        },
        {
            ""name"": ""Thierry Hanser""
        },
        {
            ""name"": ""Kai Hartmann""
        },
        {
            ""name"": ""Cyrus Harmon""
        },
        {
            ""name"": ""Tobias Helmus""
        },
        {
            ""name"": ""Christian Hoppe""
        },
        {
            ""name"": ""Oliver Horlacher""
        },
        {
            ""name"": ""Miguel Howard""
        },
        {
            ""name"": ""Andy Howlett""
        },
        {
            ""name"": ""Yi Hsiao""
        },
        {
            ""name"": ""Rafel Israels""
        },
        {
            ""name"": ""Nina Jeliazkova""
        },
        {
            ""name"": ""Geert Josten""
        },
        {
            ""name"": ""Klas Jönsson""
        },
        {
            ""name"": ""Dmitry Katsubo""
        },
        {
            ""name"": ""Danny Katzel""
        },
        {
            ""name"": ""Jules Kerssemakers""
        },
        {
            ""name"": ""Joos Kiener""
        },
        {
            ""name"": ""Valentyn Kolesnikov""
        },
        {
            ""name"": ""Anatoli Krassavine""
        },
        {
            ""name"": ""Stefan Kuhn""
        },
        {
            ""name"": ""Uli Köhler""
        },
        {
            ""name"": ""Violeta Labarta""
        },
        {
            ""name"": ""Jonty Lawson""
        },
        {
            ""name"": ""Kevin Lawson""
        },
        {
            ""name"": ""Daniel Leidert""
        },
        {
            ""name"": ""Katrin Leinweber""
        },
        {
            ""name"": ""Xavier Linn""
        },
        {
            ""name"": ""Qinqing Liu""
        },
        {
            ""name"": ""Edgar Luttmann""
        },
        {
            ""name"": ""Matthias Mailänder""
        },
        {
            ""name"": ""Jean Marois""
        },
        {
            ""name"": ""Todd Martin""
        },
        {
            ""name"": ""Nathanaël Mazuir""
        },
        {
            ""name"": ""Stephan Michels""
        },
        {
            ""name"": ""Martin Morissette""
        },
        {
            ""name"": ""Hirotomo Moriwaki""
        },
        {
            ""name"": ""Scooter Morris""
        },
        {
            ""name"": ""Peter Murray-Rust""
        },
        {
            ""name"": ""Carl Mäsak""
        },
        {
            ""name"": ""Irilenia Nobeli""
        },
        {
            ""name"": ""Noel O'Boyle""
        },
        {
            ""name"": ""Peter Odéus""
        },
        {
            ""name"": ""Magda Oprian""
        },
        {
            ""name"": ""Niels Out""
        },
        {
            ""name"": ""Jerome Pansanel""
        },
        {
            ""name"": ""Julio Peironcely""
        },
        {
            ""name"": ""Diego Pedrosa""
        },
        {
            ""name"": ""Tyler Peryea""
        },
        {
            ""name"": ""Jeffrey Plante""
        },
        {
            ""name"": ""Tomáš Pluskal""
        },
        {
            ""name"": ""Chris Pudney""
        },
        {
            ""name"": ""Syed Asad Rahman""
        },
        {
            ""name"": ""Jonathan Rienstra-Kiracofe""
        },
        {
            ""name"": ""Mark Rijnbeek""
        },
        {
            ""name"": ""David Robinson""
        },
        {
            ""name"": ""Bhupinder Sandhu""
        },
        {
            ""name"": ""Jonas Schaub""
        },
        {
            ""name"": ""Robin Schmid""
        },
        {
            ""name"": ""Jean-Sebastien Senecal""
        },
        {
            ""name"": ""Onkar Shinde""
        },
        {
            ""name"": ""Sulev Sild""
        },
        {
            ""name"": ""Bradley Smith""
        },
        {
            ""name"": ""Ola Spjuth""
        },
        {
            ""name"": ""Christoph Steinbeck""
        },
        {
            ""name"": ""Ralf Stephan""
        },
        {
            ""name"": ""Matt Swain""
        },
        {
            ""name"": ""John K Sterling""
        },
        {
            ""name"": ""Oliver Stueker""
        },
        {
            ""name"": ""Daniel Szisz""
        },
        {
            ""name"": ""Aleksey Tarkhov""
        },
        {
            ""name"": ""Stephan Tomkinson""
        },
        {
            ""name"": ""Gilleain Torrance""
        },
        {
            ""name"": ""Andreas Truszkowski""
        },
        {
            ""name"": ""Paul Turner""
        },
        {
            ""name"": ""Kazuya Ujihara""
        },
        {
            ""name"": ""Tagir Valeev""
        },
        {
            ""name"": ""Mark B Vine""
        },
        {
            ""name"": ""Joerg Wegner""
        },
        {
            ""name"": ""Yap Chun Wei""
        },
        {
            ""name"": ""Michael Wenk""
        },
        {
            ""name"": ""Stephane Werner""
        },
        {
            ""name"": ""Mark Williamson""
        },
        {
            ""name"": ""Lars Willighagen""
        },
        {
            ""name"": ""Yong Zhang""
        },
        {
            ""name"": ""Daniel Zaharevitz""
        },
        {
            ""name"": ""Daniel Katzel""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.5281/ZENODO.8270947"",
    ""license"": ""GNU LGPL 2.1 or later"",
    ""keywords"": [
        ""Cheminformatics"",
        ""Bioinformatics"",
        ""Molecule Representation"",
        ""Reaction Representation"",
        ""File Formats"",
        ""Molecule Processing Algorithms"",
        ""Coordinate Generation"",
        ""Canonical Identifiers"",
        ""Substructure Searching"",
        ""Fingerprint Methods"",
        ""QSAR Descriptor Calculations""
    ]
}","{
    ""softwareRequirements"": [
        ""uk.ac.ebi.beam:beam-core:1.3.9"",
        ""uk.ac.ebi.beam:beam-func:1.3.9"",
        ""org.junit.jupiter:junit-jupiter-api:5.11.4"",
        ""org.junit.jupiter:junit-jupiter-params:5.11.4"",
        ""org.junit.jupiter:junit-jupiter-engine:5.11.4"",
        ""org.hamcrest:hamcrest-core:3.0"",
        ""org.hamcrest:hamcrest:3.0"",
        ""org.assertj:assertj-core:3.27.3"",
        ""org.mockito:mockito-core:4.11.0"",
        ""org.mockito:mockito-junit-jupiter:5.15.2"",
        ""javax.vecmath:vecmath:1.5.2"",
        ""gov.nist.math:jama:1.0.3"",
        ""net.sf.jni-inchi:jni-inchi:0.8"",
        ""xom:xom:1.3.9"",
        ""org.apache.felix:org.osgi.core:1.4.0"",
        ""org.apache.logging.log4j:log4j-api:2.24.3"",
        ""org.apache.logging.log4j:log4j-core:2.24.3"",
        ""org.apache.logging.log4j:log4j-1.2-api:2.24.3"",
        ""xerces:xercesImpl:2.12.2"",
        ""xml-apis:xml-apis:2.0.2""
    ],
    ""buildInstructions"": ""## Install\n\nThe CDK is a class library intended to be used by other programs, it will not run as a stand-alone program. \n\nThe library is built with Apache Maven and currently requires Java 1.7 or later. From the root of the project run to build the JAR files for each module. The \""bundle/target/\"" directory contains the main JAR with all dependencies included:\n\n$ mvn install\n\nYou can also download a pre-built library JAR from [releases](https://github.com/cdk/cdk/releases). \n\nInclude the main JAR on the Java classpath when compiling and running your code:\n\n$ javac -cp cdk-2.9.jar MyClass.java\n$ java -cp cdk-2.9.jar:. MyClass\n\nIf you are using Maven, you can use the **uber** \""cdk-bundle\"" to grab \neverything, note it is much more efficient to use include the modules you need:\n\n<dependency>\n  <artifactId>cdk-bundle</artifactId>\n  <groupId>org.openscience.cdk</groupId>\n  <version>2.9</version>\n</dependency>\n\nIf you are a Python user, the Cinfony project provides access via [Jython](http://www.redbrick.dcu.ie/~noel/CDKJython.html).\nNoel O'Boyle's [Cinfony](http://cinfony.github.io/) provides a wrapper around the CDK and over toolkits exposing core\nfunctionality as a consistent API. \""ScyJava\"" can also be used, as explain in [ChemPyFormatics](https://cdk.github.io/chempyformatics/).\n\nFurther details on building the project in integrated development environments (IDEs) are available on the wiki:\n * [Building the CDK](https://github.com/cdk/cdk/wiki/Building-CDK)\n * [Maven Reporting Plugins](https://github.com/cdk/cdk/wiki/Maven-Reporting-Plugins)"",
    ""Authors+Contributors"": [
        {
            ""name"": ""Sam Adams""
        },
        {
            ""name"": ""Jonathan Alvarsson""
        },
        {
            ""name"": ""Rich Apodaca""
        },
        {
            ""name"": ""Saravanaraj N Ayyampalayam""
        },
        {
            ""name"": ""Eric Bach""
        },
        {
            ""name"": ""Parit Bansal""
        },
        {
            ""name"": ""Ulrich Bauer""
        },
        {
            ""name"": ""Felix Bänsch""
        },
        {
            ""name"": ""Stephan Beisken""
        },
        {
            ""name"": ""Arvid Berg""
        },
        {
            ""name"": ""Lyle D. Burgoon""
        },
        {
            ""name"": ""Ed Cannon""
        },
        {
            ""name"": ""Zach Charlop-Powers""
        },
        {
            ""name"": ""Alison Choy""
        },
        {
            ""name"": ""Alex Clark""
        },
        {
            ""name"": ""Miguel Correa""
        },
        {
            ""name"": ""Krishna Dole""
        },
        {
            ""name"": ""Fabian Dortu""
        },
        {
            ""name"": ""Tim Dudgeon""
        },
        {
            ""name"": ""Kai Dührkop""
        },
        {
            ""name"": ""Martin Eklund""
        },
        {
            ""name"": ""Uli Fechner""
        },
        {
            ""name"": ""Luis de Figueiredo""
        },
        {
            ""name"": ""Matteo Floris""
        },
        {
            ""name"": ""Thorsten Flügel""
        },
        {
            ""name"": ""Marco Foscato""
        },
        {
            ""name"": ""Sambit Gaan""
        },
        {
            ""name"": ""Jakub Galgonek""
        },
        {
            ""name"": ""Dan Gezelter""
        },
        {
            ""name"": ""Marco Glur""
        },
        {
            ""name"": ""Nimish Gopal""
        },
        {
            ""name"": ""Saulius Gražulis""
        },
        {
            ""name"": ""Rajarshi Guha""
        },
        {
            ""name"": ""Martin Gütlein""
        },
        {
            ""name"": ""Yonquan Han""
        },
        {
            ""name"": ""Thierry Hanser""
        },
        {
            ""name"": ""Cyrus Harmon""
        },
        {
            ""name"": ""Kai Hartmann""
        },
        {
            ""name"": ""Tobias Helmus""
        },
        {
            ""name"": ""Christian Hoppe""
        },
        {
            ""name"": ""Oliver Horlacher""
        },
        {
            ""name"": ""Miguel Howard""
        },
        {
            ""name"": ""Andy Howlett""
        },
        {
            ""name"": ""Yi Hsiao""
        },
        {
            ""name"": ""Rafel Israels""
        },
        {
            ""name"": ""Nina Jeliazkova""
        },
        {
            ""name"": ""Geert Josten""
        },
        {
            ""name"": ""Klas Jönsson""
        },
        {
            ""name"": ""Dmitry Katsubo""
        },
        {
            ""name"": ""Danny Katzel""
        },
        {
            ""name"": ""Jules Kerssemakers""
        },
        {
            ""name"": ""Joos Kiener""
        },
        {
            ""name"": ""Valentyn Kolesnikov""
        },
        {
            ""name"": ""Anatoli Krassavine""
        },
        {
            ""name"": ""Stefan Kuhn""
        },
        {
            ""name"": ""Uli Köhler""
        },
        {
            ""name"": ""Violeta Labarta""
        },
        {
            ""name"": ""Jonty Lawson""
        },
        {
            ""name"": ""Kevin Lawson""
        },
        {
            ""name"": ""Daniel Leidert""
        },
        {
            ""name"": ""Katrin Leinweber""
        },
        {
            ""name"": ""Xavier Linn""
        },
        {
            ""name"": ""Qinqing Liu""
        },
        {
            ""name"": ""Edgar Luttmann""
        },
        {
            ""name"": ""Matthias Mailänder""
        },
        {
            ""name"": ""Jean Marois""
        },
        {
            ""name"": ""Todd Martin""
        },
        {
            ""name"": ""John Mayfield""
        },
        {
            ""name"": ""Nathanaël Mazuir""
        },
        {
            ""name"": ""Stephan Michels""
        },
        {
            ""name"": ""Martin Morissette""
        },
        {
            ""name"": ""Hirotomo Moriwaki""
        },
        {
            ""name"": ""Scooter Morris""
        },
        {
            ""name"": ""Peter Murray-Rust""
        },
        {
            ""name"": ""Carl Mäsak""
        },
        {
            ""name"": ""Irilenia Nobeli""
        },
        {
            ""name"": ""Noel O'Boyle""
        },
        {
            ""name"": ""Peter Odéus""
        },
        {
            ""name"": ""Magda Oprian""
        },
        {
            ""name"": ""Niels Out""
        },
        {
            ""name"": ""Jerome Pansanel""
        },
        {
            ""name"": ""Diego Pedrosa""
        },
        {
            ""name"": ""Julio Peironcely""
        },
        {
            ""name"": ""Tyler Peryea""
        },
        {
            ""name"": ""Jeffrey Plante""
        },
        {
            ""name"": ""Tomáš Pluskal""
        },
        {
            ""name"": ""Chris Pudney""
        },
        {
            ""name"": ""Syed Asad Rahman""
        },
        {
            ""name"": ""Jonathan Rienstra-Kiracofe""
        },
        {
            ""name"": ""Mark Rijnbeek""
        },
        {
            ""name"": ""David Robinson""
        },
        {
            ""name"": ""Miguel Rojas Cherto""
        },
        {
            ""name"": ""Bhupinder Sandhu""
        },
        {
            ""name"": ""Jonas Schaub""
        },
        {
            ""name"": ""Robin Schmid""
        },
        {
            ""name"": ""Jean-Sebastien Senecal""
        },
        {
            ""name"": ""Onkar Shinde""
        },
        {
            ""name"": ""Sulev Sild""
        },
        {
            ""name"": ""Bradley Smith""
        },
        {
            ""name"": ""Ola Spjuth""
        },
        {
            ""name"": ""Christoph Steinbeck""
        },
        {
            ""name"": ""Ralf Stephan""
        },
        {
            ""name"": ""John K Sterling""
        },
        {
            ""name"": ""Oliver Stueker""
        },
        {
            ""name"": ""Matt Swain""
        },
        {
            ""name"": ""Daniel Szisz""
        },
        {
            ""name"": ""Aleksey Tarkhov""
        },
        {
            ""name"": ""Stephan Tomkinson""
        },
        {
            ""name"": ""Gilleain Torrance""
        },
        {
            ""name"": ""Andreas Truszkowski""
        },
        {
            ""name"": ""Paul Turner""
        },
        {
            ""name"": ""Kazuya Ujihara""
        },
        {
            ""name"": ""Tagir Valeev""
        },
        {
            ""name"": ""Mark B Vine""
        },
        {
            ""name"": ""Joerg Wegner""
        },
        {
            ""name"": ""Yap Chun Wei""
        },
        {
            ""name"": ""Michael Wenk""
        },
        {
            ""name"": ""Stephane Werner""
        },
        {
            ""name"": ""Mark Williamson""
        },
        {
            ""name"": ""Egon Willighagen""
        },
        {
            ""name"": ""Lars Willighagen""
        },
        {
            ""name"": ""Yong Zhang""
        },
        {
            ""name"": ""Daniel Zaharevitz""
        }
    ],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/ZENODO.8270947""
    ],
    ""license"": ""LGPL v2"",
    ""keywords"": []
}","{
  ""buildInstructions"": [
    ""https://github.com/cdk/cdk/wiki"",
    ""https://raw.githubusercontent.com/cdk/cdk/main/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/cdk""
    }
  ],
  ""license"": {
    ""name"": ""GNU Lesser General Public License v2.1"",
    ""url"": ""https://api.github.com/licenses/lgpl-2.1""
  },
  ""keywords"": ""bioinformatics, blueobelisk, cheminformatics, chemistry, code4lib, java"",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""GNU Lesser General Public License v2.1"",
    ""url"": ""https://api.github.com/licenses/lgpl-2.1""
  },
  ""codeRepository"": ""https://github.com/cdk/cdk"",
  ""issueTracker"": ""https://github.com/cdk/cdk/issues"",
  ""dateCreated"": ""2010-05-11"",
  ""dateModified"": ""2025-03-11"",
  ""downloadUrl"": ""https://github.com/cdk/cdk/releases"",
  ""name"": ""cdk"",
  ""logo"": ""https://sonarcloud.io/api/project_badges/measure?project=cdk&amp;metric=bugs"",
  ""keywords"": ""bioinformatics, blueobelisk, cheminformatics, chemistry, code4lib, java"",
  ""programmingLanguage"": [
    ""Java"",
    ""Pawn"",
    ""HTML""
  ],
  ""buildInstructions"": [
    ""https://github.com/cdk/cdk/wiki"",
    ""https://raw.githubusercontent.com/cdk/cdk/main/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/cdk""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/cdk/cdk/main/CITATION.cff""
  ],
  ""readme"": ""https://raw.githubusercontent.com/cdk/cdk/main/README.md"",
  ""description"": [
    ""The Chemistry Development Kit"",
    ""The CDK is an open-source Java library for cheminformatics and bioinformatics.\n\nKey Features:\n  * Molecule and reaction valence bond representation.\n  * Read and write file formats: SMILES, SDF, InChI, Mol2, CML, and others.\n  * Efficient molecule processing algorithms: Ring Finding, Kekulisation, Aromaticity.\n  * Coordinate generation and rendering.\n  * Canonical identifiers for fast exact searching.\n  * Substructure and SMARTS pattern searching.\n  * ECFP, Daylight, MACCS, and other fingerprint methods for similarity searching.\n  * QSAR descriptor calculations\n"",
    "" \nCopyright &copy; 1997-2025 The CDK Development Team \nLicense: LGPL v2, see LICENSE.txt \n[Home Page](https://cdk.github.io/) | [JavaDoc](http://cdk.github.io/cdk/latest/docs/api/index.html?overview-summary.html) | [Wiki](https://github.com/cdk/cdk/wiki) | [Issues](https://github.com/cdk/cdk/issues) | [Mailing List](https://sourceforge.net/projects/cdk/lists/cdk-user)\n \n""
  ]
}"
https://github.com/wadpac/GGIR,"![](vignettes/GGIR-MASTERLOGO-RGB.png) ![GitHub Actions R-CMD-check](https://github.com/wadpac/GGIR/workflows/R-CMD-check/badge.svg) [![codecov](https://codecov.io/gh/wadpac/GGIR/graph/badge.svg?token=p5Po3OpEPG)](https://app.codecov.io/gh/wadpac/GGIR) [![](https://cranlogs.r-pkg.org/badges/last-month/GGIR)](https://cran.r-project.org/package=GGIR) ## Getting started: The package [documentation](https://wadpac.github.io/GGIR/) provides extensive documentation on GGIR and its functionalities. ## Contribution guidelines: We always welcome contributions to the package. If you want to contribute to the development of GGIR, have a look at the [contribution guidelines](https://github.com/wadpac/GGIR/blob/master/CONTRIBUTING.md). ### Images usaged The copyright of the GGIR logo as contained in the file vignettes/GGIR-MASTERLOGO-RGB.png lies with Accelting (Almere, The Netherlands), please contact v.vanhees@accelting.com to ask for permission to use this logo. All other images in this repository are released under the Creative Commons Attribution 4.0 International (CC BY 4.0) license. Package: GGIR Type: Package Title: Raw Accelerometer Data Analysis Version: 3.2-1 Date: 2025-03-11 Authors@R: c(person(""Vincent T"",""van Hees"",role=c(""aut"",""cre""), email=""v.vanhees@accelting.com""), person(""Jairo H"",""Migueles"",role=""aut"", email=""jairo@jhmigueles.com"", comment = c(ORCID = ""0000-0003-0366-6935"")), person(""Severine"",""Sabia"",role=""ctb""), person(""Matthew R"",""Patterson"",role=""ctb""), person(""Zhou"",""Fang"",role=""ctb""), person(""Joe"",""Heywood"",role=""ctb""), person(""Joan"",""Capdevila Pujol"",role=""ctb""), person(""Lena"",""Kushleyeva"",role=""ctb""), person(""Mathilde"",""Chen"",role=""ctb""), person(""Manasa"",""Yerramalla"",role=""ctb""), person(given = ""Patrick"",family = ""Bos"", role = ""ctb"", email = ""egpbos@gmail.com"", comment = c(ORCID = ""0000-0002-6033-960X"")), person(given = ""Taren"",family = ""Sanders"", role = ""ctb""), person(""Chenxuan"",""Zhao"",role=""ctb""), person(""Ian"",""Meneghel Danilevicz"", role=""ctb"", email=""ian.meneghel-danilevicz @ inserm.fr"", comment = c(ORCID = ""0000-0003-4541-0524"")), person(""Victor"",""Barreto Mesquita"", role=""ctb"", email=""victormesquita40@hotmail.com""), person(""Gaia"",""Segantin"",role=""ctb""), person(""Medical Research Council UK"", role = c(""cph"", ""fnd"")), person(""Accelting"", role = c(""cph"", ""fnd"")), person(""French National Research Agency"", role = c(""cph"", ""fnd"")) ) Maintainer: Vincent T van Hees <v.vanhees@accelting.com> Description: A tool to process and analyse data collected with wearable raw acceleration sensors as described in Migueles and colleagues (JMPB 2019), and van Hees and colleagues (JApplPhysiol 2014; PLoSONE 2015). The package has been developed and tested for binary data from 'GENEActiv' <https://activinsights.com/>, binary (.gt3x) and .csv-export data from 'Actigraph' <https://theactigraph.com> devices, and binary (.cwa) and .csv-export data from 'Axivity' <https://axivity.com>. These devices are currently widely used in research on human daily physical activity. Further, the package can handle accelerometer data file from any other sensor brand providing that the data is stored in csv format. Also the package allows for external function embedding. URL: https://github.com/wadpac/GGIR/, https://groups.google.com/forum/#!forum/RpackageGGIR, https://wadpac.github.io/GGIR/ BugReports: https://github.com/wadpac/GGIR/issues License: Apache License (== 2.0) | file LICENSE Suggests: testthat, covr, knitr, rmarkdown, actilifecounts, readxl Imports: data.table, foreach, doParallel, signal, zoo, unisensR, ineq, methods, psych, irr, lubridate, GGIRread, ActCR, read.gt3x Depends: stats, utils, R (>= 3.5) VignetteBuilder: knitr Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""[]"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","{""Dependencies"": [""data.table"", ""foreach"", ""doParallel"", ""signal"", ""zoo"", ""unisensR"", ""ineq"", ""methods"", ""psych"", ""irr"", ""lubridate"", ""GGIRread"", ""ActCR"", ""read.gt3x""], ""Installation_Instructions"": """", ""Authors"": [{""name"": ""Vincent T van Hees"", ""email"": ""v.vanhees@accelting.com"", ""role"": ""aut"", ""cre""}, {""name"": ""Jairo H Migueles"", ""email"": ""jairo@jhmigueles.com"", ""ORCID"": ""0000-0003-0366-6935"", ""role"": ""aut""}, {""name"": ""Severine Sabia"", ""role"": ""ctb""}, {""name"": ""Matthew R Patterson"", ""role"": ""ctb""}, {""name"": ""Zhou Fang"", ""role"": ""ctb""}, {""name"": ""Joe Heywood"", ""role"": ""ctb""}, {""name"": ""Joan Capdevila Pujol"", ""role"": ""ctb""}, {""name"": ""Lena Kushleyeva"", ""role"": ""ctb""}, {""name"": ""Mathilde Chen"", ""role"": ""ctb""}, {""name"": ""Manasa Yerramalla"", ""role"": ""ctb""}, {""name"": ""Patrick Bos"", ""email"": ""egpbos@gmail.com"", ""ORCID"": ""0000-0002-6033-960X"", ""role"": ""ctb""}, {""name"": ""Taren Sanders"", ""role"": ""ctb""}, {""name"": ""Chenxuan Zhao"", ""role"": ""ctb""}, {""name"": ""Ian Meneghel Danilevicz"", ""email"": ""ian.meneghel-danilevicz @ inserm.fr"", ""ORCID"": ""0000-0003-4541-0524"", ""role"": ""ctb""}, {""name"": ""Victor Barreto Mesquita"", ""email"": ""victormesquita40@hotmail.com"", ""role"": ""ctb""}, {""name"": ""Gaia Segantin"", ""role"": ""ctb""}, {""name"": ""Medical Research Council UK"", ""role"": ""cph"", ""fnd""}, {""name"": ""Accelting"", ""role"": ""cph"", ""fnd""}, {""name"": ""French National Research Agency"", ""role"": ""cph"", ""fnd""}], ""Contributors"": [], ""Funding"": ""Medical Research Council UK, Accelting, French National Research Agency"", ""DOI"": """", ""License"": ""Apache License 2.0"", ""Keywords"": [""Accelerometer Data Analysis"", ""Wearable Sensors"", ""Physical Activity"", ""Data Processing"", ""Data Analysis"", ""Research Tools"", ""Scientific Computing""]}","{
    ""softwareRequirements"": [
        ""data.table"",
        ""foreach"",
        ""doParallel"",
        ""signal"",
        ""zoo"",
        ""unisensR"",
        ""ineq"",
        ""methods"",
        ""psych"",
        ""irr"",
        ""lubridate"",
        ""GGIRread"",
        ""ActCR"",
        ""read.gt3x""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Vincent T van Hees"",
            ""email"": ""v.vanhees@accelting.com"",
            ""role"": [
                ""aut"",
                ""cre""
            ]
        },
        {
            ""name"": ""Jairo H Migueles"",
            ""email"": ""jairo@jhmigueles.com"",
            ""ORCID"": ""0000-0003-0366-6935"",
            ""role"": ""aut""
        },
        {
            ""name"": ""Severine Sabia"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Matthew R Patterson"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Zhou Fang"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Joe Heywood"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Joan Capdevila Pujol"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Lena Kushleyeva"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Mathilde Chen"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Manasa Yerramalla"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Patrick Bos"",
            ""email"": ""egpbos@gmail.com"",
            ""ORCID"": ""0000-0002-6033-960X"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Taren Sanders"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Chenxuan Zhao"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Ian Meneghel Danilevicz"",
            ""email"": ""ian.meneghel-danilevicz @ inserm.fr"",
            ""ORCID"": ""0000-0003-4541-0524"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Victor Barreto Mesquita"",
            ""email"": ""victormesquita40@hotmail.com"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Gaia Segantin"",
            ""role"": ""ctb""
        },
        {
            ""name"": ""Medical Research Council UK"",
            ""role"": [
                ""cph"",
                ""fnd""
            ]
        },
        {
            ""name"": ""Accelting"",
            ""role"": [
                ""cph"",
                ""fnd""
            ]
        },
        {
            ""name"": ""French National Research Agency"",
            ""role"": [
                ""cph"",
                ""fnd""
            ]
        }
    ],
    ""contributor"": [],
    ""funder"": ""Medical Research Council UK, Accelting, French National Research Agency"",
    ""identifier"": """",
    ""license"": ""Apache License 2.0"",
    ""keywords"": [
        ""Accelerometer Data Analysis"",
        ""Wearable Sensors"",
        ""Physical Activity"",
        ""Data Processing"",
        ""Data Analysis"",
        ""Research Tools"",
        ""Scientific Computing""
    ]
}","{
    ""softwareRequirements"": [
        ""data.table"",
        ""foreach"",
        ""doParallel"",
        ""signal"",
        ""zoo"",
        ""unisensR"",
        ""ineq"",
        ""methods"",
        ""psych"",
        ""irr"",
        ""lubridate"",
        ""GGIRread"",
        ""ActCR"",
        ""read.gt3x""
    ],
    ""buildInstructions"": ""Available in vignettes chapter"",
    ""author"": [
        {
            ""name"": ""Vincent T van Hees"",
            ""role"": [
                ""aut"",
                ""cre""
            ]
        },
        {
            ""name"": ""Jairo H Migueles"",
            ""role"": [
                ""aut""
            ],
            ""orcid"": ""0000-0003-0366-6935""
        },
        {
            ""name"": ""Severine Sabia"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Matthew R Patterson"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Zhou Fang"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Joe Heywood"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Joan Capdevila Pujol"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Lena Kushleyeva"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Mathilde Chen"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Manasa Yerramalla"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Patrick Bos"",
            ""role"": [
                ""ctb""
            ],
            ""orcid"": ""0000-0002-6033-960X""
        },
        {
            ""name"": ""Taren Sanders"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Chenxuan Zhao"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Ian Meneghel Danilevicz"",
            ""role"": [
                ""ctb""
            ],
            ""orcid"": ""0000-0003-4541-0524""
        },
        {
            ""name"": ""Victor Barreto Mesquita"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Gaia Segantin"",
            ""role"": [
                ""ctb""
            ]
        },
        {
            ""name"": ""Medical Research Council UK"",
            ""role"": [
                ""cph"",
                ""fnd""
            ]
        },
        {
            ""name"": ""Accelting"",
            ""role"": [
                ""cph"",
                ""fnd""
            ]
        },
        {
            ""name"": ""French National Research Agency"",
            ""role"": [
                ""cph"",
                ""fnd""
            ]
        }
    ],
    ""contributor"": [],
    ""funder"": ""Medical Research Council UK, Accelting, French National Research Agency"",
    ""identifier"": [],
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""sleep research"",
        ""accelerometer"",
        ""physical activity research""
    ]
}","{
  ""buildInstructions"": [
    ""https://github.com/wadpac/GGIR/wiki"",
    ""---\ntitle: \""Installation of the GGIR R Package\""\noutput:\n   html_document:\n    toc : true\n    number_sections: true\n    toc_depth: 3\n    toc_float: true #by turning this on, the table of contents moves to the left of the page.\nurlcolor: blue\nvignette: >\n  %\\VignetteIndexEntry{Installation of the GGIR R Package}\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteEncoding{UTF-8}\neditor_options:\n  markdown:\n    wrap: 72\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Install R and RStudio\n\n-   [Download and install R](https://cran.r-project.org/)\n\n-   [Download and install\n    RStudio](https://posit.co/products/open-source/rstudio/)\n\n## Install GGIR\n\nInstall the latest released version of GGIR with its dependencies from\nCRAN. You can do this with one command from the R command line:\n\n```{R,eval=FALSE}\ninstall.packages(\""GGIR\"", dependencies = TRUE)\nlibrary(GGIR)\n```\n\nAlternatively, you can install the latest development version, which\nmight include additional bug fixes and functionalities. To get the\ndevelopment version, please use:\n\n```{R,eval=FALSE}\ninstall.packages(\""remotes\"", dependencies = TRUE)\nremotes::install_github(\""wadpac/GGIR\"", dependencies = TRUE)\nlibrary(GGIR)\n```\n\n## Other packages you may need\n\nAdditionally, in some use-cases you will need to install one or multiple\nadditional packages. Note that these packages are not installed by default,\nso please follow the instructions if:\n\n-   You want to derive Neishabouricounts (with\n    `do.neishabouricounts = TRUE`), install the actilifecounts package\n    with `install.packages(\""actilifecounts\"")`\n-   You want to process Sensewear xlsx files (with\n    `dataFormat = \""sensewear\""`), install the readxl package\n    with `install.packages(\""readxl\"")`\n\n## Installing older versions of a package\n\nWhen aiming to reproduce historical analysis it is critical to install the correct package version.\nBelow we will explain how to do this for GGIR release 2.4-0 but this should work for any release. Note that GGIR is archived on both CRAN (major releases only) and GitHub (all releases).\n\n**From CRAN archive:**\n\n```\nrequire(remotes)\ninstall_version(\""GGIR\"", version = \""2.4-0\"", repos = \""http://cran.us.r-project.org\"")\n```\n\nTo see which releases are available on CRAN check out: https://cran.r-project.org/src/contrib/Archive/GGIR/.\n\n**From GitHub:**\n\n```\nrequire(remotes)\ninstall_github(\""wadpac/GGIR\"", ref = \""2.4-0\"")\n```\nTo see which releases are available on CRAN check out: https://github.com/wadpac/GGIR/releases.\n"",
    ""https://github.com/wadpac/GGIR/tree/master/docs""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/wadpac""
    }
  ],
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/wadpac/GGIR/master/LICENSE""
  },
  ""keywords"": ""accelerometer, activity-recognition, circadian-rhythm, movement-sensor, sleep"",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/wadpac/GGIR/master/LICENSE""
  },
  ""codeRepository"": ""https://github.com/wadpac/GGIR"",
  ""issueTracker"": ""https://github.com/wadpac/GGIR/issues"",
  ""dateCreated"": ""2017-04-13"",
  ""dateModified"": ""2025-03-14"",
  ""downloadUrl"": ""https://github.com/wadpac/GGIR/releases"",
  ""name"": ""GGIR"",
  ""logo"": ""https://raw.githubusercontent.com/wadpac/GGIR/master/vignettes/GGIR-MASTERLOGO-RGB.png"",
  ""keywords"": ""accelerometer, activity-recognition, circadian-rhythm, movement-sensor, sleep"",
  ""programmingLanguage"": [
    ""R""
  ],
  ""buildInstructions"": [
    ""https://github.com/wadpac/GGIR/wiki"",
    ""---\ntitle: \""Installation of the GGIR R Package\""\noutput:\n   html_document:\n    toc : true\n    number_sections: true\n    toc_depth: 3\n    toc_float: true #by turning this on, the table of contents moves to the left of the page.\nurlcolor: blue\nvignette: >\n  %\\VignetteIndexEntry{Installation of the GGIR R Package}\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteEncoding{UTF-8}\neditor_options:\n  markdown:\n    wrap: 72\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Install R and RStudio\n\n-   [Download and install R](https://cran.r-project.org/)\n\n-   [Download and install\n    RStudio](https://posit.co/products/open-source/rstudio/)\n\n## Install GGIR\n\nInstall the latest released version of GGIR with its dependencies from\nCRAN. You can do this with one command from the R command line:\n\n```{R,eval=FALSE}\ninstall.packages(\""GGIR\"", dependencies = TRUE)\nlibrary(GGIR)\n```\n\nAlternatively, you can install the latest development version, which\nmight include additional bug fixes and functionalities. To get the\ndevelopment version, please use:\n\n```{R,eval=FALSE}\ninstall.packages(\""remotes\"", dependencies = TRUE)\nremotes::install_github(\""wadpac/GGIR\"", dependencies = TRUE)\nlibrary(GGIR)\n```\n\n## Other packages you may need\n\nAdditionally, in some use-cases you will need to install one or multiple\nadditional packages. Note that these packages are not installed by default,\nso please follow the instructions if:\n\n-   You want to derive Neishabouricounts (with\n    `do.neishabouricounts = TRUE`), install the actilifecounts package\n    with `install.packages(\""actilifecounts\"")`\n-   You want to process Sensewear xlsx files (with\n    `dataFormat = \""sensewear\""`), install the readxl package\n    with `install.packages(\""readxl\"")`\n\n## Installing older versions of a package\n\nWhen aiming to reproduce historical analysis it is critical to install the correct package version.\nBelow we will explain how to do this for GGIR release 2.4-0 but this should work for any release. Note that GGIR is archived on both CRAN (major releases only) and GitHub (all releases).\n\n**From CRAN archive:**\n\n```\nrequire(remotes)\ninstall_version(\""GGIR\"", version = \""2.4-0\"", repos = \""http://cran.us.r-project.org\"")\n```\n\nTo see which releases are available on CRAN check out: https://cran.r-project.org/src/contrib/Archive/GGIR/.\n\n**From GitHub:**\n\n```\nrequire(remotes)\ninstall_github(\""wadpac/GGIR\"", ref = \""2.4-0\"")\n```\nTo see which releases are available on CRAN check out: https://github.com/wadpac/GGIR/releases.\n"",
    ""https://github.com/wadpac/GGIR/tree/master/docs""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/wadpac""
    }
  ],
  ""readme"": ""https://raw.githubusercontent.com/wadpac/GGIR/master/README.md"",
  ""description"": [
    ""Code corresponding to R package GGIR"",
    ""The copyright of the GGIR logo as contained in the file vignettes/GGIR-MASTERLOGO-RGB.png lies with Accelting (Almere, The Netherlands), please contact v.vanhees@accelting.com to ask for permission to use this logo. \nAll other images in this repository are released under the Creative Commons Attribution 4.0 International (CC BY 4.0) license. \n"",
    ""We always welcome contributions to the package.\nIf you want to contribute to the development of GGIR, have a look at the [contribution guidelines](https://github.com/wadpac/GGIR/blob/master/CONTRIBUTING.md).\n \n""
  ]
}"
https://github.com/transientskp/tkp,"LOFAR Transients Pipeline ========================= .. image:: https://travis-ci.org/transientskp/tkp.svg?branch=master :target: https://travis-ci.org/transientskp/tkp The LOFAR Transients Pipeline (or ""TraP"") is a Python and SQL based system for detecting and responding to transient and variable sources in a stream of astronomical images. It primarily targets LOFAR data, but is also applicable to a range of other instruments. See the `pipeline documentation`_ for details including `key features`_, installation instructions and a usage guide. An overview of the TraP can be found in the `TraP paper`_ accompanying release 2.0, and we also have an assigned ASCL ID (http://ascl.net/1412.011). If you make use of TraP in work leading to a publication, we ask that you cite these references. TraP development is coordinated by `The LOFAR Transients Key Science Project`_. Bug tracking and feature requests are handled through the repository `issue tracker`_. Contributions are welcome. This is open source software: see ``COPYING`` for licensing and copyright information. .. _TraP paper: http://adsabs.harvard.edu/abs/2015arXiv150301526S .. _The LOFAR Transients Key Science Project: http://www.transientskp.org/ .. _pipeline documentation: http://docs.transientskp.org/ .. _key features: http://tkp.readthedocs.org/en/latest/introduction.html#key-features .. _issue tracker: https://github.com/transientskp/tkp/issues #!/usr/bin/env python from setuptools import setup, find_packages install_requires = """""" astropy colorlog Jinja2 numpy>1.19.5,<2.0.0 psycopg2 python-casacore python-dateutil pytz scipy sqlalchemy<2 alembic monotonic psutil pytest dask dask[array] radio-pyse>=0.3.1 """""".split() tkp_scripts = [ ""tkp/bin/pyse.py"", ""tkp/bin/trap-manage.py"", ""tkp/bin/tkp-inject.py"", ] package_data = {'tkp': [ 'config/*/*', 'db/sql/statements/batch', 'db/sql/statements/*/*.sql' ]} package_list = find_packages(where='.', exclude=['tests']) setup( name=""tkp"", version=""4.0"", packages=package_list, scripts=tkp_scripts, package_data=package_data, description=""LOFAR Transients Key Project (TKP)"", author=""TKP Discovery WG"", author_email=""discovery@transientskp.org"", url=""http://docs.transientskp.org/"", install_requires=install_requires ) Copyright (c) 2006-2014, The LOFAR Transients Key Science Project All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. # This CITATION.cff file was generated with cffinit. # Visit https://bit.ly/cffinit to generate yours today! cff-version: 1.2.0 title: The LOFAR Transients Pipeline message: >- If you use this software, please cite it using the metadata from this file. type: software authors: - given-names: Gijs family-names: Molenaar email: gijsmolenaar@gmail.com affiliation: 'http://pythonic.nl' orcid: 'https://orcid.org/0000-0002-6136-3724' - given-names: Tim family-names: Staley email: tim.staley@physics.ox.ac.uk orcid: 'https://orcid.org/0000-0002-4474-5253' affiliation: University of Oxford - orcid: 'https://orcid.org/0000-0001-9445-1846' given-names: John family-names: Swinbank email: john@swinbank.org affiliation: ASTRON - given-names: Bart family-names: Scheers orcid: 'https://orcid.org/0000-0003-3242-6076' email: bartscheers@dataspex.nl affiliation: Dataspex - given-names: Antonia family-names: Rowlinson email: B.A.Rowlinson@uva.nl affiliation: University of Amsterdam orcid: 'https://orcid.org/0000-0002-1195-7022' - given-names: Hanno family-names: Spreeuw email: h.spreeuw@esciencecenter.nl affiliation: The Netherlands eScience Center orcid: 'https://orcid.org/0000-0002-5057-0322' - given-names: Adam family-names: Stewart affiliation: Intelligent Growth Solutions - given-names: Mark family-names: Kuiack orcid: 'https://orcid.org/0000-0002-8899-434X' affiliation: Sygno - given-names: Martin family-names: Hardcastle orcid: 'https://orcid.org/0000-0003-4223-1117' affiliation: University of Hertfordshire email: m.j.hardcastle@herts.ac.uk - given-names: David family-names: Ruhe orcid: 'https://orcid.org/0000-0003-2857-5255' email: d.ruhe@uva.nl affiliation: University of Amsterdam - given-names: Johan family-names: Hidding email: j.hidding@esciencecenter.nl affiliation: The Netherlands eScience Center orcid: 'https://orcid.org/0000-0002-7550-1796' - given-names: Hugh family-names: Garsden email: h.garsden@qmul.ac.uk affiliation: Queen Mary University of London identifiers: - type: doi value: 10.1016/j.ascom.2015.03.002 description: ' The LOFAR Transients Pipeline ' - type: other value: 'http://ascl.net/1412.011' description: ASCL Code Record repository-code: 'https://github.com/transientskp/tkp' url: 'https://docs.transientskp.org/' repository: 'https://github.com/transientskp/pyse' abstract: >- The LOFAR Transients Pipeline (or ""TraP"") is a Python and SQL based system for detecting and responding to transient and variable sources in a stream of astronomical images. It primarily targets LOFAR data, but is also applicable to a range of other instruments. keywords: - Radio astronomy - Transient detection - Source association - SQL - Image processing license: BSD-2-Clause commit: c4a73810602f5a0d2ba4e21bcd5b3aefb0ec7a1a version: '5.0' date-released: '2022-04-19' preferred-citation: authors: - family-names: Swinbank, Staley, Molenaar, Rol, Rowlinson, Scheers, Spreeuw, Bell, Broderick, Carbone, Garsden, Van Der Horst, Law, Wise, Breton, Cendes, Corbel, Eislöffel, Falcke, Fender, Griessmeier, Hessels, Stappers, Stewart, Wijers, Wijnands, Zarka title: The LOFAR Transients Pipeline doi: 10.1016/j.ascom.2015.03.002 type: article","{
    ""softwareRequirements"": [
        ""astropy"",
        ""colorlog"",
        ""Jinja2"",
        ""numpy: >=1.19.5,<2.0.0"",
        ""psycopg2"",
        ""python-casacore"",
        ""python-dateutil"",
        ""pytz"",
        ""scipy"",
        ""sqlalchemy: <2"",
        ""alembic"",
        ""monotonic"",
        ""psutil"",
        ""pytest"",
        ""dask"",
        ""dask[array]"",
        ""radio-pyse: >=0.3.1""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Gijs Molenaar"",
            ""email"": ""gijsmolenaar@gmail.com"",
            ""affiliation"": ""http://pythonic.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-6136-3724""
        },
        {
            ""name"": ""Tim Staley"",
            ""email"": ""tim.staley@physics.ox.ac.uk"",
            ""orcid"": ""https://orcid.org/0000-0002-4474-5253"",
            ""affiliation"": ""University of Oxford""
        },
        {
            ""name"": ""John Swinbank"",
            ""email"": ""john@swinbank.org"",
            ""orcid"": ""https://orcid.org/0000-0001-9445-1846"",
            ""affiliation"": ""ASTRON""
        },
        {
            ""name"": ""Bart Scheers"",
            ""orcid"": ""https://orcid.org/0000-0003-3242-6076"",
            ""email"": ""bartscheers@dataspex.nl"",
            ""affiliation"": ""Dataspex""
        },
        {
            ""name"": ""Antonia Rowlinson"",
            ""email"": ""B.A.Rowlinson@uva.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-1195-7022"",
            ""affiliation"": ""University of Amsterdam""
        },
        {
            ""name"": ""Hanno Spreeuw"",
            ""email"": ""h.spreeuw@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-5057-0322"",
            ""affiliation"": ""The Netherlands eScience Center""
        },
        {
            ""name"": ""Adam Stewart"",
            ""affiliation"": ""Intelligent Growth Solutions""
        },
        {
            ""name"": ""Mark Kuiack"",
            ""orcid"": ""https://orcid.org/0000-0002-8899-434X"",
            ""affiliation"": ""Sygno""
        },
        {
            ""name"": ""Martin Hardcastle"",
            ""orcid"": ""https://orcid.org/0000-0003-4223-1117"",
            ""email"": ""m.j.hardcastle@herts.ac.uk"",
            ""affiliation"": ""University of Hertfordshire""
        },
        {
            ""name"": ""David Ruhe"",
            ""orcid"": ""https://orcid.org/0000-0003-2857-5255"",
            ""email"": ""d.ruhe@uva.nl"",
            ""affiliation"": ""University of Amsterdam""
        },
        {
            ""name"": ""Johan Hidding"",
            ""email"": ""j.hidding@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-7550-1796"",
            ""affiliation"": ""The Netherlands eScience Center""
        },
        {
            ""name"": ""Hugh Garsden"",
            ""email"": ""h.garsden@qmul.ac.uk"",
            ""affiliation"": ""Queen Mary University of London""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.1016/j.ascom.2015.03.002"",
    ""license"": ""BSD-2-Clause"",
    ""keywords"": [
        ""Radio Astronomy"",
        ""Transient Detection"",
        ""Source Association"",
        ""SQL"",
        ""Image Processing""
    ]
}","{
    ""softwareRequirements"": [
        ""astropy"",
        ""colorlog"",
        ""Jinja2"",
        ""numpy: >=1.19.5,<2.0.0"",
        ""psycopg2"",
        ""python-casacore"",
        ""python-dateutil"",
        ""pytz"",
        ""scipy"",
        ""sqlalchemy: <2"",
        ""alembic"",
        ""monotonic"",
        ""psutil"",
        ""pytest"",
        ""dask"",
        ""dask[array]"",
        ""radio-pyse: >=0.3.1""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Gijs Molenaar"",
            ""email"": ""gijsmolenaar@gmail.com"",
            ""affiliation"": ""http://pythonic.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-6136-3724""
        },
        {
            ""name"": ""Tim Staley"",
            ""email"": ""tim.staley@physics.ox.ac.uk"",
            ""orcid"": ""https://orcid.org/0000-0002-4474-5253"",
            ""affiliation"": ""University of Oxford""
        },
        {
            ""name"": ""John Swinbank"",
            ""email"": ""john@swinbank.org"",
            ""orcid"": ""https://orcid.org/0000-0001-9445-1846"",
            ""affiliation"": ""ASTRON""
        },
        {
            ""name"": ""Bart Scheers"",
            ""orcid"": ""https://orcid.org/0000-0003-3242-6076"",
            ""email"": ""bartscheers@dataspex.nl"",
            ""affiliation"": ""Dataspex""
        },
        {
            ""name"": ""Antonia Rowlinson"",
            ""email"": ""B.A.Rowlinson@uva.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-1195-7022"",
            ""affiliation"": ""University of Amsterdam""
        },
        {
            ""name"": ""Hanno Spreeuw"",
            ""email"": ""h.spreeuw@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-5057-0322"",
            ""affiliation"": ""The Netherlands eScience Center""
        },
        {
            ""name"": ""Adam Stewart"",
            ""affiliation"": ""Intelligent Growth Solutions""
        },
        {
            ""name"": ""Mark Kuiack"",
            ""orcid"": ""https://orcid.org/0000-0002-8899-434X"",
            ""affiliation"": ""Sygno""
        },
        {
            ""name"": ""Martin Hardcastle"",
            ""orcid"": ""https://orcid.org/0000-0003-4223-1117"",
            ""email"": ""m.j.hardcastle@herts.ac.uk"",
            ""affiliation"": ""University of Hertfordshire""
        },
        {
            ""name"": ""David Ruhe"",
            ""orcid"": ""https://orcid.org/0000-0003-2857-5255"",
            ""email"": ""d.ruhe@uva.nl"",
            ""affiliation"": ""University of Amsterdam""
        },
        {
            ""name"": ""Johan Hidding"",
            ""email"": ""j.hidding@esciencecenter.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-7550-1796"",
            ""affiliation"": ""The Netherlands eScience Center""
        },
        {
            ""name"": ""Hugh Garsden"",
            ""email"": ""h.garsden@qmul.ac.uk"",
            ""affiliation"": ""Queen Mary University of London""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.1016/j.ascom.2015.03.002"",
    ""license"": ""BSD-2-Clause"",
    ""keywords"": [
        ""Radio Astronomy"",
        ""Transient Detection"",
        ""Source Association"",
        ""SQL"",
        ""Image Processing""
    ]
}","{
    ""softwareRequirements"": [
        ""astropy"",
        ""colorlog"",
        ""Jinja2"",
        ""numpy:>1.19.5,<2.0.0"",
        ""psycopg2"",
        ""python-casacore"",
        ""python-dateutil"",
        ""pytz"",
        ""scipy"",
        ""sqlalchemy:<2"",
        ""alembic"",
        ""monotonic"",
        ""psutil"",
        ""pytest"",
        ""dask"",
        ""dask[array]"",
        ""radio-pyse:>=0.3.1""
    ],
    ""buildInstructions"": ""available in wiki"",
    ""author"": [
        {
            ""given-names"": ""Gijs"",
            ""family-names"": ""Molenaar"",
            ""email"": ""gijsmolenaar@gmail.com"",
            ""affiliation"": ""http://pythonic.nl"",
            ""orcid"": ""https://orcid.org/0000-0002-6136-3724""
        },
        {
            ""given-names"": ""Tim"",
            ""family-names"": ""Staley"",
            ""email"": ""tim.staley@physics.ox.ac.uk"",
            ""orcid"": ""https://orcid.org/0000-0002-4474-5253"",
            ""affiliation"": ""University of Oxford""
        },
        {
            ""orcid"": ""https://orcid.org/0000-0001-9445-1846"",
            ""given-names"": ""John"",
            ""family-names"": ""Swinbank"",
            ""email"": ""john@swinbank.org"",
            ""affiliation"": ""ASTRON""
        },
        {
            ""given-names"": ""Bart"",
            ""family-names"": ""Scheers"",
            ""orcid"": ""https://orcid.org/0000-0003-3242-6076"",
            ""email"": ""bartscheers@dataspex.nl"",
            ""affiliation"": ""Dataspex""
        },
        {
            ""given-names"": ""Antonia"",
            ""family-names"": ""Rowlinson"",
            ""email"": ""B.A.Rowlinson@uva.nl"",
            ""affiliation"": ""University of Amsterdam"",
            ""orcid"": ""https://orcid.org/0000-0002-1195-7022""
        },
        {
            ""given-names"": ""Hanno"",
            ""family-names"": ""Spreeuw"",
            ""email"": ""h.spreeuw@esciencecenter.nl"",
            ""affiliation"": ""The Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-5057-0322""
        },
        {
            ""given-names"": ""Adam"",
            ""family-names"": ""Stewart"",
            ""affiliation"": ""Intelligent Growth Solutions""
        },
        {
            ""given-names"": ""Mark"",
            ""family-names"": ""Kuiack"",
            ""orcid"": ""https://orcid.org/0000-0002-8899-434X"",
            ""affiliation"": ""Sygno""
        },
        {
            ""given-names"": ""Martin"",
            ""family-names"": ""Hardcastle"",
            ""orcid"": ""https://orcid.org/0000-0003-4223-1117"",
            ""affiliation"": ""University of Hertfordshire"",
            ""email"": ""m.j.hardcastle@herts.ac.uk""
        },
        {
            ""given-names"": ""David"",
            ""family-names"": ""Ruhe"",
            ""orcid"": ""https://orcid.org/0000-0003-2857-5255"",
            ""email"": ""d.ruhe@uva.nl"",
            ""affiliation"": ""University of Amsterdam""
        },
        {
            ""given-names"": ""Johan"",
            ""family-names"": ""Hidding"",
            ""email"": ""j.hidding@esciencecenter.nl"",
            ""affiliation"": ""The Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7550-1796""
        },
        {
            ""given-names"": ""Hugh"",
            ""family-names"": ""Garsden"",
            ""email"": ""h.garsden@qmul.ac.uk"",
            ""affiliation"": ""Queen Mary University of London""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.1016/j.ascom.2015.03.002""
    ],
    ""license"": ""BSD-2-Clause"",
    ""keywords"": [
        ""Radio astronomy"",
        ""Transient detection"",
        ""Source association"",
        ""SQL"",
        ""Image processing""
    ]
}","{
  ""buildInstructions"": [
    ""https://github.com/transientskp/tkp/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/transientskp""
    }
  ],
""license"": {
    ""name"": ""BSD 2-Clause \""Simplified\"" License"",
    ""url"": ""https://api.github.com/licenses/bsd-2-clause""
  },
  ""keywords"": """",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""BSD 2-Clause \""Simplified\"" License"",
    ""url"": ""https://api.github.com/licenses/bsd-2-clause""
  },
  ""codeRepository"": ""https://github.com/transientskp/tkp"",
  ""issueTracker"": ""https://github.com/transientskp/tkp/issues"",
  ""dateCreated"": ""2012-05-21"",
  ""dateModified"": ""2024-09-03"",
  ""downloadUrl"": ""https://github.com/transientskp/tkp/releases"",
  ""name"": ""tkp"",
  ""keywords"": """",
  ""programmingLanguage"": [
    ""Python"",
    ""PLpgSQL"",
    ""Mako"",
    ""Shell""
  ],
  ""buildInstructions"": [
    ""https://github.com/transientskp/tkp/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/transientskp""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/transientskp/tkp/master/CITATION.cff""
  ],
  ""readme"": ""https://raw.githubusercontent.com/transientskp/tkp/master/README.rst"",
  ""description"": [
    ""A transients-discovery pipeline for astronomical image-based surveys"",
    "".. image:: https://travis-ci.org/transientskp/tkp.svg?branch=master\n    :target: https://travis-ci.org/transientskp/tkp \nThe LOFAR Transients Pipeline (or \""TraP\"") is a Python and SQL based system for\ndetecting and responding to transient and variable sources in a stream of\nastronomical images. It primarily targets LOFAR data, but is also applicable\nto a range of other instruments.  See the `pipeline documentation`_ for\ndetails including `key features`_, installation instructions and a\nusage guide. \nAn overview of the TraP can be found in the `TraP paper`_ accompanying\nrelease 2.0, and we also have an assigned ASCL ID (http://ascl.net/1412.011).\nIf you make use of TraP in work leading to a publication, we ask that you cite\nthese references. \n\nTraP development is coordinated by `The LOFAR Transients Key Science Project`_. \nBug tracking and feature requests are handled through the repository `issue\ntracker`_. Contributions are welcome. \nThis is open source software: see ``COPYING`` for licensing and copyright\ninformation. \n.. _TraP paper: http://adsabs.harvard.edu/abs/2015arXiv150301526S\n.. _The LOFAR Transients Key Science Project: http://www.transientskp.org/\n.. _pipeline documentation: http://docs.transientskp.org/\n.. _key features: http://tkp.readthedocs.org/en/latest/introduction.html#key-features\n.. _issue tracker: https://github.com/transientskp/tkp/issues\n \n""
  ]
}"
https://github.com/GrainLearning/grainLearning,"# Welcome to GrainLearning! | fair-software.eu recommendations | Badges | |:--- | :--| | code repository | [![github repo badge](https://img.shields.io/badge/github-repo-000.svg?logo=github&labelColor=gray&color=blue)](https://github.com/GrainLearning/grainlearning) | | license | [![github license badge](https://img.shields.io/github/license/GrainLearning/grainlearning)](https://github.com/GrainLearning/grainlearning)| | community registry | [![RSD](https://img.shields.io/badge/rsd-grainlearning-00a3e3.svg)](https://research-software-directory.org/projects/granular-materials) [![workflow pypi badge](https://img.shields.io/pypi/v/grainlearning.svg?colorB=blue)](https://pypi.python.org/project/grainlearning/)| | citation | [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7123965.svg)](https://doi.org/10.5281/zenodo.7123965)| | Best practices checklist | [![workflow cii badge](https://bestpractices.coreinfrastructure.org/projects/6533/badge)](https://bestpractices.coreinfrastructure.org/projects/6533)| | howfairis | [![fair-software.eu](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F-green)](https://fair-software.eu)| | Documentation | [![Documentation Status](https://readthedocs.org/projects/grainlearning/badge/?version=latest)](https://grainlearning.readthedocs.io/en/latest/?badge=latest)| | Code Quality | [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=GrainLearning_grainLearning&metric=coverage)](https://sonarcloud.io/summary/new_code?id=GrainLearning_grainLearning) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=GrainLearning_grainLearning&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=GrainLearning_grainLearning) | | Paper | [![DOI](https://joss.theoj.org/papers/10.21105/joss.06338/status.svg)](https://doi.org/10.21105/joss.06338) | Bayesian uncertainty quantification for discrete and continuum numerical models of granular materials, developed by various projects of the University of Twente (NL), the Netherlands eScience Center (NL), University of Newcastle (AU), and Hiroshima University (JP). Browse to the [GrainLearning documentation](https://grainlearning.readthedocs.io/en/latest/) to get started. ## Features - Infer and update model parameters using ""time"" series (sequence) data via [Sequential Monte Carlo filtering](https://en.wikipedia.org/wiki/Particle_Filter) - Uniform, quasi-random sampling using [low-discrepancy sequences](https://en.wikipedia.org/wiki/Halton_sequence) - Iterative sampling by training a nonparametric [Gaussian mixture model](https://scikit-learn.org/stable/modules/generated/sklearn.mixture.BayesianGaussianMixture.html) - [Surrogate modeling](https://grainlearning.readthedocs.io/en/latest/rnn.html) capability for ""time"" series data [//]: # (using [recurrent neural networks]&#40;https://en.wikipedia.org/wiki/Recurrent_neural_network&#41;) [//]: # (- Hybrid physics-based and data-driven model evaluation strategy) ## Installation ### Install using poetry 1. Install poetry following [these instructions](https://python-poetry.org/docs/#installation). 1. Clone the repository: `git clone https://github.com/GrainLearning/grainLearning.git` 1. Go to the source code directory: `cd grainLearning` 1. Activate the virtual environment: `poetry shell` 1. Install GrainLearning and its dependencies: `poetry install` ### Install using pip 1. Clone the repository: `git clone https://github.com/GrainLearning/grainLearning.git` 1. Go to the source code directory: `cd grainLearning` 1. Activate the virtual environment: `conda create --name grainlearning python=3.12 && conda activate grainlearning` 1. Install GrainLearning and its dependencies: `pip install .` __Developers__ please refer to [README.dev.md](README.dev.md). To install GrainLearning including the RNN module capabilities check [grainlearning/rnn/README.md](grainlearning/rnn/README.md). ### For Windows users - Installation using Windows Subsystem for Linux (WSL) - Enable WSL1 or WSL2 according to the instructions [here](https://learn.microsoft.com/en-us/windows/wsl/install-manual) - Install GrainLearning using [poetry](#install-using-poetry) or [pip](#install-using-pip) - Installation using anaconda (if no WSLs are available on your Windows system) - Open Anaconda Prompt and install GrainLearning using [pip](#install-using-pip). This should create a virtual environment, named GrainLearning. - Choose that environment from your anaconda navigator: click `Environments` and select `grainlearning` from the drop-down menu ### One command installation Stable versions of GrainLearning can be installed via `pip install grainlearning` However, you still need to clone the GrainLearning repository to run the tutorials. ## Tutorials 1. Linear regression with the [`run_sim`](tutorials/simple_regression/linear_regression/python_linear_regression_solve.py#L14) callback function of the [`BayesianCalibration`](grainlearning/bayesian_calibration.py) class, in [python_linear_regression_solve.py](tutorials/simple_regression/linear_regression/python_linear_regression_solve.py) 2. Nonlinear, multivariate regression 3. Interact with the numerical model of your choice via [`run_sim`](tutorials/simple_regression/linear_regression/linear_regression_solve.py#L11) , in [linear_regression_solve.py](main/tutorials/simple_regression/linear_regression/linear_regression_solve.py) 4. Load existing DEM simulation data and run GrainLearning for one iteration, in [oedo_load_and_resample.py](tutorials/oedo_compression/oedo_load_and_resample.py) 5. Example of GrainLearning integration into YADE - [Two particle collision](tutorials/physics_based/two_particle_collision) - [Triaxial compression](tutorials/physics_based/triaxial_compression) 6. Data-driven module tutorials: - [Train your LSTM model](tutorials/data_driven/LSTM/train_rnn.ipynb) - [Predict using an LSTM model](tutorials/data_driven/LSTM/predict.ipynb) - [Use an LSTM model in the calibration workflow](tutorials/data_driven/LSTM/rnn_calibration_GL.ipynb) ## Citing GrainLearning Please choose from the following: - [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7123965.svg)](https://doi.org/10.5281/zenodo.7123965) A DOI for citing the software. - The software paper: Cheng et al., (2024). GrainLearning: **A Bayesian uncertainty quantification toolbox for discrete and continuum numerical models of granular materials**. *Journal of Open Source Software*, 9(97), 6338, [10.21105/joss.06338](https://doi.org/10.21105/joss.06338) - H. Cheng, T. Shuku, K. Thoeni, P. Tempone, S. Luding, V. Magnanimo. **An iterative Bayesian filtering framework for fast and automated calibration of DEM models**. _Comput. Methods Appl. Mech. Eng.,_ 350 (2019), pp. 268-294, [10.1016/j.cma.2019.01.027](https://doi.org/10.1016/j.cma.2019.01.027) ## Software using GrainLearning - [YADE](http://yade-dem.org/) - [MercuryDPM](https://www.mercurydpm.org/) ## Community The original development of `GrainLearning` is done by [Hongyang Cheng](https://hongyangcheng.weebly.com), in collaboration with [Klaus Thoeni](https://www.newcastle.edu.au/profile/klaus-thoeni) , [Philipp Hartmann](https://www.newcastle.edu.au/profile/philipp-hartmann), and [Takayuki Shuku](https://sites.google.com/view/takayukishukuswebsite/home). The software is currently maintained by [Hongyang Cheng](https://hongyangcheng.weebly.com) and [Stefan Luding](https://www2.msm.ctw.utwente.nl/sluding/) with the help of [Luisa Orozco](https://www.esciencecenter.nl/team/dr-luisa-orozco/) and [Retief Lubbe](https://tusail.eu/projects/esr-12.html). The GrainLearning project receives contributions from students and collaborators. ## Help and Support For assistance with the GrainLearning software, please create an issue on the GitHub Issues page. ## Credits This package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [NLeSC/python-template](https://github.com/NLeSC/python-template). [tool.poetry] name = ""GrainLearning"" version = ""2.0.4"" description = ""A Bayesian uncertainty quantification toolbox for discrete and continuum numerical models of granular materials"" authors = [ ""Hongyang Cheng <h.cheng@utwente.nl>"", ""Luisa Orozco <l.orozco@esciencecenter.nl>"", ""Retief Lubbe <r.lubbe@utwente.nl>"", ""Aron Jansen <a.p.jansen@esciencecenter.nl>""] readme = ""README.md"" license = ""GPLv2"" homepage = ""https://grainlearning.readthedocs.io/"" repository = ""https://github.com/GrainLearning/grainLearning"" keywords = [""Bayesian inference"", ""Uncertainty quantification"", ""Non-parametric Gaussian mixture"", ""DEM"", ""Constitutive modeling"", ""Granular materials""] packages = [ { include = ""grainlearning""} ] [tool.poetry.dependencies] python = "">=3.9,<3.14"" numpy = ""^1.23.2"" scipy = ""^1.9.1"" scikit-learn = ""^1.6.0"" matplotlib = ""^3.6.0"" seaborn = '^0.13.2' Sphinx = {version = ""^5.1.1"", optional = true} sphinx-autodoc-typehints = {version = ""^1.19.2"", optional = true} sphinx-mdinclude = {version = ""*"", optional = true} sphinx-rtd-theme = {version="">=1.1.1"", optional = true} pytest = {version = ""^6.2.4"", optional = true} pytest-cov = {version = ""^2.12.1"", optional = true} prospector = {version = ""^1.7.6"", optional = true, extras = [""with_pyroma""]} pyroma = {version = ""^4.0"", optional = true} h5py = {version =""^3.12.1"", optional = true} wandb = {version =""^0.13.4"", optional = true} tensorflow = {version =""^2.10.0"", optional = true} ipykernel = {version = ""*"", optional = true} [tool.poetry.extras] docs = [""Sphinx"", ""sphinx-autodoc-typehints"", ""sphinx-mdinclude"", ""sphinx-rtd-theme""] dev = [""pytest"", ""pytest-cov"", ""prospector"", ""pyroma"", ""h5py"", ""tensorflow"", ""wandb"", ""ipykernel""] rnn = [""wandb"", ""tensorflow""] tutorials = [""ipykernel""] visuals = [""seaborn""] [build-system] requires = [""poetry-core>=1.0.0""] build-backend = ""poetry.core.masonry.api"" GNU GENERAL PUBLIC LICENSE Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and modification follow. GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The ""Program"", below, refers to any such program or work, and a ""work based on the Program"" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term ""modification"".) Each licensee is addressed as ""you"". Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following: a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it. 6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and ""any later version"", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation. 10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Also add information on how to contact you by electronic and paper mail. If the program is interactive, make it output a short notice like this when it starts in an interactive mode: Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program. You should also get your employer (if you work as a programmer) or your school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. Here is a sample; alter the names: Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker. <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. # This CITATION.cff file was generated with cffinit. # Visit https://bit.ly/cffinit to generate yours today! cff-version: 1.2.0 title: GrainLearning message: >- If you use this software, please cite it using the metadata from this file. type: software authors: - given-names: Hongyang family-names: Cheng email: h.cheng@utwente.nl affiliation: University of Twente orcid: 'https://orcid.org/0000-0001-7652-8600' - given-names: Luisa family-names: ' Orozco' email: l.orozco@esciencecenter.nl orcid: 'https://orcid.org/0000-0002-9153-650X' affiliation: Netherlands eScience Center - given-names: Retief family-names: Lubbe email: r.lubbe@utwente.nl affiliation: University of Twente - given-names: Aron family-names: Jansen orcid: 'https://orcid.org/0000-0002-4764-9347' affiliation: Netherlands eScience Center email: a.p.jansen@esciencecenter.nl - given-names: Philipp family-names: Hartmann email: philipp.hartmann@newcastle.edu.au orcid: 'https://orcid.org/0000-0002-2524-8024' affiliation: University of Newcastle - given-names: Klaus family-names: Thoeni orcid: 'https://orcid.org/0000-0001-7351-7447' affiliation: University of Newcastle email: klaus.thoeni@newcastle.edu.au identifiers: - type: doi value: 10.5281/zenodo.7123965 repository-code: 'https://github.com/GrainLearning/grainLearning/' url: 'https://grainlearning.readthedocs.io/' abstract: >- GrainLearning is a Bayesian uncertainty quantification and propagation toolbox for computer simulations of granular materials. The software is primarily used to infer and quantify parameter uncertainties in computational models of granular materials from observation data, also known as inverse analyses or data assimilation. Implemented in Python, GrainLearning can be loaded into a Python environment to process the simulation and observation data, or alternatively, as an independent tool where simulation runs are done separately, e.g., via a shell script. keywords: - Uncertainty quantification - Granular materials - Machine learning - Calibration - Bayesian inference license: GPL-2.0","{
    ""softwareRequirements"": [
        ""python: >=3.9,<3.14"",
        ""numpy: ^1.23.2"",
        ""scipy: ^1.9.1"",
        ""scikit-learn: ^1.6.0"",
        ""matplotlib: ^3.6.0"",
        ""seaborn: ^0.13.2"",
        ""Sphinx: ^5.1.1"",
        ""sphinx-autodoc-typehints: ^1.19.2"",
        ""sphinx-mdinclude: *"",
        ""sphinx-rtd-theme: ^1.1.1"",
        ""pytest: ^6.2.4"",
        ""pytest-cov: ^2.12.1"",
        ""prospector: ^1.7.6"",
        ""pyroma: ^4.0"",
        ""h5py: ^3.12.1"",
        ""wandb: ^0.13.4"",
        ""tensorflow: ^2.10.0"",
        ""ipykernel: *""
    ],
    ""buildInstructions"": ""1. Install poetry following https://python-poetry.org/docs/#installation. 2. Clone the repository: git clone https://github.com/GrainLearning/grainLearning.git. 3. Go to the source code directory: cd grainLearning. 4. Activate the virtual environment: poetry shell. 5. Install GrainLearning and its dependencies: poetry install. Alternatively, install using pip: 1. Clone the repository: git clone https://github.com/GrainLearning/grainLearning.git. 2. Go to the source code directory: cd grainLearning. 3. Activate the virtual environment: conda create --name grainlearning python=3.12 && conda activate grainlearning. 4. Install GrainLearning and its dependencies: pip install ."",
    ""author"": [
        {
            ""name"": ""Hongyang Cheng"",
            ""email"": ""h.cheng@utwente.nl"",
            ""affiliation"": ""University of Twente"",
            ""orcid"": ""https://orcid.org/0000-0001-7652-8600""
        },
        {
            ""name"": ""Luisa Orozco"",
            ""email"": ""l.orozco@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-9153-650X""
        },
        {
            ""name"": ""Retief Lubbe"",
            ""email"": ""r.lubbe@utwente.nl"",
            ""affiliation"": ""University of Twente""
        },
        {
            ""name"": ""Aron Jansen"",
            ""email"": ""a.p.jansen@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-4764-9347""
        },
        {
            ""name"": ""Philipp Hartmann"",
            ""email"": ""philipp.hartmann@newcastle.edu.au"",
            ""affiliation"": ""University of Newcastle"",
            ""orcid"": ""https://orcid.org/0000-0002-2524-8024""
        },
        {
            ""name"": ""Klaus Thoeni"",
            ""email"": ""klaus.thoeni@newcastle.edu.au"",
            ""affiliation"": ""University of Newcastle"",
            ""orcid"": ""https://orcid.org/0000-0001-7351-7447""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Takayuki Shuku"",
            ""orcid"": ""https://sites.google.com/view/takayukishukuswebsite/home""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.7123965"",
    ""license"": ""GPL-2.0"",
    ""keywords"": [
        ""Bayesian inference"",
        ""Uncertainty quantification"",
        ""Non-parametric Gaussian mixture"",
        ""DEM"",
        ""Constitutive modeling"",
        ""Granular materials"",
        ""Surrogate modeling"",
        ""Sequential Monte Carlo filtering"",
        ""Low-discrepancy sequences"",
        ""Gaussian mixture model"",
        ""Recurrent neural networks"",
        ""Hybrid physics-based and data-driven model evaluation strategy""
    ]
}","{
    ""softwareRequirements"": [
        ""python: >=3.9,<3.14"",
        ""numpy: ^1.23.2"",
        ""scipy: ^1.9.1"",
        ""scikit-learn: ^1.6.0"",
        ""matplotlib: ^3.6.0"",
        ""seaborn: ^0.13.2"",
        ""Sphinx: ^5.1.1"",
        ""sphinx-autodoc-typehints: ^1.19.2"",
        ""sphinx-mdinclude: *"",
        ""sphinx-rtd-theme: ^1.1.1"",
        ""pytest: ^6.2.4"",
        ""pytest-cov: ^2.12.1"",
        ""prospector: ^1.7.6"",
        ""pyroma: ^4.0"",
        ""h5py: ^3.12.1"",
        ""wandb: ^0.13.4"",
        ""tensorflow: ^2.10.0"",
        ""ipykernel: *""
    ],
    ""buildInstructions"": ""1. Install poetry following https://python-poetry.org/docs/#installation. 2. Clone the repository: git clone https://github.com/GrainLearning/grainLearning.git. 3. Go to the source code directory: cd grainLearning. 4. Activate the virtual environment: poetry shell. 5. Install GrainLearning and its dependencies: poetry install. Alternatively, install using pip: 1. Clone the repository: git clone https://github.com/GrainLearning/grainLearning.git. 2. Go to the source code directory: cd grainLearning. 3. Activate the virtual environment: conda create --name grainlearning python=3.12 && conda activate grainlearning. 4. Install GrainLearning and its dependencies: pip install ."",
    ""author"": [
        {
            ""name"": ""Hongyang Cheng"",
            ""email"": ""h.cheng@utwente.nl"",
            ""affiliation"": ""University of Twente"",
            ""orcid"": ""https://orcid.org/0000-0001-7652-8600""
        },
        {
            ""name"": ""Luisa Orozco"",
            ""email"": ""l.orozco@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-9153-650X""
        },
        {
            ""name"": ""Retief Lubbe"",
            ""email"": ""r.lubbe@utwente.nl"",
            ""affiliation"": ""University of Twente""
        },
        {
            ""name"": ""Aron Jansen"",
            ""email"": ""a.p.jansen@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-4764-9347""
        },
        {
            ""name"": ""Philipp Hartmann"",
            ""email"": ""philipp.hartmann@newcastle.edu.au"",
            ""affiliation"": ""University of Newcastle"",
            ""orcid"": ""https://orcid.org/0000-0002-2524-8024""
        },
        {
            ""name"": ""Klaus Thoeni"",
            ""email"": ""klaus.thoeni@newcastle.edu.au"",
            ""affiliation"": ""University of Newcastle"",
            ""orcid"": ""https://orcid.org/0000-0001-7351-7447""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Takayuki Shuku"",
            ""orcid"": ""https://sites.google.com/view/takayukishukuswebsite/home""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.7123965"",
    ""license"": ""GPL-2.0"",
    ""keywords"": [
        ""Bayesian inference"",
        ""Uncertainty quantification"",
        ""Non-parametric Gaussian mixture"",
        ""DEM"",
        ""Constitutive modeling"",
        ""Granular materials"",
        ""Surrogate modeling"",
        ""Sequential Monte Carlo filtering"",
        ""Low-discrepancy sequences"",
        ""Gaussian mixture model"",
        ""Recurrent neural networks"",
        ""Hybrid physics-based and data-driven model evaluation strategy""
    ]
}","{
    ""softwareRequirements"": [
        ""python:>=3.9,<3.14"",
        ""numpy:^1.23.2"",
        ""scipy:^1.9.1"",
        ""scikit-learn:^1.6.0"",
        ""matplotlib:^3.6.0"",
        ""seaborn:^0.13.2"",
        ""Sphinx:^5.1.1"",
        ""sphinx-autodoc-typehints:^1.19.2"",
        ""sphinx-mdinclude:*"",
        ""sphinx-rtd-theme:>=1.1.1"",
        ""pytest:^6.2.4"",
        ""pytest-cov:^2.12.1"",
        ""prospector:^1.7.6"",
        ""pyroma:^4.0"",
        ""h5py:^3.12.1"",
        ""wandb:^0.13.4"",
        ""tensorflow:^2.10.0"",
        ""ipykernel:*""
    ],
    ""buildInstructions"": ""## Installation\n\n### Install using poetry\n\n1. Install poetry following [these instructions](https://python-poetry.org/docs/#installation).\n1. Clone the repository: `git clone https://github.com/GrainLearning/grainLearning.git`\n1. Go to the source code directory: `cd grainLearning`\n1. Activate the virtual environment: `poetry shell`\n1. Install GrainLearning and its dependencies: `poetry install`\n\n### Install using pip\n\n1. Clone the repository: `git clone https://github.com/GrainLearning/grainLearning.git`\n1. Go to the source code directory: `cd grainLearning`\n1. Activate the virtual environment: `conda create --name grainlearning python=3.12 && conda activate grainlearning`\n1. Install GrainLearning and its dependencies: `pip install .`\n\n__Developers__ please refer to [README.dev.md](README.dev.md).\n\nTo install GrainLearning including the RNN module capabilities check [grainlearning/rnn/README.md](grainlearning/rnn/README.md).\n\n### For Windows users\n\n- Installation using Windows Subsystem for Linux (WSL)\n  - Enable WSL1 or WSL2 according to the\n    instructions [here](https://learn.microsoft.com/en-us/windows/wsl/install-manual)\n  - Install GrainLearning using [poetry](#install-using-poetry) or [pip](#install-using-pip)\n- Installation using anaconda (if no WSLs are available on your Windows system)\n  - Open Anaconda Prompt and install GrainLearning using [pip](#install-using-pip). This should create a virtual\n    environment, named GrainLearning.\n  - Choose that environment from your anaconda navigator: click `Environments` and select `grainlearning` from the\n    drop-down menu\n\n### One command installation\n\nStable versions of GrainLearning can be installed via `pip install grainlearning`\nHowever, you still need to clone the GrainLearning repository to run the tutorials."",
    ""author"": [
        {
            ""affiliation"": ""University of Twente"",
            ""name"": ""Cheng, Hongyang"",
            ""orcid"": ""0000-0001-7652-8600""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": "" Orozco, Luisa"",
            ""orcid"": ""0000-0002-9153-650X""
        },
        {
            ""affiliation"": ""University of Twente"",
            ""name"": ""Lubbe, Retief""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""name"": ""Jansen, Aron"",
            ""orcid"": ""0000-0002-4764-9347""
        },
        {
            ""affiliation"": ""University of Newcastle"",
            ""name"": ""Hartmann, Philipp"",
            ""orcid"": ""0000-0002-2524-8024""
        },
        {
            ""affiliation"": ""University of Newcastle"",
            ""name"": ""Thoeni, Klaus"",
            ""orcid"": ""0000-0001-7351-7447""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Takayuki Shuku""
        }
    ],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.7123965""
    ],
    ""license"": ""GPL-2.0"",
    ""keywords"": [
        ""Bayesian inference"",
        ""Uncertainty quantification"",
        ""Non-parametric Gaussian mixture"",
        ""DEM"",
        ""Constitutive modeling"",
        ""Granular materials""
    ]
}","{
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md"",
    ""https://grainlearning.readthedocs.io/"",
    ""https://github.com/GrainLearning/grainLearning/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/GrainLearning""
    }
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.7123965"",
  ""license"": {
    ""name"": ""GNU General Public License v2.0"",
    ""url"": ""https://raw.githubusercontent.com/GrainLearning/grainLearning/main/LICENSE""
  },
  ""keywords"": ""bayesian-inference, low-discrepancy-sequences, mixture-models, parameter-identification, sequential-monte-carlo, uncertainty-quantification"",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""GNU General Public License v2.0"",
    ""url"": ""https://raw.githubusercontent.com/GrainLearning/grainLearning/main/LICENSE""
  },
  ""codeRepository"": ""https://github.com/GrainLearning/grainLearning"",
  ""issueTracker"": ""https://github.com/GrainLearning/grainLearning/issues"",
  ""dateCreated"": ""2022-02-23"",
  ""dateModified"": ""2025-02-19"",
  ""downloadUrl"": ""https://github.com/GrainLearning/grainLearning/releases"",
  ""name"": ""grainLearning"",
  ""logo"": ""https://sonarcloud.io/api/project_badges/measure?project=GrainLearning_grainLearning&amp;metric=coverage"",
  ""keywords"": ""bayesian-inference, low-discrepancy-sequences, mixture-models, parameter-identification, sequential-monte-carlo, uncertainty-quantification"",
  ""programmingLanguage"": [
    ""Jupyter Notebook"",
    ""Python"",
    ""PureBasic"",
    ""Shell""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md"",
    ""https://grainlearning.readthedocs.io/"",
    ""https://github.com/GrainLearning/grainLearning/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/GrainLearning""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/GrainLearning/grainLearning/main/CITATION.cff""
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.7123965"",
  ""readme"": ""https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md"",
  ""description"": [
    ""A Bayesian uncertainty quantification toolbox for discrete and continuum numerical models of granular materials, developed by various projects of the University of Twente (NL), the Netherlands eScience Center (NL), University of Newcastle (AU), and Hiroshima University (JP)."",
    ""The original development of `GrainLearning` is done by [Hongyang Cheng](https://hongyangcheng.weebly.com), in collaboration\nwith [Klaus Thoeni](https://www.newcastle.edu.au/profile/klaus-thoeni)\n, [Philipp Hartmann](https://www.newcastle.edu.au/profile/philipp-hartmann),\nand [Takayuki Shuku](https://sites.google.com/view/takayukishukuswebsite/home).\nThe software is currently maintained by [Hongyang Cheng](https://hongyangcheng.weebly.com) and [Stefan Luding](https://www2.msm.ctw.utwente.nl/sluding/) with the help\nof [Luisa Orozco](https://www.esciencecenter.nl/team/dr-luisa-orozco/)\nand [Retief Lubbe](https://tusail.eu/projects/esr-12.html).\nThe GrainLearning project receives contributions from students and collaborators.\n \n"",
    ""| fair-software.eu recommendations  | Badges |\n|:---  | :--| \n| code repository              | [![github repo badge](https://img.shields.io/badge/github-repo-000.svg?logo=github&labelColor=gray&color=blue)](https://github.com/GrainLearning/grainlearning) |\n| license                      |  [![github license badge](https://img.shields.io/github/license/GrainLearning/grainlearning)](https://github.com/GrainLearning/grainlearning)|\n| community registry           |  [![RSD](https://img.shields.io/badge/rsd-grainlearning-00a3e3.svg)](https://research-software-directory.org/projects/granular-materials) [![workflow pypi badge](https://img.shields.io/pypi/v/grainlearning.svg?colorB=blue)](https://pypi.python.org/project/grainlearning/)|\n| citation                     | [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7123965.svg)](https://doi.org/10.5281/zenodo.7123965)|\n| Best practices checklist     | [![workflow cii badge](https://bestpractices.coreinfrastructure.org/projects/6533/badge)](https://bestpractices.coreinfrastructure.org/projects/6533)|\n| howfairis                    | [![fair-software.eu](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F-green)](https://fair-software.eu)|\n| Documentation                | [![Documentation Status](https://readthedocs.org/projects/grainlearning/badge/?version=latest)](https://grainlearning.readthedocs.io/en/latest/?badge=latest)|\n| Code Quality                | [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=GrainLearning_grainLearning&metric=coverage)](https://sonarcloud.io/summary/new_code?id=GrainLearning_grainLearning) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=GrainLearning_grainLearning&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=GrainLearning_grainLearning) |\n| Paper | [![DOI](https://joss.theoj.org/papers/10.21105/joss.06338/status.svg)](https://doi.org/10.21105/joss.06338) | \nBayesian uncertainty quantification for discrete and continuum numerical models of granular materials,\ndeveloped by various projects of the University of Twente (NL), the Netherlands eScience Center (NL), University of\nNewcastle (AU), and Hiroshima University (JP).\nBrowse to the [GrainLearning documentation](https://grainlearning.readthedocs.io/en/latest/) to get started.\n \n"",
    ""- Infer and update model parameters using \""time\"" series (sequence) data\n  via [Sequential Monte Carlo filtering](https://en.wikipedia.org/wiki/Particle_Filter)\n- Uniform, quasi-random sampling using [low-discrepancy sequences](https://en.wikipedia.org/wiki/Halton_sequence)\n- Iterative sampling by training a\n  nonparametric [Gaussian mixture model](https://scikit-learn.org/stable/modules/generated/sklearn.mixture.BayesianGaussianMixture.html)\n- [Surrogate modeling](https://grainlearning.readthedocs.io/en/latest/rnn.html) capability for \""time\"" series data \n[//]: # (using [recurrent neural networks]&#40;https://en.wikipedia.org/wiki/Recurrent_neural_network&#41;) \n[//]: # (- Hybrid physics-based and data-driven model evaluation strategy)\n \n"",
    ""- [YADE](http://yade-dem.org/)\n- [MercuryDPM](https://www.mercurydpm.org/)\n \n""
  ]
}"
https://github.com/tpronk/splithalfr,"# splithalfr: Split-Half Reliabilities Estimates split-half reliabilities for scoring algorithms of cognitive tasks and questionnaires. ## How to cite Please cite the software and the compendium paper. ### Paper citation Pronk, T., Molenaar, D., Wiers, R. W., & Murre, J. M. J. (2021). Methods to split cognitive task data for estimating split-half reliability: A comprehensive review and systematic assessment. *Psychonomic Bulletin & Review*. https://doi.org/10.3758/s13423-021-01948-3 ### Software citation (for version 2.2.2) Pronk, T. (2023). *splithalfr: Estimates split-half reliabilities for scoring algorithms of cognitive tasks and questionnaires* (Version 2.2.2) [Computer software]. https://doi.org/10.5281/zenodo.7777894 ## Getting started We've got six short vignettes to help you get started. You can open a vignette bij running the corresponding code snippets `vignette(...)` in the R console. * `vignette(""rapi_sum"")` Sum-score for data of the 23-item version of the Rutgers Alcohol Problem Index ([White & Labouvie, 1989](https://doi.org/10.15288/jsa.1989.50.30)) * `vignette(""vpt_diff_of_means"")` Difference of mean RTs for correct responses, after removing RTs below 200 ms and above 520 ms, on Visual Probe Task data ([Mogg & Bradley, 1999](https://doi.org/10.1080/026999399379050)) * `vignette(""aat_double_diff_of_medians"")` Double difference of medians for correct responses on Approach Avoidance Task data ([Heuer, Rinck, & Becker, 2007](https://doi.org/10.1016/j.brat.2007.08.010)) * `vignette(""iat_dscore_ri"")` Improved d-score algorithm for data of an Implicit Association Task that requires a correct response in order to continue to the next trial ([Greenwald, Nosek, & Banaji, 2003](https://pubmed.ncbi.nlm.nih.gov/12916565/)) * `vignette(""sst_ssrti"")` Stop-Signal Reaction Time integration method for data of a Stop Signal Task ([Logan, 1981](http://www.psy.vanderbilt.edu/faculty/logan/Logan(1981).pdf)) * `vignette(""gng_dprime"")` D-prime for data of a Go/No Go task ([Miller, 1996](https://doi.org/10.3758/BF03205476)) ## Splitting Methods The splithalfr supports a variety of methods for splitting your data. We review and assess each method in the compendium paper ([Pronk et al., 2021](https://doi.org/10.3758/s13423-021-01948-3)). This vignette illustrates how to apply each splitting method via the splithalfr: `vignette(""splitting_methods"")` * first-second and odd-even ([Green et al., 2016](https://doi.org/10.3758/s13423-015-0968-3); [Webb, Shavelson, & Haertel, 1996](https://doi.org/10.1016/S0169-7161(06)26004-8); [Williams & Kaufmann, 1996](https://doi.org/10.1016/j.jesp.2012.03.001)) * stratified ([Green et al., 2016](https://doi.org/10.3758/s13423-015-0968-3)) * permutated/bootstrapped/random sample of split halves ([Kopp, Lange, & Steinke, 2021](https://doi.org/10.1177/1073191119866257), [Parsons, Kruijt, & Fox, 2019](https://doi.org/10.1177/2515245919879695); [Williams & Kaufmann, 2012](https://doi.org/10.1016/j.jesp.2012.03.001)) * Monte Carlo ([Williams & Kaufmann, 2012](https://doi.org/10.1016/j.jesp.2012.03.001)) ## Validation of split-half estimations Part of the splithalfr algorithm has been validated via a set of simulations that are not included in this package. The R script for these simulations can be found [here](https://github.com/tpronk/splithalfr_simulation). ## Related packages These R packages offer bootstrapped split-half reliabilities for specific scoring algorithms and are available via CRAN at the time of this writing: [multicon](https://cran.r-project.org/package=multicon), [psych](https://cran.r-project.org/package=psych), and [splithalf](https://cran.r-project.org/package=splithalf). ## Acknowledgments: I would like to thank Craig Hedge, Eva Schmitz, Fadie Hanna, [Helle Larsen](https://scholar.google.com/citations?user=ugPnkjEAAAAJ&hl=en), Marilisa Boffo, and Marjolein Zee, for making datasets available for inclusion in the splithalfr. Additionally, I would like to thank Craig Hedge and [Benedict Williams](https://www.swinburne.edu.au/research/our-research/access-our-research/find-a-researcher-or-supervisor/researcher-profile/?id=bwilliams) for sharing R-scripts with scoring algorithms that were adapted for splithalfr vignettes. Finally, I would like to thank Mae Nuijs and Sera-Maren Wiechert for spotting bugs in earlier versions of this package. Package: splithalfr Title: Estimate Split-Half Reliabilities Version: 2.2.2 Date: 2023-09-14 Author: Thomas Pronk [aut, cre] Authors@R: person(""Thomas"", ""Pronk"", email = ""pronkthomas@gmail.com"", role = c(""aut"", ""cre"")) Description: Estimates split-half reliabilities for scoring algorithms of cognitive tasks and questionnaires. The 'splithalfr' supports researcher-provided scoring algorithms, with six vignettes illustrating how on included datasets. The package provides four splitting methods (first-second, odd-even, permutated, Monte Carlo), the option to stratify splits by task design, a number of reliability coefficients, and the option to sub-sample data. Depends: R (>= 3.6.0) License: GPL-3 Encoding: UTF-8 LazyData: true Suggests: knitr (>= 1.20), rmarkdown (>= 1.10), testthat (>= 2.1.0), MASS (>= 7.3.51) Imports: dplyr (>= 1.0.7), tibble (>= 2.1.1), psych (>= 1.8.12), bcaboot (>= 0.2.1), rlang (>= 0.4.0) RoxygenNote: 7.2.3 VignetteBuilder: knitr URL: https://github.com/tpronk/splithalfr BugReports: https://github.com/tpronk/splithalfr/issues GNU LESSER GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. This version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below. 0. Additional Definitions. As used herein, ""this License"" refers to version 3 of the GNU Lesser General Public License, and the ""GNU GPL"" refers to version 3 of the GNU General Public License. ""The Library"" refers to a covered work governed by this License, other than an Application or a Combined Work as defined below. An ""Application"" is any work that makes use of an interface provided by the Library, but which is not otherwise based on the Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library. A ""Combined Work"" is a work produced by combining or linking an Application with the Library. The particular version of the Library with which the Combined Work was made is also called the ""Linked Version"". The ""Minimal Corresponding Source"" for a Combined Work means the Corresponding Source for the Combined Work, excluding any source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not on the Linked Version. The ""Corresponding Application Code"" for a Combined Work means the object code and/or source code for the Application, including any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the System Libraries of the Combined Work. 1. Exception to Section 3 of the GNU GPL. You may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL. 2. Conveying Modified Versions. If you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied by an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version: a) under this License, provided that you make a good faith effort to ensure that, in the event an Application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or b) under the GNU GPL, with none of the additional permissions of this License applicable to that copy. 3. Object Code Incorporating Material from Library Header Files. The object code form of an Application may incorporate material from a header file that is part of the Library. You may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following: a) Give prominent notice with each copy of the object code that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the object code with a copy of the GNU GPL and this license document. 4. Combined Works. You may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following: a) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the Combined Work with a copy of the GNU GPL and this license document. c) For a Combined Work that displays copyright notices during execution, include the copyright notice for the Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license document. d) Do one of the following: 0) Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source. 1) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (a) uses at run time a copy of the Library already present on the user's computer system, and (b) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version. e) Provide Installation Information, but only if you would otherwise be required to provide such information under section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or relinking the Application with a modified version of the Linked Version. (If you use option 4d0, the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code. If you use option 4d1, you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.) 5. Combined Libraries. You may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License, and convey such a combined library under terms of your choice, if you do both of the following: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities, conveyed under the terms of this License. b) Give prominent notice with the combined library that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 6. Revised Versions of the GNU Lesser General Public License. The Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library as you received it specifies that a certain numbered version of the GNU Lesser General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the Free Software Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General Public License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation. If the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the Library. cff-version: 1.2.0 title: ""splithalfr: Estimates split-half reliabilities for scoring algorithms of cognitive tasks and questionnaires"" message: ""Please cite the software itself and the journal article from 'preferred-citation'."" type: software doi: 10.5281/zenodo.7777894 version: ""2.2.2"" date-released: ""2023-09-14"" authors: - given-names: Thomas family-names: Pronk email: pronkthomas@gmail.com affiliation: ""University of Amsterdam"" orcid: ""https://orcid.org/0000-0001-9334-7190"" references: - authors: - family-names: Pronk given-names: Thomas - family-names: Molenaar given-names: Dylan - family-names: Wiers given-names: ""Reinout W."" - family-names: Murre given-names: Jaap doi: 10.3758/s13423-021-01948-3 journal: ""Psychonomic Bulletin & Review"" title: ""Methods to split cognitive task data for estimating split-half reliability: A comprehensive review and systematic assessment"" type: article year: 2021","{
    ""softwareRequirements"": [
        ""R: >=3.6.0"",
        ""dplyr: >=1.0.7"",
        ""tibble: >=2.1.1"",
        ""psych: >=1.8.12"",
        ""bcaboot: >=0.2.1"",
        ""rlang: >=0.4.0"",
        ""knitr: >=1.20"",
        ""rmarkdown: >=1.10"",
        ""testthat: >=2.1.0"",
        ""MASS: >=7.3.51""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Thomas Pronk"",
            ""email"": ""pronkthomas@gmail.com"",
            ""affiliation"": ""University of Amsterdam"",
            ""orcid"": ""https://orcid.org/0000-0001-9334-7190""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.7777894"",
    ""license"": ""GNU Lesser General Public License Version 3"",
    ""keywords"": [
        ""Split-Half Reliabilities"",
        ""Cognitive Tasks"",
        ""Questionnaires"",
        ""Scoring Algorithms"",
        ""Reliability Coefficients"",
        ""Stratified Splits"",
        ""Permutated Splits"",
        ""Monte Carlo Splits"",
        ""Data Sub-Sampling""
    ]
}","{
    ""softwareRequirements"": [
        ""R: >=3.6.0"",
        ""dplyr: >=1.0.7"",
        ""tibble: >=2.1.1"",
        ""psych: >=1.8.12"",
        ""bcaboot: >=0.2.1"",
        ""rlang: >=0.4.0"",
        ""knitr: >=1.20"",
        ""rmarkdown: >=1.10"",
        ""testthat: >=2.1.0"",
        ""MASS: >=7.3.51""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Thomas Pronk"",
            ""email"": ""pronkthomas@gmail.com"",
            ""affiliation"": ""University of Amsterdam"",
            ""orcid"": ""https://orcid.org/0000-0001-9334-7190""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.7777894"",
    ""license"": ""GNU Lesser General Public License Version 3"",
    ""keywords"": [
        ""Split-Half Reliabilities"",
        ""Cognitive Tasks"",
        ""Questionnaires"",
        ""Scoring Algorithms"",
        ""Reliability Coefficients"",
        ""Stratified Splits"",
        ""Permutated Splits"",
        ""Monte Carlo Splits"",
        ""Data Sub-Sampling""
    ]
}","{
    ""softwareRequirements"": [
        ""R:>= 3.6.0"",
        ""knitr:>=1.20"",
        ""rmarkdown:>=1.10"",
        ""testthat:>=2.1.0"",
        ""MASS:>=7.3.51"",
        ""dplyr:>=1.0.7"",
        ""tibble:>=2.1.1"",
        ""psych:>=1.8.12"",
        ""bcaboot:>=0.2.1"",
        ""rlang:>=0.4.0""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""given-names"": ""Thomas"",
            ""family-names"": ""Pronk"",
            ""email"": ""pronkthomas@gmail.com"",
            ""affiliation"": ""University of Amsterdam"",
            ""orcid"": ""https://orcid.org/0000-0001-9334-7190""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.7777894""
    ],
    ""license"": ""LGPL-3.0"",
    ""keywords"": []
}","{
  ""author"": [
    {
      ""@type"": ""Person"",
      ""@id"": ""https://github.com/tpronk""
    }
  ],
  ""license"": {
    ""name"": ""GNU Lesser General Public License v3.0"",
    ""url"": ""https://raw.githubusercontent.com/tpronk/splithalfr/main/LICENSE""
  },
  ""keywords"": """",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""GNU Lesser General Public License v3.0"",
    ""url"": ""https://raw.githubusercontent.com/tpronk/splithalfr/main/LICENSE""
  },
  ""codeRepository"": ""https://github.com/tpronk/splithalfr"",
  ""issueTracker"": ""https://github.com/tpronk/splithalfr/issues"",
  ""dateCreated"": ""2019-05-23"",
  ""dateModified"": ""2024-02-09"",
  ""downloadUrl"": ""https://github.com/tpronk/splithalfr/releases"",
  ""name"": ""splithalfr"",
  ""keywords"": """",
  ""programmingLanguage"": [
    ""R""
  ],
  ""author"": [
    {
      ""@type"": ""Person"",
      ""@id"": ""https://github.com/tpronk""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/tpronk/splithalfr/main/CITATION.cff""
  ],
  ""readme"": ""https://raw.githubusercontent.com/tpronk/splithalfr/main/README.md"",
  ""description"": [
    ""splithalfr: Estimates split-half reliabilities for scoring algorithms of cognitive tasks and questionnaires"",
    ""The splithalfr supports a variety of methods for splitting your data. We review and assess each  method in the compendium paper ([Pronk et al., 2021](https://doi.org/10.3758/s13423-021-01948-3)). This vignette illustrates how to apply each splitting method via the splithalfr: `vignette(\""splitting_methods\"")` \n* first-second and odd-even ([Green et al., 2016](https://doi.org/10.3758/s13423-015-0968-3); [Webb, Shavelson, & Haertel, 1996](https://doi.org/10.1016/S0169-7161(06)26004-8); [Williams & Kaufmann, 1996](https://doi.org/10.1016/j.jesp.2012.03.001))\n* stratified ([Green et al., 2016](https://doi.org/10.3758/s13423-015-0968-3))\n* permutated/bootstrapped/random sample of split halves ([Kopp, Lange, & Steinke, 2021](https://doi.org/10.1177/1073191119866257), [Parsons, Kruijt, & Fox, 2019](https://doi.org/10.1177/2515245919879695); [Williams & Kaufmann, 2012](https://doi.org/10.1016/j.jesp.2012.03.001))\n* Monte Carlo ([Williams & Kaufmann, 2012](https://doi.org/10.1016/j.jesp.2012.03.001))\n \n"",
    ""Estimates split-half reliabilities for scoring algorithms of cognitive tasks and questionnaires. \n \n"",
    ""These R packages offer bootstrapped split-half reliabilities for specific scoring algorithms and are available via CRAN at the time of this writing:  [multicon](https://cran.r-project.org/package=multicon), [psych](https://cran.r-project.org/package=psych), and [splithalf](https://cran.r-project.org/package=splithalf).\n \n"",
    ""Part of the splithalfr algorithm has been validated via a set of simulations that are not included in this package. The R script for these simulations can be found [here](https://github.com/tpronk/splithalfr_simulation).\n \n""
  ]
}"
https://github.com/dfsp-spirit/fsbrain,"# fsbrain [![DOI](https://zenodo.org/badge/209085379.svg)](https://zenodo.org/doi/10.5281/zenodo.3559816) An R package for structural neuroimaging. Provides high-level functions to access (read and write) and visualize surface-based brain morphometry data (e.g. cortical thickness) for individual subjects and groups. ![Vis](https://github.com/dfsp-spirit/fsbrain_gallery/blob/master/surface/fsbrain_sulcal_depth_cbar_web.jpg?raw=true ""Sulcal depth visualization, created with fsbrain"") **Fig.1**: *Visualization of sulcal depth for a subject in FreeSurfer standard space (fsaverage). See the [source code to reproduce this image](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_export.html) in an R notebook.* [About](#about) | [Installation](#installation) | [Documentation](#documentation) | [Unit tests](#unit-tests-and-continuous-integration) | [License](#license) | [Citation](#citation) | [Visualization examples](#visualization-examples) | [Contributing](#contributing) ## About The *fsbrain* R package provides a well-tested and consistent interface to neuroimaging data in [R](https://www.r-project.org/). It supports reading, writing, and visualizing various kinds of raw data and statistical results on brain surfaces and volumes. While the package provides a very convenient interface for working with data arranged in the standard [FreeSurfer](http://freesurfer.net/) directory structure (SUBJECTS_DIR), *fsbrain* is not limited to this layout or FreeSurfer file formats. You can load brain meshes, volumes, and data from a range of other neuroimaging software packages and visualize them. The plots produced by *fsbrain* can be integrated into R notebooks or written to high-quality bitmap image files, ready for publication. The [rgl](https://CRAN.R-project.org/package=rgl) renderer used by *fsbrain* provides fast, hardware-accelerated rendering based on the OpenGL standard. ## News * 2023-06-26: New fsbrain version 0.5.4 released on CRAN, see the [CHANGES](./CHANGES). * 2022-12-22: We are looking for help! If you have a Mac and are interested in helping fsbrain development, please [contact us by email](http://rcmd.org/ts/#contact) or reply to [#46](https://github.com/dfsp-spirit/fsbrain/issues/46) here on GitHub! * 2022-02-13: New fsbrain version 0.5.3 released on CRAN, see the [CHANGES](./CHANGES). * 2021-11-11: New fsbrain version 0.5.1 released on CRAN, see the [CHANGES](./CHANGES). * 2021-09-16: New fsbrain version 0.5.0 released on CRAN, see the [CHANGES](./CHANGES). * 2021-05-12: New fsbrain version 0.4.3 released on CRAN, see the [CHANGES](./CHANGES). * 2021-03-28: New fsbrain version 0.4.2 released on CRAN, see the [CHANGES](./CHANGES). * 2020-09-20: The preprint of our paper [T. Schaefer, C. Ecker: fsbrain: an R package for the visualization of structural neuroimaging data](https://doi.org/10.1101/2020.09.18.302935)' is now available on biorxiv. ## Installation ### Recommended: install the stable fsbrain version from CRAN You can find the [fsbrain package on CRAN](https://cran.r-project.org/package=fsbrain), so all you need to do is: ```r install.packages(""fsbrain""); ``` In case something goes wrong, don't worry. Just install the missing [system dependencies](#system-dependencies) and retry. ### Risky: install the dev version of fsbrain with the latest features This version is not guaranteed to be in a usable state, try at your own risk and run the tests before using it. From an R session: ```r install.packages(c(""devtools"", ""knitr"", ""markdown"", ""rmarkdown"", ""testthat"", ""qpdf"")); devtools::install_github(""dfsp-spirit/fsbrain"", build_vignettes=TRUE); ``` ### System dependencies A *system dependency* is a **non-R** software that is needed for the installation of a package. System dependencies cannot be installed automatically using the R package system, so you need to install them manually or using the package manager of your operating system. The *fsbrain* package itself does not have any system dependencies, however, it uses *rgl* for rendering. You can check the *SystemRequirements* section on the [rgl page at CRAN](https://CRAN.R-project.org/package=rgl) for the full list of rgl dependencies or read on. To get GIFTI format support, you will also need `libxml2-dev`. To install the system dependencies for *rgl* and *xml2*: #### Linux System dependencies (or: building from source) R packages are compiled from source by default under Linux, so you need some development libraries. Before installing *fsbrain*, run the following command in your system shell (not in R): * for deb-based Linux distributions (Debian, Ubuntu, ...): ```shell sudo apt-get install libmagick++-dev libx11-dev libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev libfreetype6-dev libxml2-dev libssh-dev libcurl4-openssl-dev gfortran libblas-dev liblapack-dev libgfortran4 ``` Note: For recent Ubuntu versions, you may have to replace ```libgfortan4``` in the command above with ```libgfortan5```. * for rpm-based Linux distributions (Fedora, CentOS, RHEL, ...): ```shell sudo yum install ImageMagick-c++-devel libX11-devel mesa-libGLU-devel freetype-devel libxml2-devel ``` If you want to compile the package under any other operating system, you will need the libraries as well, of course. #### MacOS System dependencies Recent MacOS versions do not ship with an X11 environment. You will have to install the [xquartz X11 system](https://www.xquartz.org/) if you do not have it already. If you want to create GIF movies, make sure you have imagemagick installed (easiest via [homebrew](https://brew.sh/): `brew install imagemagick@6`). #### Windows Installation Hints Under Windows 10, it seems that you will need to install these two packages manually via the `install.packages` command: `shiny` and `manipulateWidget`. ### Installation via Docker There are Docker images for fsbrain available on Dockerhub, see the [fsbrain Dockerhub repo](https://hub.docker.com/r/dfspspirit/fsbrain). ## Documentation The documentation can be accessed from within an R session after you have loaded the *fsbrain* package: * There are two online R Markdown notebooks (like Jupyter Notebook in Python) that show various example plots in combination with the code used to produce them: * [basic fsbrain example notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples.html): Live visualization of subject data * [advanced fsbrain example notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_adv.html): Plotting group data * [export API fsbrain example notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_export.html): Exporting publication-ready plots * Detailed vignettes with explanations and examples for the functions of the package is included, run `browseVignettes(""fsbrain"")` to see the vignettes. You can also open the vignette directly: * How to load and visualize surface-based neuroimaging data: `vignette(""fsbrain"")` or: [read online at CRAN](https://cran.r-project.org/web/packages/fsbrain/vignettes/fsbrain.html) * How to load and visualize volume-based neuroimaging data: `vignette(""fsbrain_vol"")` or: [read online at CRAN](https://cran.r-project.org/web/packages/fsbrain/vignettes/fsbrain_vol.html) * The fsbrain FAQ: `vignette(""fsbrain_faq"")` or: [read online at CRAN](https://cran.r-project.org/web/packages/fsbrain/vignettes/fsbrain_faq.html) * Help for a specific function can be accessed in the usual R manner: `?<function>`, where you replace `<function>` with a function name. Like this: `?group.morph.native`. * Run `example(<function>)` to see a live demo that uses the function `<function>`. Like this: `example(group.morph.native)`. * The [unit tests](./tests/testthat/) that come with this package are essentially a list of examples that illustrate how to use the functions. ## Unit tests and Continuous integration This package comes with [lots of unit tests](./tests/testthat/). To run them, in a clean R session: ```r library(devtools) library(fsbrain) devtools::check() ``` Continuous integration results: <!-- badges: start --> [![AppVeyor build status](https://ci.appveyor.com/api/projects/status/github/dfsp-spirit/fsbrain?branch=master&svg=true)](https://ci.appveyor.com/project/dfsp-spirit/fsbrain) AppVeyor CI under Windows <!-- [![R-CMD-check](https://github.com/dfsp-spirit/fsbrain/workflows/R-CMD-check/badge.svg)](https://github.com/dfsp-spirit/fsbrain/actions) --> [GitHub Actions, Ubuntu Linux and MacOS](https://github.com/dfsp-spirit/fsbrain/actions) (Note: Currently this is always ""failing"" because of a warning caused by the `rgl` package when running headless. So the simlpe ""passing""/""failing"" status is useless, and one needs to follow the link to check the relevant CI results in detail.) <!-- badges: end --> ## License The *fsbrain* package is [free software](https://en.wikipedia.org/wiki/Free_software), published under the [MIT license](https://opensource.org/licenses/MIT). Note: The file LICENSE in this repository is a CRAN license template only (as required by CRAN) and does not contain the full MIT license text. See the file [LICENSE_FULL](./LICENSE_FULL) for the full license text. ## Citation and Publications You can generate the citation for [our fsbrain paper](https://doi.org/10.1101/2020.09.18.302935) by typing the following command in R: ``` citation(""fsbrain"") ``` This currently outputs: ``` To cite fsbrain in publications use: Tim Schaefer, Christine Ecker (2020). fsbrain: an R package for the visualization of structural neuroimaging data. bioRxiv doi: 10.1101/2020.09.18.302935 A BibTeX entry for LaTeX users is @Misc{, title = {fsbrain: an {R} package for the visualization of structural neuroimaging data}, author = {Tim Schaefer and Christine Ecker}, year = {2020}, url = {https://www.biorxiv.org/content/10.1101/2020.09.18.302935v1}, doi = {10.1101/2020.09.18.302935}, } ``` Other materials related to fsbrain: * A poster on *fsbrain* has been presented at INSAR 2020 Annual Meeting: [Abstract](https://insar.confex.com/insar/2020/meetingapp.cgi/Paper/33181), [ePoster viewer](https://insar.confex.com/insar/2020/techdemo/eposter.cgi?eposterid=227), [PDF download](https://github.com/dfsp-spirit/fsbrain_gallery/raw/master/extra_materials/Poster_IMFAR2020_fsbrain.pdf) ## Visualization examples The *fsbrain* package support visualizations of different data, and all data can be displayed in one or more views. The figure below shows some examples for surface-based data: ![Visoverview](./web/fsbrain_vis_overview.jpg?raw=true ""Some visualization options from fsbrain"") **Fig.2**: *Example output for the fsbrain interactive visualization functions*. * **Subfigure A** shows the visualization of raw morphometry data (cortical thickness) from native space on the white surface of a subject. The view shows the data in tiles from 8 different angles. * **Subfigure B** illustrates arbitrary data (p-values in this case) visualized on the regions of the Desikan atlas, using the surface of the fsaverage (standard space template) subject from FreeSurfer. The view shows the data in tiles from 4 different angles. * **Subfigure C** displays the regions of the Desikan atlas on the white surface of a subject. The colors were loaded from the respective annotation file. The view shows the data in tiles from 4 different angles. *What* is displayed (morphometry data, atlas regions, arbitrary other data), on *which surface* it is displayed, and *how* it is displayed (a single interactive view, 4 tiles, 9 tiles) is independent and can be selected as needed in fsbrain. Here is a second figure, showing the same data (the [mean curvature](https://en.wikipedia.org/wiki/Mean_curvature) at each vertex) displayed on 3 different surfaces of a subject: **A** white surface, **B** pial surface, **C** inflated surface. ![Vissurfaces](./web/fsbrain_curvature_surfaces.jpg?raw=true ""Curvature visualization on different surfaces, rendered with fsbrain"") The next figure illustrates some options to visualize your results with different backgrounds. **A** Clusters on the white fsaverage surface with sulc background. **B** Region-wise p-values with curv background, inflated fsaverage surface. **C** A background color layer displaying outlines of aparc atlas regions in the respective colors, inflated demo subject surface. ![Visres](./web/fsbrain_vis_bg.jpg?raw=true ""Visualization of results and background layers, rendered with fsbrain"") ### Animations and videos Want to see brains spin? [Check this out.](./web/fsbrain_movies.md) (WARNING: loads 8 MB webpage with animated gif). ### Volume visualization Volume visualization is not the main goal of fsbrain, but standard lightbox views and simple 3D views are supported. Have a look at the vignettes or the documentation for the `volvis.lb` function. You can find some [example output here](./web/fsbrain_volume.md). ### Example Notebooks To see a combination of example figures and the code used to produce them, you should have a look at the example notebooks: [getting started notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples.html) and [advanced examples notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_adv.html). ## Contributing Please refer to [CONTRIBUTING.md](./CONTRIBUTING.md). If you have any question, suggestion or comment on fsbrain, please [open an issue](https://github.com/dfsp-spirit/fsbrain/issues). If you want to contact me via email, please use the maintainer email address listed on the [CRAN webpage for fsbrain](https://cran.r-project.org/package=fsbrain). ## Related R packages Packages similar to fsbrain: * [ggseg](https://github.com/LCBC-UiO/ggseg) by Athanasia Mowinckel and Didac Vidal-Piñeiro: Plotting of atlas-based neuroimaging data in R. * [cerebroviz](https://github.com/ethanbahl/cerebroViz) by Ethan Bahl: Data mapping tool for visualizing spatiotemporal data in the brain. Packages used by fsbrain: * [rgl](https://CRAN.R-project.org/package=rgl) by Daniel Adler, Duncan Murdoch et al.: OpenGL-based mesh renderer. * [oro.nifti](https://github.com/muschellij2/oro.nifti) by Brandon Witcher et al. : Loading and manipulation of brain volumes from NIFTI v1 files. * [freesurferformats](https://github.com/dfsp-spirit/freesurferformats) by Tim Schäfer (me): Loading and writing various neuroimaging file formats and general mesh file formats, with a focus on FreeSurfer formats. * [gifti](https://github.com/muschellij2/gifti/) and [cifti](https://github.com/muschellij2/cifti/) by John Muschelli: Read GIFTI and CIFTI format files. * [Rvcg](https://github.com/zarquon42b/Rvcg) by Stefan Schlager: Rcpp interface for the [VCG Library](http://vcg.isti.cnr.it/vcglib/). ## Author fsbrain was written by [Tim Schäfer](https://ts.rcmd.org) Package: fsbrain Type: Package Title: Managing and Visualizing Brain Surface Data Version: 0.5.5 Authors@R: person(""Tim"", ""Schäfer"", role = c(""aut"", ""cre""), email = ""ts+code@rcmd.org"", comment = c(ORCID = ""0000-0002-3683-8070"")) Maintainer: Tim Schäfer <ts+code@rcmd.org> Description: Provides high-level access to neuroimaging data from standard software packages like 'FreeSurfer' <http://freesurfer.net/> on the level of subjects and groups. Load morphometry data, surfaces and brain parcellations based on atlases. Mask data using labels, load data for specific atlas regions only, and visualize data and statistical results directly in 'R'. License: MIT + file LICENSE Encoding: UTF-8 URL: https://github.com/dfsp-spirit/fsbrain BugReports: https://github.com/dfsp-spirit/fsbrain/issues Imports: reshape, freesurferformats (>= 0.1.17), pkgfilecache (>= 0.1.1), rgl, squash, fields, viridis, data.table, magick, methods Suggests: knitr, rmarkdown, testthat (>= 2.1.0), sphereplot (>= 1.5), misc3d, RColorBrewer, Rvcg (>= 0.20.2), igraph, pracma VignetteBuilder: knitr RoxygenNote: 7.3.2 YEAR: 2019, 2020, 2021, 2022, 2023, 2024 COPYRIGHT HOLDER: Tim Schäfer cff-version: 1.2.0 message: If you use fsbrain in your research, please cite it using these metadata. title: fsbrain abstract: fsbrain is an R package for the visualization of neuroimaging data. The package can be used to visualize vertex-wise and region-wise morphometry data, parcellations, labels and statistical results on brain surfaces in three dimensions (3D). Voxel data can be displayed in lightbox mode. The fsbrain package offers various customization options and produces publication quality plots which can be displayed interactively, saved as bitmap images, or integrated into R notebooks. authors: - family-names: Schaefer given-names: Tim orcid: ""https://orcid.org/0000-0002-3683-8070"" - name: ""fsbrain: an R package for the visualization of structural neuroimaging data"" version: 0.5.3 date-released: ""2022-02-13"" identifiers: - description: All-versions DOI for fsbrain. type: doi value: ""10.5281/zenodo.3559816"" - description: Archived snapshot of version 0.5.3 of fsbrain. type: doi value: ""10.5281/zenodo.6061167"" license: MIT repository-code: ""https://github.com/dfsp-spirit/fsbrain""","{
    ""softwareRequirements"": [
        ""reshape"",
        ""freesurferformats: >=0.1.17"",
        ""pkgfilecache: >=0.1.1"",
        ""rgl"",
        ""squash"",
        ""fields"",
        ""viridis"",
        ""data.table"",
        ""magick"",
        ""methods""
    ],
    ""buildInstructions"": ""1. Install the stable fsbrain version from CRAN: install.packages(\""fsbrain\""); 2. If installation fails, install the missing system dependencies: sh, shiny, manipulateWidget, imagemagick@6 (via homebrew on MacOS); 3. Install the dev version of fsbrain with the latest features: install.packages(c(\""devtools\"", \""knitr\"", \""markdown\"", \""rmarkdown\"", \""testthat\"", \""qpdf\"")); devtools::install_github(\""dfsp-spirit/fsbrain\"", build_vignettes=TRUE); 4. For Linux, install the following system dependencies: libmagick++-dev, libx11-dev, libgl1-mesa-dev, libglu1-mesa-dev, mesa-common-dev, libfreetype6-dev, libxml2-dev, libssh-dev, libcurl4-openssl-dev, gfortran, libblas-dev, liblapack-dev, libgfortran4; 5. For MacOS, install xquartz and imagemagick@6 via homebrew; 6. For Windows, install shiny and manipulateWidget manually via install.packages."",
    ""author"": [
        {
            ""name"": ""Tim Schäfer"",
            ""email"": ""ts+code@rcmd.org"",
            ""orcid"": ""0000-0002-3683-8070""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.3559816"",
    ""license"": ""MIT"",
    ""keywords"": [
        ""Neuroimaging"",
        ""Brain Surface Data"",
        ""Structural Neuroimaging"",
        ""Visualization"",
        ""R Package"",
        ""FreeSurfer"",
        ""GIFTI"",
        ""CIFTI"",
        ""OpenGL"",
        ""Mesh Renderer"",
        ""Atlas Regions"",
        ""Statistical Results"",
        ""Publication Quality Plots"",
        ""Interactive Visualization"",
        ""R Notebooks"",
        ""Bitmap Images"",
        ""Lightbox Mode"",
        ""Voxel Data"",
        ""Customization Options"",
        ""Rcpp"",
        ""VCG Library"",
        ""R Markdown"",
        ""Testthat"",
        ""Squash"",
        ""Fields"",
        ""Viridis"",
        ""Data Table"",
        ""Magick"",
        ""Methods"",
        ""RGL"",
        ""Suggests"",
        ""Knitr"",
        ""RMarkdown"",
        ""Sphereplot"",
        ""Misc3d"",
        ""RColorBrewer"",
        ""Igraph"",
        ""Pracma""
    ]
}","{
    ""softwareRequirements"": [
        ""reshape"",
        ""freesurferformats: >=0.1.17"",
        ""pkgfilecache: >=0.1.1"",
        ""rgl"",
        ""squash"",
        ""fields"",
        ""viridis"",
        ""data.table"",
        ""magick"",
        ""methods""
    ],
    ""buildInstructions"": ""1. Install the stable fsbrain version from CRAN: install.packages(\""fsbrain\""); 2. If installation fails, install the missing system dependencies: sh, shiny, manipulateWidget, imagemagick@6 (via homebrew on MacOS); 3. Install the dev version of fsbrain with the latest features: install.packages(c(\""devtools\"", \""knitr\"", \""markdown\"", \""rmarkdown\"", \""testthat\"", \""qpdf\"")); devtools::install_github(\""dfsp-spirit/fsbrain\"", build_vignettes=TRUE); 4. For Linux, install the following system dependencies: libmagick++-dev, libx11-dev, libgl1-mesa-dev, libglu1-mesa-dev, mesa-common-dev, libfreetype6-dev, libxml2-dev, libssh-dev, libcurl4-openssl-dev, gfortran, libblas-dev, liblapack-dev, libgfortran4; 5. For MacOS, install xquartz and imagemagick@6 via homebrew; 6. For Windows, install shiny and manipulateWidget manually via install.packages."",
    ""author"": [
        {
            ""name"": ""Tim Schäfer"",
            ""email"": ""ts+code@rcmd.org"",
            ""orcid"": ""0000-0002-3683-8070""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.3559816"",
    ""license"": ""MIT"",
    ""keywords"": [
        ""Neuroimaging"",
        ""Brain Surface Data"",
        ""Structural Neuroimaging"",
        ""Visualization"",
        ""R Package"",
        ""FreeSurfer"",
        ""GIFTI"",
        ""CIFTI"",
        ""OpenGL"",
        ""Mesh Renderer"",
        ""Atlas Regions"",
        ""Statistical Results"",
        ""Publication Quality Plots"",
        ""Interactive Visualization"",
        ""R Notebooks"",
        ""Bitmap Images"",
        ""Lightbox Mode"",
        ""Voxel Data"",
        ""Customization Options"",
        ""Rcpp"",
        ""VCG Library"",
        ""R Markdown"",
        ""Testthat"",
        ""Squash"",
        ""Fields"",
        ""Viridis"",
        ""Data Table"",
        ""Magick"",
        ""Methods"",
        ""RGL"",
        ""Suggests"",
        ""Knitr"",
        ""RMarkdown"",
        ""Sphereplot"",
        ""Misc3d"",
        ""RColorBrewer"",
        ""Igraph"",
        ""Pracma""
    ]
}","{
    ""softwareRequirements"": [
        ""reshape"",
        ""freesurferformats (>= 0.1.17)"",
        ""pkgfilecache (>= 0.1.1)"",
        ""rgl"",
        ""squash"",
        ""fields"",
        ""viridis"",
        ""data.table"",
        ""magick"",
        ""methods""
    ],
    ""buildInstructions"": ""## Installation\n\n\n### Recommended: install the stable fsbrain version from CRAN\n\nYou can find the [fsbrain package on CRAN](https://cran.r-project.org/package=fsbrain), so all you need to do is:\n\n```r\ninstall.packages(\""fsbrain\"");\n```\n\nIn case something goes wrong, don't worry. Just install the missing [system dependencies](#system-dependencies) and retry.\n\n\n### Risky: install the dev version of fsbrain with the latest features\n\nThis version is not guaranteed to be in a usable state, try at your own risk and run the tests before using it.\n\nFrom an R session:\n\n```r\ninstall.packages(c(\""devtools\"", \""knitr\"", \""markdown\"", \""rmarkdown\"", \""testthat\"", \""qpdf\""));\ndevtools::install_github(\""dfsp-spirit/fsbrain\"", build_vignettes=TRUE);\n```"",
    ""author"": [
        {
            ""family-names"": ""Schaefer"",
            ""given-names"": ""Tim"",
            ""orcid"": ""https://orcid.org/0000-0002-3683-8070""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.3559816""
    ],
    ""license"": ""MIT"",
    ""keywords"": []
}",,
https://github.com/NLeSC/pattyvis,"PattyVis ======== [![Build Status](https://travis-ci.org/NLeSC/PattyVis.svg?branch=master)](https://travis-ci.org/NLeSC/PattyVis) [![Code Climate](https://codeclimate.com/github/NLeSC/PattyVis/badges/gpa.svg)](https://codeclimate.com/github/NLeSC/PattyVis) [![Test Coverage](https://codeclimate.com/github/NLeSC/PattyVis/badges/coverage.svg)](https://codeclimate.com/github/NLeSC/PattyVis) [![Sauce Test Status](https://saucelabs.com/buildstatus/patty-vis)](https://saucelabs.com/u/patty-vis) [![devDependency Status](https://david-dm.org/NLeSC/PattyVis/dev-status.svg)](https://david-dm.org/NLeSC/PattyVis#info=devDependencies) [![Codacy Badge](https://www.codacy.com/project/badge/a2ebd9977fe04aa1af6e5c47dc8d6927)](https://www.codacy.com/public/sverhoeven/PattyVis) [![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.45923.svg)](http://dx.doi.org/10.5281/zenodo.45923) Webgl pointcloud visualization of the Via Appia based on http://potree.org -------------------------------------------------------------------------- ![logo](DOCS/pattyvis_fp_ss4.png ""A beautiful vista"") A big step towards a 3D GIS Application. ![logo](DOCS/pattyvis_fp_ss2.png ""A big step towards a 3D GIS Application"") With 3D footprints of grave monuments based on GPS coordinates. ![logo](DOCS/pattyvis_fp_ss1.png ""With 3D footprints based on GPS coordinates"") A 'background' or reference frame was made with Fugro's drive-map technology http://www.drive-map.eu/ ![logo](DOCS/pattyvis_fp_ss9.png ""The drive map visualized"") Several monuments have been photographed extensively and made into seperate pointclouds. This is an ongoing process. ![logo](DOCS/pattyvis_fp_ss5.png ""Here you can see the drive-map and the site-specific photography based pointcloud next to eachother"") ![logo](DOCS/pattyvis_fp_ss3.png ""A particularly well-captured monument."") Measurements can be made in the 3D environment. ![logo](DOCS/pattyvis_fp_ss8.png ""Measurements can be made in the 3D environment."") Historical maps can give extra information on the site's history. ![logo](DOCS/pattyvis_fp_ss6.png ""Historical maps can give extra information on the site's history."") Searching options like the material used in the site can give extra insight. ![logo](DOCS/pattyvis_fp_ss7.png ""Historical maps can give extra information on the site's history."") Getting started (windows, from scratch) --------------------------------------- 1. Install Git : http://git-scm.com/downloads 2. Install Node.js : http://nodejs.org/ (Make sure add node to PATH option is checked) 1. Create '$HOME/npm' folder (Where $HOME is c:\Users\<username>\AppData\Roaming). 2. Open node command prompt and run `npm install -g bower grunt-cli` 3. Install Ruby: http://rubyinstaller.org/ (Make sure add ruby to PATH option is checked) 1. Open ruby command prompt and run `gem install compass` 4. Start Git bash 5. Type: ""git clone https://github.com/NLeSC/PattyVis"" 6. Type: ""cd PattyVis"" 7. Type: ""npm install -g grunt grunt-cli"" 8. Type: ""npm install"" 8. Type: ""bower install"" 8. Type: ""bower update"" 9. Type: ""grunt serve"" 10. Open browser, go to ""http://localhost:9000"" Getting started (Linux, Debian and Ubuntu based) ------------------------------------------------- Prerequisites ------------ 1. nodejs, http://nodejs.org/ 2. bower, http://bower.io 3. compass, http://compass-style.org 4. Java Development Kit, https://www.java.com/ 5. PhantomJS v1 https://bitbucket.org/ariya/phantomjs/downloads/ Installation ------------ ### Install nodejs Follow instructions at joyents github website: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#debian-and-ubuntu-based-linux-distributions ### Install nodejs modules Install bower, karma-cli and grunt-cli globally ``` sudo npm install -g bower grunt-cli karma-cli ``` ### Install compass Compass is used to convert the sass 2 css. 1. Install Ruby using https://www.ruby-lang.org/en/documentation/installation/#apt 2. Install Ruby dev and other dependecy packages ``` sudo apt-get install ruby-dev libffi-dev ``` 3. Install compass (for sass compilation) ``` gem install compass ``` ### Fetch git repository ``` git clone https://github.com/NLeSC/PattyVis ``` ### setup with bower ``` cd PattyVis npm install bower install ``` If you already have a installed the bower packages before, but need to update them for a new version of the code, run ``` bower update ``` ### start development server & open browser ``` grunt serve ``` Changes made to code will automatically reload web page. ### Run unit tests ``` grunt test ``` Generates test report and coverage inside `test/reports` folder. ### Run end-to-end tests with local browser (chrome) Tests in Chrome can be run with ``` grunt e2e-local ``` The pointcloud and minimap use a canvas and can't be tested automatically so they must be verified manually using the screenshots in the report. Open `e2e/reports/report.html` in a web-browser. ### Run end-to-end tests on [sauce labs](https://saucelabs.com/) To connnect to Sauce Labs use sauce connect program. [Here](https://docs.saucelabs.com/reference/sauce-connect/) you can find the details on how to install and run it. Before tests can be run the sauce labs credentials must be setup ``` export SAUCE_USERNAME=<your sauce labs username> export SAUCE_ACCESS_KEY=<your sauce labs access key> ``` Tests in Chrome, Firefox on Windows, Linux and OSX can be run with ``` grunt e2e-sauce ``` The pointcloud and minimap use a canvas and can't be tested automatically so they must be verified manually using the screencast in the report at `https://saucelabs.com/u/<your sauce labs username>`. Travis-ci also runs end-to-end tests on sauce labs. Note! Running `grunt e2e-sauce` will undo all changes in `app/` folder. ### Build a distro ``` grunt build ``` The `dist` folder has production ready distribution. ### Generate API documentation ``` grunt jsdoc ``` API documentation is generated in `doc/` directory. Mockup ------ For mockup see https://wiki.esciencecenter.nl/index.php/Patty_Visualization Oculus Rift ----------- Get the host application and run it: https://github.com/Instrument/oculus-bridge Creation of sites.json ---------------------- In db run: SELECT site_id, ST_ASGEOJSON(geom, 15,5) FROM sites_geoms WHERE site_id IN (162,13); To get geometry, bbox and crs. Height and properties need to be filled manually. Frame rate report ---------------- Use Chrome FPS plotting to get the frame rate. 1. Open developer tools 2. On Console tab goto Rendering tab (bottom screen) 3. Check the Show FPS meter checkbox { ""directory"": ""bower_components"" } { ""name"": ""patty"", ""version"": ""0.0.0"", ""homepage"": ""https://github.com/NLeSC/PattyVis"", ""authors"": [ ""maartenvm <m.vanmeersbergen@esciencecenter.nl>"", ""sverhoeven <s.verhoeven@esciencecenter.nl>"", ""mkuzak <mateusz.kuzak@gmail.com>"", ""jvdzwaan"", ""egpbos"" ], ""license"": ""Apache 2.0"", ""dependencies"": { ""angular"": ""1.3.0"", ""json3"": ""^3.3.0"", ""es5-shim"": ""^4.0.0"", ""bootstrap-sass-official"": ""^3.2.0"", ""angular-animate"": ""1.3.0"", ""angular-cookies"": ""1.3.0"", ""angular-resource"": ""1.3.0"", ""angular-route"": ""1.3.0"", ""angular-sanitize"": ""1.3.0"", ""angular-touch"": ""1.3.0"", ""openlayers3"": ""https://github.com/openlayers/ol3/releases/download/v3.3.0/v3.3.0.zip"", ""proj4"": ""~2.3.3"", ""threejs"": ""r69"", ""OrbitControls"": ""https://raw.github.com/mrdoob/three.js/r69/examples/js/controls/OrbitControls.js"", ""OBJLoader"": ""https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJLoader.js"", ""DDSLoader"": ""https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/DDSLoader.js"", ""MTLLoader"": ""https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/MTLLoader.js"", ""OBJMTLLoader"": ""https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJMTLLoader.js"", ""potree"": ""https://github.com/potree/potree/archive/1.2.zip"", ""bluebird"": ""1.0.8"", ""angular-bootstrap"": ""0.12.0"", ""ol-layerswitcher"": ""~1.0.1"", ""3dhop"": ""3DHOP/3DHOP#3.0"" }, ""overrides"": { ""openlayers3"": { ""main"": [ ""build/ol.js"", ""css/ol.css"" ] }, ""oculus-bridge"": { ""main"": ""web/build/OculusBridge.min.js"" }, ""potree"": { ""main"": [ ""build/js/potree.js"", ""libs/plasio/js/laslaz.js"", ""build/workers/laslaz-worker.js"", ""build/workers/lasdecoder-worker.js"" ] }, ""stats.js"": { ""main"": ""build/stats.min.js"" }, ""3dhop"": { ""main"": [ ""minimal/js/spidergl.js"", ""minimal/js/presenter.js"", ""minimal/js/ply.js"", ""minimal/js/trackball_sphere.js"", ""minimal/js/trackball_turntable.js"", ""minimal/js/trackball_pantilt.js"" ] } }, ""resolutions"": { ""angular"": ""^1.3.0"" }, ""devDependencies"": { ""angular-mocks"": ""~1.3.0"", ""angular-scenario"": ""~1.3.0"" }, ""appPath"": ""app"" } Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""{}"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright {yyyy} {name of copyright owner} Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","{
    ""softwareRequirements"": [
        ""angular: ^1.3.0"",
        ""json3: ^3.3.0"",
        ""es5-shim: ^4.0.0"",
        ""bootstrap-sass-official: ^3.2.0"",
        ""angular-animate: 1.3.0"",
        ""angular-cookies: 1.3.0"",
        ""angular-resource: 1.3.0"",
        ""angular-route: 1.3.0"",
        ""angular-sanitize: 1.3.0"",
        ""angular-touch: 1.3.0"",
        ""openlayers3: https://github.com/openlayers/ol3/releases/download/v3.3.0/v3.3.0.zip"",
        ""proj4: ~2.3.3"",
        ""threejs: r69"",
        ""OrbitControls: https://raw.github.com/mrdoob/three.js/r69/examples/js/controls/OrbitControls.js"",
        ""OBJLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJLoader.js"",
        ""DDSLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/DDSLoader.js"",
        ""MTLLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/MTLLoader.js"",
        ""OBJMTLLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJMTLLoader.js"",
        ""potree: https://github.com/potree/potree/archive/1.2.zip"",
        ""bluebird: 1.0.8"",
        ""angular-bootstrap: 0.12.0"",
        ""ol-layerswitcher: ~1.0.1"",
        ""3dhop: 3DHOP/3DHOP#3.0""
    ],
    ""buildInstructions"": ""1. Install Git: http://git-scm.com/downloads 2. Install Node.js: http://nodejs.org/ 3. Create '$HOME/npm' folder 4. Open node command prompt and run 'npm install -g bower grunt-cli' 5. Install Ruby: http://rubyinstaller.org/ 6. Open ruby command prompt and run 'gem install compass' 7. Start Git bash 8. Type: 'git clone https://github.com/NLeSC/PattyVis' 9. Type: 'cd PattyVis' 10. Type: 'npm install -g grunt grunt-cli' 11. Type: 'npm install' 12. Type: 'bower install' 13. Type: 'bower update' 14. Type: 'grunt serve' 15. Open browser, go to 'http://localhost:9000'"",
    ""author"": [
        {
            ""name"": ""maartenvm"",
            ""email"": ""m.vanmeersbergen@esciencecenter.nl""
        },
        {
            ""name"": ""sverhoeven"",
            ""email"": ""s.verhoeven@esciencecenter.nl""
        },
        {
            ""name"": ""mkuzak"",
            ""email"": ""mateusz.kuzak@gmail.com""
        },
        {
            ""name"": ""jvdzwaan""
        },
        {
            ""name"": ""egpbos""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.45923"",
    ""license"": ""Apache 2.0"",
    ""keywords"": [
        ""Webgl"",
        ""Pointcloud"",
        ""Visualization"",
        ""GIS"",
        ""Oculus Rift"",
        ""3D Footprints"",
        ""GPS Coordinates"",
        ""Drive-Map Technology"",
        ""Historical Maps"",
        ""Measurements"",
        ""Angular"",
        ""OpenLayers"",
        ""Three.js"",
        ""Potree"",
        ""Bluebird"",
        ""Angular Bootstrap"",
        ""OL Layerswitcher"",
        ""3DHOP""
    ]
}","{
    ""softwareRequirements"": [
        ""angular: ^1.3.0"",
        ""json3: ^3.3.0"",
        ""es5-shim: ^4.0.0"",
        ""bootstrap-sass-official: ^3.2.0"",
        ""angular-animate: 1.3.0"",
        ""angular-cookies: 1.3.0"",
        ""angular-resource: 1.3.0"",
        ""angular-route: 1.3.0"",
        ""angular-sanitize: 1.3.0"",
        ""angular-touch: 1.3.0"",
        ""openlayers3: https://github.com/openlayers/ol3/releases/download/v3.3.0/v3.3.0.zip"",
        ""proj4: ~2.3.3"",
        ""threejs: r69"",
        ""OrbitControls: https://raw.github.com/mrdoob/three.js/r69/examples/js/controls/OrbitControls.js"",
        ""OBJLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJLoader.js"",
        ""DDSLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/DDSLoader.js"",
        ""MTLLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/MTLLoader.js"",
        ""OBJMTLLoader: https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJMTLLoader.js"",
        ""potree: https://github.com/potree/potree/archive/1.2.zip"",
        ""bluebird: 1.0.8"",
        ""angular-bootstrap: 0.12.0"",
        ""ol-layerswitcher: ~1.0.1"",
        ""3dhop: 3DHOP/3DHOP#3.0""
    ],
    ""buildInstructions"": ""1. Install Git: http://git-scm.com/downloads 2. Install Node.js: http://nodejs.org/ 3. Create '$HOME/npm' folder 4. Open node command prompt and run 'npm install -g bower grunt-cli' 5. Install Ruby: http://rubyinstaller.org/ 6. Open ruby command prompt and run 'gem install compass' 7. Start Git bash 8. Type: 'git clone https://github.com/NLeSC/PattyVis' 9. Type: 'cd PattyVis' 10. Type: 'npm install -g grunt grunt-cli' 11. Type: 'npm install' 12. Type: 'bower install' 13. Type: 'bower update' 14. Type: 'grunt serve' 15. Open browser, go to 'http://localhost:9000'"",
    ""author"": [
        {
            ""name"": ""maartenvm"",
            ""email"": ""m.vanmeersbergen@esciencecenter.nl""
        },
        {
            ""name"": ""sverhoeven"",
            ""email"": ""s.verhoeven@esciencecenter.nl""
        },
        {
            ""name"": ""mkuzak"",
            ""email"": ""mateusz.kuzak@gmail.com""
        },
        {
            ""name"": ""jvdzwaan""
        },
        {
            ""name"": ""egpbos""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.45923"",
    ""license"": ""Apache 2.0"",
    ""keywords"": [
        ""Webgl"",
        ""Pointcloud"",
        ""Visualization"",
        ""GIS"",
        ""Oculus Rift"",
        ""3D Footprints"",
        ""GPS Coordinates"",
        ""Drive-Map Technology"",
        ""Historical Maps"",
        ""Measurements"",
        ""Angular"",
        ""OpenLayers"",
        ""Three.js"",
        ""Potree"",
        ""Bluebird"",
        ""Angular Bootstrap"",
        ""OL Layerswitcher"",
        ""3DHOP""
    ]
}","{
    ""softwareRequirements"": [
        ""angular:1.3.0"",
        ""json3:^3.3.0"",
        ""es5-shim:^4.0.0"",
        ""bootstrap-sass-official:^3.2.0"",
        ""angular-animate:1.3.0"",
        ""angular-cookies:1.3.0"",
        ""angular-resource:1.3.0"",
        ""angular-route:1.3.0"",
        ""angular-sanitize:1.3.0"",
        ""angular-touch:1.3.0"",
        ""openlayers3:https://github.com/openlayers/ol3/releases/download/v3.3.0/v3.3.0.zip"",
        ""proj4:~2.3.3"",
        ""threejs:r69"",
        ""OrbitControls:https://raw.github.com/mrdoob/three.js/r69/examples/js/controls/OrbitControls.js"",
        ""OBJLoader:https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJLoader.js"",
        ""DDSLoader:https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/DDSLoader.js"",
        ""MTLLoader:https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/MTLLoader.js"",
        ""OBJMTLLoader:https://raw.github.com/mrdoob/three.js/r69/examples/js/loaders/OBJMTLLoader.js"",
        ""potree:https://github.com/potree/potree/archive/1.2.zip"",
        ""bluebird:1.0.8"",
        ""angular-bootstrap:0.12.0"",
        ""ol-layerswitcher:~1.0.1"",
        ""3dhop:3DHOP/3DHOP#3.0""
    ],
    ""buildInstructions"": ""```\nInstallation\n------------\n\n### Install nodejs\n\nFollow instructions at joyents github website:\nhttps://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#debian-and-ubuntu-based-linux-distributions\n\n### Install nodejs modules\nInstall bower, karma-cli and grunt-cli globally\n```\nsudo npm install -g bower grunt-cli karma-cli\n\n```\n\n### Install compass\n\nCompass is used to convert the sass 2 css.\n\n1. Install Ruby using https://www.ruby-lang.org/en/documentation/installation/#apt\n2. Install Ruby dev and other dependecy packages\n```\nsudo apt-get install ruby-dev libffi-dev\n```\n3. Install compass (for sass compilation)\n```\ngem install compass\n```\n\n### Fetch git repository\n```\ngit clone https://github.com/NLeSC/PattyVis\n```\n\n### setup with bower\n```\ncd PattyVis\nnpm install\nbower install\n```\nIf you already have a installed the bower packages before, but need to update them for a new version of the code, run\n```\nbower update\n```\n\n### start development server & open browser\n```\ngrunt serve\n```\nChanges made to code will automatically reload web page.\n\n\n```"",
    ""author"": [
        ""maartenvm <m.vanmeersbergen@esciencecenter.nl>"",
        ""sverhoeven <s.verhoeven@esciencecenter.nl>"",
        ""mkuzak <mateusz.kuzak@gmail.com>"",
        ""jvdzwaan"",
        ""egpbos""
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.45923""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": []
}","{
  ""softwareRequirements"": [
    ""1. nodejs, http://nodejs.org/\n2. bower, http://bower.io\n3. compass, http://compass-style.org\n4. Java Development Kit, https://www.java.com/\n5. PhantomJS v1 https://bitbucket.org/ariya/phantomjs/downloads/\n""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/NLeSC/pattyvis/master/README.md"",
    ""https://github.com/NLeSC/pattyvis/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""identifier"": ""http://dx.doi.org/10.5281/zenodo.45923"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/pattyvis/master/LICENSE""
  },
  ""keywords"": """",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/NLeSC/pattyvis/master/LICENSE""
  },
  ""codeRepository"": ""https://github.com/NLeSC/PattyVis"",
  ""issueTracker"": ""https://github.com/NLeSC/PattyVis/issues"",
  ""dateCreated"": ""2014-08-13"",
  ""dateModified"": ""2022-11-07"",
  ""downloadUrl"": ""https://github.com/NLeSC/pattyvis/releases"",
  ""name"": ""PattyVis"",
  ""logo"": ""https://raw.githubusercontent.com/NLeSC/pattyvis/master/DOCS/pattyvis_fp_ss4.png"",
  ""keywords"": """",
  ""programmingLanguage"": [
    ""JavaScript"",
    ""HTML"",
    ""CSS""
  ],
  ""softwareRequirements"": [
    ""1. nodejs, http://nodejs.org/\n2. bower, http://bower.io\n3. compass, http://compass-style.org\n4. Java Development Kit, https://www.java.com/\n5. PhantomJS v1 https://bitbucket.org/ariya/phantomjs/downloads/\n""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/NLeSC/pattyvis/master/README.md"",
    ""https://github.com/NLeSC/pattyvis/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/NLeSC""
    }
  ],
  ""identifier"": ""http://dx.doi.org/10.5281/zenodo.45923"",
  ""readme"": ""https://raw.githubusercontent.com/NLeSC/pattyvis/master/README.md"",
  ""description"": [
    ""Webgl pointcloud visualization of the Via Appia based on potree"",
    ""In db run:\n\n    SELECT site_id, ST_ASGEOJSON(geom, 15,5) FROM sites_geoms WHERE site_id IN (162,13);\n\nTo get geometry, bbox and crs.\n\nHeight and properties need to be filled manually.\n"",
    ""A big step towards a 3D GIS Application.  \n![logo](DOCS/pattyvis_fp_ss2.png \""A big step towards a 3D GIS Application\"")\nWith 3D footprints of grave monuments based on GPS coordinates.  \n![logo](DOCS/pattyvis_fp_ss1.png \""With 3D footprints based on GPS coordinates\"")\nA 'background' or reference frame was made with Fugro's drive-map technology http://www.drive-map.eu/  \n![logo](DOCS/pattyvis_fp_ss9.png \""The drive map visualized\"")\nSeveral monuments have been photographed extensively and made into seperate pointclouds. This is an ongoing process.  \n![logo](DOCS/pattyvis_fp_ss5.png \""Here you can see the drive-map and the site-specific photography based pointcloud next to eachother\"")\n![logo](DOCS/pattyvis_fp_ss3.png \""A particularly well-captured monument.\"")\nMeasurements can be made in the 3D environment.  \n![logo](DOCS/pattyvis_fp_ss8.png \""Measurements can be made in the 3D environment.\"")\nHistorical maps can give extra information on the site's history.  \n![logo](DOCS/pattyvis_fp_ss6.png \""Historical maps can give extra information on the site's history.\"")\nSearching options like the material used in the site can give extra insight.  \n![logo](DOCS/pattyvis_fp_ss7.png \""Historical maps can give extra information on the site's history.\"") \n"",
    ""Get the host application and run it: https://github.com/Instrument/oculus-bridge\n \n"",
    ""For mockup see https://wiki.esciencecenter.nl/index.php/Patty_Visualization\n \n""
  ]
}"
https://github.com/matchms/ms2deepscore,"![GitHub](https://img.shields.io/github/license/matchms/ms2deepscore) [![PyPI](https://img.shields.io/pypi/v/ms2deepscore?color=teal)](https://pypi.org/project/ms2deepscore/) ![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/matchms/ms2deepscore/CI_build.yml?branch=main) [![SonarCloud Quality Gate](https://sonarcloud.io/api/project_badges/measure?project=matchms_ms2deepscore&metric=alert_status)](https://sonarcloud.io/dashboard?id=matchms_ms2deepscore) [![SonarCloud Coverage](https://sonarcloud.io/api/project_badges/measure?project=matchms_ms2deepscore&metric=coverage)](https://sonarcloud.io/component_measures?id=matchms_ms2deepscore&metric=Coverage&view=list) [![DOI](https://zenodo.org/badge/310047938.svg)](https://zenodo.org/badge/latestdoi/310047938) [![fair-software.eu](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8B-yellow)](https://fair-software.eu) <img src=""https://github.com/matchms/ms2deepscore/blob/main/materials/ms2deepscore_logo.png"" width=""400""> # ms2deepscore `ms2deepscore` provides a Siamese neural network that is trained to predict molecular structural similarities (Tanimoto scores) from pairs of mass spectrometry spectra. The library provides an intuitive classes to prepare data, train a siamese model, and compute similarities between pairs of spectra. In addition to the prediction of a structural similarity, MS2DeepScore can also make use of Monte-Carlo dropout to assess the model uncertainty. ## Reference If you use MS2DeepScore for your research, please cite the following: **""MS2DeepScore - a novel deep learning similarity measure to compare tandem mass spectra""** Florian Huber, Sven van der Burg, Justin J.J. van der Hooft, Lars Ridder, 13, Article number: 84 (2021), Journal of Cheminformatics, doi: https://doi.org/10.1186/s13321-021-00558-4 If you use MS2Deepscore 2.0 or higher please also cite: **Reliable cross-ion mode chemical similarity prediction between MS2 spectra** Niek de Jonge, David Joas, Lem-Joe Truong, Justin J.J. van der Hooft, Florian Huber bioRxiv 2024.03.25.586580; doi: https://doi.org/10.1101/2024.03.25.586580 ## Setup ### Requirements Python 3.9, 3.10, 3.11 (higher will likely work but is not tested systematically). ### Installation Installation is expected to take 10-20 minutes. ### Prepare environment We recommend to create an Anaconda environment with ``` conda create --name ms2deepscore python=3.9 conda activate ms2deepscore pip install ms2deepscore ``` Or, via conda: ``` conda create --name ms2deepscore python=3.9 conda activate ms2deepscore conda install --channel bioconda --channel conda-forge matchms pip install ms2deepscore ``` Alternatively, simply install in the environment of your choice by `pip install ms2deepscore` ## Getting started: How to prepare data, train a model, and compute similarities. We recommend to run the complete tutorial in [notebooks/MS2DeepScore_tutorial.ipynb](https://github.com/matchms/ms2deepscore/blob/main/notebooks/MS2DeepScore_tutorial.ipynb) for a more extensive fully-working example on test data. The expected run time on a laptop is less than 5 minutes, including automatic model and dummy data download. Alternatively there are some example scripts below. If you are not familiar with `matchms` yet, then we also recommand our [tutorial on how to get started using matchms](https://blog.esciencecenter.nl/build-your-own-mass-spectrometry-analysis-pipeline-in-python-using-matchms-part-i-d96c718c68ee). ## 1) Compute spectral similarities We provide a model which was trained on > 500,000 MS/MS combined spectra from [GNPS](https://gnps.ucsd.edu/), [Mona](https://mona.fiehnlab.ucdavis.edu/), MassBank and MSnLib. This model can be downloaded from [from zenodo here](https://zenodo.org/records/13897744). Only the ms2deepscore_model.pt is needed. The model works for spectra in both positive and negative ionization modes and even predictions across ionization modes can be made by this model. To compute the similarities between spectra of your choice you can run the code below. There is a small example dataset available in the folder ""./tests/resources/pesticides_processed.mgf"". Alternatively you can of course use your own spectra, most common formats are supported, e.g. msp, mzml, mgf, mzxml, json, usi. ```python from ms2deepscore.models import load_model from matchms.Pipeline import Pipeline, create_workflow from matchms.filtering.default_pipelines import DEFAULT_FILTERS from ms2deepscore import MS2DeepScore model_file_name = ""ms2deepscore_model.pt"" spectrum_file_name = ""pesticides.mgf"" # load in the ms2deepscore model model = load_model(model_file_name) pipeline = Pipeline(create_workflow(query_filters=DEFAULT_FILTERS, score_computations=[[MS2DeepScore, {""model"": model}]])) report = pipeline.run(spectrum_file_name) similarity_matrix = pipeline.scores.to_array() ``` The resulting similarity matrix, is a numpy array containing all the MS2DeepScore predicitons between all spectra. ## 2 Create embeddings To calculate chemical similarity scores MS2DeepScore first calculates an embedding (vector) representing each spectrum. This intermediate product can also be used to visualize spectra in ""chemical space"" by using a dimensionality reduction technique, like UMAP. ```python cleaned_spectra = pipeline.spectra_queries ms2ds_model = MS2DeepScore(model) ms2ds_embeddings = ms2ds_model.get_embedding_array(cleaned_spectra) ``` The [tutorial](https://github.com/matchms/ms2deepscore/blob/main/notebooks/MS2DeepScore_tutorial.ipynb) shows how to use these embeddings to create an interactive UMAP with overlaying smiles. <img src=""https://github.com/matchms/ms2deepscore/blob/main/materials/umap_example.png"" width=""400""/> ## 3) Train your own MS2DeepScore model Training your own model is only recommended if you have some familiarity with machine learning. You can train a new model on a dataset of your choice. That, however, should preferentially contain a substantial amount of spectra to learn relevant features, say > 100,000 spectra of sufficiently diverse types. Alternatively you can add your in house spectra to an already available public library, for instance the [data](https://zenodo.org/records/13934470) used for training the default MS2DeepScore model. To train your own model you can run the code below. Please first ensure cleaning your spectra. We recommend using the cleaning pipeline in [matchms](https://github.com/matchms/matchms). ```python from ms2deepscore import SettingsMS2Deepscore from ms2deepscore.wrapper_functions.training_wrapper_functions import train_ms2deepscore_wrapper spectrum_file = ""./combined_libraries.mgf"" # The settins below use default training settings and use precursor mz and ionmode as additional metadata input. # Have a look in the SettingsMS2Deepscore class to check other hyperparameters. settings = SettingsMS2Deepscore( additional_metadata=[(""CategoricalToBinary"", {""metadata_field"": ""ionmode"", ""entries_becoming_one"": ""positive"", ""entries_becoming_zero"": ""negative""}), (""StandardScaler"", {""metadata_field"": ""precursor_mz"", ""mean"": 0, ""standard_deviation"": 1000})],) train_ms2deepscore_wrapper(spectrum_file, settings, validation_split_fraction=20) ``` ## Contributing We welcome contributions to the development of ms2deepscore! Have a look at the [contribution guidelines](https://github.com/matchms/ms2deepscore/blob/main/CONTRIBUTING.md). #!/usr/bin/env python import os from setuptools import find_packages, setup here = os.path.abspath(os.path.dirname(__file__)) version = {} with open(os.path.join(here, ""ms2deepscore"", ""__version__.py"")) as f: exec(f.read(), version) with open(""README.md"") as readme_file: readme = readme_file.read() setup( name=""ms2deepscore"", version=version[""__version__""], description=""Deep learning similarity measure for comparing MS/MS spectra."", long_description=readme, long_description_content_type='text/markdown', author=""Florian Huber (as part of the ms2deepscore developer team)"", author_email=""florian.huber@hs-duesseldorf.de"", url=""https://github.com/iomega/ms2deepscore"", packages=find_packages(), include_package_data=True, license=""Apache Software License 2.0"", zip_safe=False, test_suite=""tests"", python_requires='>=3.9', install_requires=[ ""matchms>=0.18.0"", ""numba"", ""numpy>=1.20.3,<2.0"", ""pandas"", ""scikit-learn"", ""tensorboard"", ""torch<2.6"", ""torchvision"", ""tqdm"", ""matplotlib==3.7.2"" ], extras_require={""train"": [""rdkit""], ""dev"": [""bump2version"", ""isort>=4.2.5,<5"", ""ruff"", ""pytest"", ""pytest-cov"", ""sphinx>=3.0.0,!=3.2.0,<4.0.0"", ""sphinx_rtd_theme"", ""sphinxcontrib-apidoc"", ""yapf"",], } ) Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""[]"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. # YAML 1.2 --- abstract: ""Deep learning similarity measure for comparing MS/MS spectra with respect to their chemical similarity."" authors: - affiliation: ""University of Applied Sciences Düsseldorf"" family-names: Huber given-names: Florian orcid: https://orcid.org/0000-0002-3535-9406 - affiliation: ""Netherlands eScience Center"" family-names: ""van der Burg"" given-names: Sven orcid: https://orcid.org/0000-0003-1250-6968 - affiliation: ""Wageningen University and Research"" family-names: Hooft name-particle: ""van der"" given-names: ""Justin J. J."" orcid: https://orcid.org/0000-0002-9340-5511 - affiliation: ""Netherlands eScience Center"" family-names: Ridder given-names: Lars orcid: https://orcid.org/0000-0002-7635-9533 - affiliation: ""University of Applied Sciences Düsseldorf"" family-names: Joas given-names: David orcid: https://orcid.org/0000-0001-9567-2157 - affiliation: ""Netherlands eScience Center"" family-names: de Jonge given-names: Niek orcid: ""https://orcid.org/0000-0002-3054-6210"" cff-version: 1.2.0 license: ""Apache-2.0"" message: ""If you use this software, please cite it using these metadata."" repository-code: ""https://github.com/matchms/ms2deepscore"" title: MS2DeepScore","{
    ""softwareRequirements"": [
        ""matchms: >=0.18.0"",
        ""numba"",
        ""numpy: >=1.20.3,<2.0"",
        ""pandas"",
        ""scikit-learn"",
        ""tensorboard"",
        ""torch: <2.6"",
        ""torchvision"",
        ""tqdm"",
        ""matplotlib: ==3.7.2"",
        ""rdkit""
    ],
    ""buildInstructions"": ""1. Create an Anaconda environment with 'conda create --name ms2deepscore python=3.9' and activate it with 'conda activate ms2deepscore'. 2. Install ms2deepscore with 'pip install ms2deepscore'. 3. Alternatively, install via conda with 'conda create --name ms2deepscore python=3.9' and 'conda install --channel bioconda --channel conda-forge matchms' followed by 'pip install ms2deepscore'."",
    ""author"": [
        {
            ""name"": ""Florian Huber"",
            ""affiliation"": ""University of Applied Sciences Düsseldorf"",
            ""orcid"": ""https://orcid.org/0000-0002-3535-9406""
        },
        {
            ""name"": ""Sven van der Burg"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-1250-6968""
        },
        {
            ""name"": ""Justin J.J. van der Hooft"",
            ""affiliation"": ""Wageningen University and Research"",
            ""orcid"": ""https://orcid.org/0000-0002-9340-5511""
        },
        {
            ""name"": ""Lars Ridder"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7635-9533""
        },
        {
            ""name"": ""David Joas"",
            ""affiliation"": ""University of Applied Sciences Düsseldorf"",
            ""orcid"": ""https://orcid.org/0000-0001-9567-2157""
        },
        {
            ""name"": ""Niek de Jonge"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-3054-6210""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""https://doi.org/10.1186/s13321-021-00558-4, https://doi.org/10.1101/2024.03.25.586580"",
    ""license"": ""Apache Software License 2.0"",
    ""keywords"": [
        ""Deep Learning"",
        ""Mass Spectrometry"",
        ""Chemical Similarity"",
        ""Siamese Neural Network"",
        ""Monte-Carlo Dropout"",
        ""Tanimoto Scores""
    ]
}","{
    ""softwareRequirements"": [
        ""matchms: >=0.18.0"",
        ""numba"",
        ""numpy: >=1.20.3,<2.0"",
        ""pandas"",
        ""scikit-learn"",
        ""tensorboard"",
        ""torch: <2.6"",
        ""torchvision"",
        ""tqdm"",
        ""matplotlib: ==3.7.2"",
        ""rdkit""
    ],
    ""buildInstructions"": ""1. Create an Anaconda environment with 'conda create --name ms2deepscore python=3.9' and activate it with 'conda activate ms2deepscore'. 2. Install ms2deepscore with 'pip install ms2deepscore'. 3. Alternatively, install via conda with 'conda create --name ms2deepscore python=3.9' and 'conda install --channel bioconda --channel conda-forge matchms' followed by 'pip install ms2deepscore'."",
    ""author"": [
        {
            ""name"": ""Florian Huber"",
            ""affiliation"": ""University of Applied Sciences Düsseldorf"",
            ""orcid"": ""https://orcid.org/0000-0002-3535-9406""
        },
        {
            ""name"": ""Sven van der Burg"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0003-1250-6968""
        },
        {
            ""name"": ""Justin J.J. van der Hooft"",
            ""affiliation"": ""Wageningen University and Research"",
            ""orcid"": ""https://orcid.org/0000-0002-9340-5511""
        },
        {
            ""name"": ""Lars Ridder"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-7635-9533""
        },
        {
            ""name"": ""David Joas"",
            ""affiliation"": ""University of Applied Sciences Düsseldorf"",
            ""orcid"": ""https://orcid.org/0000-0001-9567-2157""
        },
        {
            ""name"": ""Niek de Jonge"",
            ""affiliation"": ""Netherlands eScience Center"",
            ""orcid"": ""https://orcid.org/0000-0002-3054-6210""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""https://doi.org/10.1186/s13321-021-00558-4, https://doi.org/10.1101/2024.03.25.586580"",
    ""license"": ""Apache Software License 2.0"",
    ""keywords"": [
        ""Deep Learning"",
        ""Mass Spectrometry"",
        ""Chemical Similarity"",
        ""Siamese Neural Network"",
        ""Monte-Carlo Dropout"",
        ""Tanimoto Scores""
    ]
}","{
    ""softwareRequirements"": [
        ""matchms>=0.18.0"",
        ""numba"",
        ""numpy>=1.20.3,<2.0"",
        ""pandas"",
        ""scikit-learn"",
        ""tensorboard"",
        ""torch<2.6"",
        ""torchvision"",
        ""tqdm"",
        ""matplotlib==3.7.2""
    ],
    ""buildInstructions"": ""Installation is expected to take 10-20 minutes.\nPrepare environment\nWe recommend to create an Anaconda environment with\n\n```\nconda create --name ms2deepscore python=3.9\nconda activate ms2deepscore\npip install ms2deepscore\n\n```\n\nOr, via conda:\n\n```\nconda create --name ms2deepscore python=3.9\nconda activate ms2deepscore\nconda install --channel bioconda --channel conda-forge matchms\npip install ms2deepscore\n\n```\n\nAlternatively, simply install in the environment of your choice by `pip install ms2deepscore`"",
    ""author"": [
        {
            ""affiliation"": ""University of Applied Sciences Düsseldorf"",
            ""family-names"": ""Huber"",
            ""given-names"": ""Florian"",
            ""orcid"": ""https://orcid.org/0000-0002-3535-9406""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""van der Burg"",
            ""given-names"": ""Sven"",
            ""orcid"": ""https://orcid.org/0000-0003-1250-6968""
        },
        {
            ""affiliation"": ""Wageningen University and Research"",
            ""family-names"": ""Hooft"",
            ""name-particle"": ""van der"",
            ""given-names"": ""Justin J. J."",
            ""orcid"": ""https://orcid.org/0000-0002-9340-5511""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""Ridder"",
            ""given-names"": ""Lars"",
            ""orcid"": ""https://orcid.org/0000-0002-7635-9533""
        },
        {
            ""affiliation"": ""University of Applied Sciences Düsseldorf"",
            ""family-names"": ""Joas"",
            ""given-names"": ""David"",
            ""orcid"": ""https://orcid.org/0000-0001-9567-2157""
        },
        {
            ""affiliation"": ""Netherlands eScience Center"",
            ""family-names"": ""de Jonge"",
            ""given-names"": ""Niek"",
            ""orcid"": ""https://orcid.org/0000-0002-3054-6210""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""https://doi.org/10.1186/s13321-021-00558-4"",
        ""https://doi.org/10.1101/2024.03.25.586580""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""similarity measures"",
        ""mass spectrometry"",
        ""deep learning"",
        ""siamese network""
    ]
}","{
  ""softwareRequirements"": [
    ""Python 3.9, 3.10, 3.11 (higher will likely work but is not tested systematically).\n""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/matchms""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/CITATION.cff""
  ],
  ""identifier"": ""https://zenodo.org/badge/latestdoi/310047938"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/LICENSE""
  },
  ""keywords"": """",
}","{
  ""@context"": ""https://doi.org/10.5063/schema/codemeta-2.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/LICENSE""
  },
  ""codeRepository"": ""https://github.com/matchms/ms2deepscore"",
  ""issueTracker"": ""https://github.com/matchms/ms2deepscore/issues"",
  ""dateCreated"": ""2020-11-04"",
  ""dateModified"": ""2025-03-04"",
  ""downloadUrl"": ""https://github.com/matchms/ms2deepscore/releases"",
  ""name"": ""ms2deepscore"",
  ""logo"": ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/materials/ms2deepscore_logo.png"",
  ""keywords"": """",
  ""programmingLanguage"": [
    ""Jupyter Notebook"",
    ""Python""
  ],
  ""softwareRequirements"": [
    ""Python 3.9, 3.10, 3.11 (higher will likely work but is not tested systematically).\n""
  ],
  ""buildInstructions"": [
    ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/README.md""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/matchms""
    }
  ],
  ""citation"": [
    ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/CITATION.cff""
  ],
  ""identifier"": ""https://zenodo.org/badge/latestdoi/310047938"",
  ""readme"": ""https://raw.githubusercontent.com/matchms/ms2deepscore/main/README.md"",
  ""description"": [
    ""Deep learning similarity measure for comparing MS/MS spectra with respect to their chemical similarity"",
    ""Training your own model is only recommended if you have some familiarity with machine learning. \nYou can train a new model on a dataset of your choice. That, however, should preferentially contain a substantial amount of spectra to learn relevant features, say > 100,000 spectra of sufficiently diverse types.\nAlternatively you can add your in house spectra to an already available public library, for instance the [data](https://zenodo.org/records/13934470) used for training the default MS2DeepScore model. \nTo train your own model you can run the code below.\nPlease first ensure cleaning your spectra. We recommend using the cleaning pipeline in [matchms](https://github.com/matchms/matchms).\n```python\nfrom ms2deepscore import SettingsMS2Deepscore\nfrom ms2deepscore.wrapper_functions.training_wrapper_functions import train_ms2deepscore_wrapper\n\nspectrum_file = \""./combined_libraries.mgf\""\n# The settins below use default training settings and use precursor mz and ionmode as additional metadata input. \n# Have a look in the SettingsMS2Deepscore class to check other hyperparameters.\nsettings = SettingsMS2Deepscore(\n    additional_metadata=[(\""CategoricalToBinary\"", {\""metadata_field\"": \""ionmode\"",\n                                                  \""entries_becoming_one\"": \""positive\"",\n                                                  \""entries_becoming_zero\"": \""negative\""}),\n                         (\""StandardScaler\"", {\""metadata_field\"": \""precursor_mz\"", \n                                             \""mean\"": 0, \""standard_deviation\"": 1000})],)\n\ntrain_ms2deepscore_wrapper(spectrum_file, settings, validation_split_fraction=20)\n```\n \n"",
    ""`ms2deepscore` provides a Siamese neural network that is trained to predict molecular structural similarities (Tanimoto scores) \nfrom pairs of mass spectrometry spectra.  \nThe library provides an intuitive classes to prepare data, train a siamese model,\nand compute similarities between pairs of spectra. \nIn addition to the prediction of a structural similarity, \nMS2DeepScore can also make use of Monte-Carlo dropout to assess the model uncertainty.\n \n"",
    ""We provide a model which was trained on > 500,000 MS/MS combined spectra from [GNPS](https://gnps.ucsd.edu/), [Mona](https://mona.fiehnlab.ucdavis.edu/), MassBank and MSnLib. \nThis model can be downloaded from [from zenodo here](https://zenodo.org/records/13897744). Only the ms2deepscore_model.pt is needed.\nThe model works for spectra in both positive and negative ionization modes and even predictions across ionization modes can be made by this model.  \nTo compute the similarities between spectra of your choice you can run the code below.\nThere is a small example dataset available in the folder \""./tests/resources/pesticides_processed.mgf\"". \nAlternatively you can of course use your own spectra, most common formats are supported, e.g. msp, mzml, mgf, mzxml, json, usi.\n```python\nfrom ms2deepscore.models import load_model\nfrom matchms.Pipeline import Pipeline, create_workflow\nfrom matchms.filtering.default_pipelines import DEFAULT_FILTERS\nfrom ms2deepscore import MS2DeepScore\n\nmodel_file_name = \""ms2deepscore_model.pt\""\nspectrum_file_name = \""pesticides.mgf\""\n\n# load in the ms2deepscore model\nmodel = load_model(model_file_name)\n\npipeline = Pipeline(create_workflow(query_filters=DEFAULT_FILTERS,\n                                    score_computations=[[MS2DeepScore, {\""model\"": model}]]))\nreport = pipeline.run(spectrum_file_name)\nsimilarity_matrix = pipeline.scores.to_array()\n```\nThe resulting similarity matrix, is a numpy array containing all the MS2DeepScore predicitons between all spectra. \n"",
    ""To calculate chemical similarity scores MS2DeepScore first calculates an embedding (vector) representing each spectrum. \nThis intermediate product can also be used to visualize spectra in \""chemical space\"" by using a dimensionality reduction technique, like UMAP.\n```python\ncleaned_spectra = pipeline.spectra_queries\n\nms2ds_model = MS2DeepScore(model)\nms2ds_embeddings = ms2ds_model.get_embedding_array(cleaned_spectra)\n```\nThe [tutorial](https://github.com/matchms/ms2deepscore/blob/main/notebooks/MS2DeepScore_tutorial.ipynb) shows how to use these embeddings to create an interactive UMAP with overlaying smiles.\n<img src=\""https://github.com/matchms/ms2deepscore/blob/main/materials/umap_example.png\"" width=\""400\""/>\n \n""
  ]
}"
https://github.com/WDscholia/scholia,"|logo| |website| |gitpod| |github| |issues| |license| |docs| .. |logo| image:: scholia/app/static/images/scholia_logo.svg :width: 10% :alt: Scholia .. |website| image:: https://img.shields.io/website-up-down-green-red/http/scholia.toolforge.org.svg :target: https://scholia.toolforge.org/ :alt: Website .. |gitpod| image:: https://img.shields.io/badge/Gitpod-Open%20in%20Gitpod-%230092CF.svg :target: https://gitpod.io/#https://github.com/WDscholia/scholia :alt: Gitpod .. |github| image:: https://img.shields.io/github/last-commit/WDscholia/scholia.svg :target: https://github.com/WDscholia/scholia :alt: Github last commit .. |issues| image:: https://img.shields.io/github/issues/WDScholia/scholia.svg :target: https://github.com/WDscholia/scholia/issues :alt: GitHub issues .. |licence| image:: https://img.shields.io/badge/License-GPLv3-blue.svg :target: https://github.com/WDscholia/scholia/blob/master/LICENSE :alt: License .. |docs| image:: https://readthedocs.org/projects/scholia/badge/?version=latest :target: https://scholia.readthedocs.io/en/latest/?badge=latest :alt: Documentation Status ======= Scholia is a python package and webapp for interaction with scholarly information in Wikidata_. Installation ------------ Scholia can be installed directly from GitHub with: .. code-block:: shell $ python3 -m pip install git+https://github.com/WDscholia/scholia It can be installed in development mode with: .. code-block:: shell $ git clone https://github.com/WDscholia/scholia $ cd scholia $ pip install --editable . Webapp ------ As a webapp, it currently runs from `Wikimedia Toolforge`_, a facility provided by the `Wikimedia Foundation`_. It is accessible from https://scholia.toolforge.org/ The webapp displays scholarly profiles for individual researchers, research topics, organizations, journals, works, events, awards and so on. For instance, the scholarly profile for psychologist Uta Frith is accessible from https://scholia.toolforge.org/author/Q8219 The information displayed on the page is only what is available in Wikidata. Run locally after installing with ``pip``: .. code-block:: sh $ scholia run Script ------ It is possible to use methods of the scholia package as a script: .. code-block:: sh $ python -m scholia.query twitter-to-q fnielsen Q20980928 Contributing ------------ A simple way to get up and running is to `launch Scholia via Gitpod`_, which installs the dependencies listed in `requirements.txt`_ automatically and launches the web app via `runserver.py`_. See file `CONTRIBUTING.rst`_ for technical details on how to improve Scholia. .. _Wikidata: https://www.wikidata.org .. _Wikimedia Foundation: https://wikimediafoundation.org .. _Wikimedia Toolforge: https://toolforge.org/ .. _launch Scholia via Gitpod: https://gitpod.io/#https://github.com/WDscholia/scholia .. _CONTRIBUTING.rst: https://github.com/WDscholia/scholia/blob/master/CONTRIBUTING.rst .. _requirements.txt: https://github.com/WDscholia/scholia/blob/master/requirements.txt .. _runserver.py: https://github.com/WDscholia/scholia/blob/master/runserver.py References ---------- - Scholia's page about itself: https://scholia.toolforge.org/topic/Q45340488 - Wikidata overview page about Scholia: https://www.wikidata.org/wiki/Wikidata:Scholia - Lane Rasberry, Egon Willighagen, Finn Nielsen, Daniel Mietchen, ""Robustifying Scholia: paving the way for knowledge discovery and research assessment through Wikidata. Research Ideas and Outcomes"", 2019, RIO Journal, 5: e35820. https://doi.org/10.3897/rio.5.e35820 - Finn Årup Nielsen, Daniel Mietchen, Egon Willighagen, ""Scholia and scientometrics with Wikidata"", Joint Proceedings of the 1st International Workshop on Scientometrics and 1st International Workshop on Enabling Decentralised Scholarly Communication, 2017. http://ceur-ws.org/Vol-1878/article-03.pdf - Finn Årup Nielsen, Daniel Mietchen, Egon Willighagen, ""Scholia, Scientometrics and Wikidata"", The Semantic Web: ESWC 2017 Satellite Events, 2017. DOI: `10.1007/978-3-319-70407-4_36 <https://doi.org/10.1007/978-3-319-70407-4_36>`_. https://link.springer.com/content/pdf/10.1007%2F978-3-319-70407-4_36.pdf python-dateutil docopt Flask>=3.0.0 Flask-Bootstrap lxml>=4.6.5 requests>=2.32.2 werkzeug>=3.0.6 urllib3>=1.26.19 certifi>=2022.12.7 feedparser Jinja2>=3.1.4 zipp>=3.19.1 # not directly required, pinned by Snyk to avoid a vulnerability import os from setuptools import setup, find_packages import versioneer filename = os.path.join(os.path.dirname(__file__), 'requirements.txt') requirements = open(filename).read().splitlines() setup( name='scholia', author='Finn Aarup Nielsen', author_email='faan@dtu.dk', cmdclass=versioneer.get_cmdclass(), description='Scholia - Wikidata-based scholarly profiles', license='GPL', keywords='wikidata', url='https://github.com/WDscholia/scholia', packages=find_packages(), package_data={ ""scholia"": [ ""data/*"", ""app/templates/*"", ""app/static/*"", ""app/static/css/*"", ""app/static/favicon/*"", ""app/static/fonts/*"", ""app/static/images/*"", ""app/static/js/*"", ""app/static/widgets/select2/css/*"", ""app/static/widgets/select2/js/*"" ] }, install_requires=requirements, long_description='', classifiers=[ 'Programming Language :: Python :: 3.9', 'Programming Language :: Python :: 3.8', 'Programming Language :: Python :: 3.7', ], tests_require=['pytest', 'flake8'], version=versioneer.get_version(), entry_points={ ""console_scripts"": [ ""scholia = scholia.__main__:main"", ], }, ) GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this License. Each licensee is addressed as ""you"". ""Licensees"" and ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work. A ""covered work"" means either the unmodified Program or a work based on the Program. To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work for making modifications to it. ""Object code"" means any non-source form of a work. A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to ""keep intact all notices"". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's ""contributor version"". A contributor's ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found. {one line to give the program's name and a brief idea of what it does.} Copyright (C) {year} {name of author} This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: {project} Copyright (C) {year} {fullname} This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an ""about box"". You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>. The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>. @InProceedings{NielsenF2017Scholia, author = {Finn {\AA}rup Nielsen and Daniel Mietchen and Egon Willighagen}, title = {Scholia and scientometrics with Wikidata}, booktitle = {Scientometrics 2017}, year = {2017}, arxiv = {1703.04222}, wikidata = {Q28942417}, pages = {237--259}, month = {November}, doi = {10.1007/978-3-319-70407-4_36}, URL = {https://arxiv.org/pdf/1703.04222}, } cff-version: 1.2.0 message: Please cite the following works when using this software. type: software authors: - family-names: Nielsen given-names: Finn Årup - family-names: Mietchen given-names: Daniel - family-names: Willighagen given-names: Egon doi: 10.5281/ZENODO.2647462 identifiers: - type: doi value: 10.5281/ZENODO.2647462 title: Scholia preferred-citation: authors: - family-names: Nielsen given-names: Finn Årup - family-names: Mietchen given-names: Daniel - family-names: Willighagen given-names: Egon doi: 10.1007/978-3-319-70407-4_36 collection-title: ""The Semantic Web: ESWC 2017 Satellite Events"" conference: name: ESWC 2017 Satellite Events date-start: 2017-05-28 date-end: 2017-06-01 city: Portorož country: SI identifiers: - type: doi value: 10.1007/978-3-319-70407-4_36 - type: url value: http://dx.doi.org/10.1007/978-3-319-70407-4_36 title: Scholia, Scientometrics and Wikidata url: http://dx.doi.org/10.1007/978-3-319-70407-4_36 year: 2017 isbn: '9783319704067' issn: 0302-9743 journal: Lecture Notes in Computer Science publisher: name: Springer International Publishing start: '237' end: '259' type: conference-paper","{
    ""softwareRequirements"": [
        ""python-dateutil"",
        ""docopt"",
        ""Flask"",
        ""Flask-Bootstrap"",
        ""lxml"",
        ""requests"",
        ""werkzeug"",
        ""urllib3"",
        ""certifi"",
        ""feedparser"",
        ""Jinja2"",
        ""zipp""
    ],
    ""buildInstructions"": ""1. Install the package directly from GitHub with: python3 -m pip install git+https://github.com/WDscholia/scholia 2. Install in development mode with: git clone https://github.com/WDscholia/scholia cd scholia pip install --editable . 3. Run the webapp locally after installation with: scholia run"",
    ""author"": [
        {
            ""name"": ""Finn Aarup Nielsen"",
            ""email"": ""faan@dtu.dk""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.1007/978-3-319-70407-4_36"",
    ""license"": ""GPLv3"",
    ""keywords"": [
        ""Wikidata"",
        ""Scholarly Profiles"",
        ""Scientometrics"",
        ""Research Assessment"",
        ""Knowledge Discovery""
    ]
}","{
    ""softwareRequirements"": [
        ""python-dateutil"",
        ""docopt"",
        ""Flask"",
        ""Flask-Bootstrap"",
        ""lxml"",
        ""requests"",
        ""werkzeug"",
        ""urllib3"",
        ""certifi"",
        ""feedparser"",
        ""Jinja2"",
        ""zipp""
    ],
    ""buildInstructions"": ""1. Install the package directly from GitHub with: python3 -m pip install git+https://github.com/WDscholia/scholia 2. Install in development mode with: git clone https://github.com/WDscholia/scholia cd scholia pip install --editable . 3. Run the webapp locally after installation with: scholia run"",
    ""author"": [
        {
            ""name"": ""Finn Aarup Nielsen"",
            ""email"": ""faan@dtu.dk""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.1007/978-3-319-70407-4_36"",
    ""license"": ""GPLv3"",
    ""keywords"": [
        ""Wikidata"",
        ""Scholarly Profiles"",
        ""Scientometrics"",
        ""Research Assessment"",
        ""Knowledge Discovery""
    ]
}","{
    ""softwareRequirements"": [
        ""python-dateutil"",
        ""docopt"",
        ""Flask>=3.0.0"",
        ""Flask-Bootstrap"",
        ""lxml>=4.6.5"",
        ""requests>=2.32.2"",
        ""werkzeug>=3.0.6"",
        ""urllib3>=1.26.19"",
        ""certifi>=2022.12.7"",
        ""feedparser"",
        ""Jinja2>=3.1.4"",
        ""zipp>=3.19.1""
    ],
    ""buildInstructions"": ""Scholia can be installed directly from GitHub with:\n\n```\n$ python3 -m pip install git+https://github.com/WDscholia/scholia\n```\n\nIt can be installed in development mode with:\n\n```\n$ git clone https://github.com/WDscholia/scholia\n$ cd scholia\n$ pip install --editable .\n```"",
    ""author"": [
        {
            ""family-names"": ""Nielsen"",
            ""given-names"": ""Finn Årup""
        },
        {
            ""family-names"": ""Mietchen"",
            ""given-names"": ""Daniel""
        },
        {
            ""family-names"": ""Willighagen"",
            ""given-names"": ""Egon""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.1007/978-3-319-70407-4_36""
    ],
    ""license"": ""GNU GENERAL PUBLIC LICENSE Version 3"",
    ""keywords"": []
}","{
  ""buildInstructions"": [
    ""https://scholia.readthedocs.io/"",
    ""https://raw.githubusercontent.com/WDscholia/scholia/master/README.rst"",
    ""https://github.com/WDscholia/scholia/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/WDscholia""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""The Semantic Web: ESWC 2017 Satellite Events"",
      ""identifier"": ""10.5281/ZENODO.2647462"",
      ""url"": ""https://doi.org/10.5281/ZENODO.2647462"",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Nielsen"",
          ""givenName"": ""Finn Årup""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Mietchen"",
          ""givenName"": ""Daniel""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Willighagen"",
          ""givenName"": ""Egon""
        }
      ],
      ""datePublished"": ""2017""
    }
  ],
  ""license"": {},
  ""keywords"": ""bibliography, bibliometrics, bibtex, citations, code4lib, datacuration, dataviz, fairdata, hacktoberfest, latex, linked-open-data, literature, scientometrics, sparql, wikicite, wikidata"",
}","{
  ""@context"": ""https://w3id.org/codemeta/3.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {},
  ""codeRepository"": ""https://github.com/WDscholia/scholia"",
  ""issueTracker"": ""https://github.com/WDscholia/scholia/issues"",
  ""dateCreated"": ""2016-10-09"",
  ""dateModified"": ""2025-03-19"",
  ""downloadUrl"": ""https://github.com/WDscholia/scholia/releases"",
  ""name"": ""scholia"",
  ""keywords"": ""bibliography, bibliometrics, bibtex, citations, code4lib, datacuration, dataviz, fairdata, hacktoberfest, latex, linked-open-data, literature, scientometrics, sparql, wikicite, wikidata"",
  ""programmingLanguage"": [
    ""JavaScript"",
    ""Python"",
    ""HTML"",
    ""Jupyter Notebook"",
    ""CSS"",
    ""Dockerfile""
  ],
  ""releaseNotes"": ""November 2021 version in relation to the end of the Robustifying Scholia project."",
  ""softwareVersion"": ""v0.3"",
  ""datePublished"": ""2017-03-13"",
  ""buildInstructions"": [
    ""https://scholia.readthedocs.io/"",
    ""https://raw.githubusercontent.com/WDscholia/scholia/master/README.rst"",
    ""https://github.com/WDscholia/scholia/wiki""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/WDscholia""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""The Semantic Web: ESWC 2017 Satellite Events"",
      ""identifier"": ""10.5281/ZENODO.2647462"",
      ""url"": ""https://doi.org/10.5281/ZENODO.2647462"",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Nielsen"",
          ""givenName"": ""Finn Årup""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Mietchen"",
          ""givenName"": ""Daniel""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Willighagen"",
          ""givenName"": ""Egon""
        }
      ],
      ""datePublished"": ""2017""
    }
  ],
  ""readme"": ""https://raw.githubusercontent.com/WDscholia/scholia/master/README.rst"",
  ""description"": [
    ""Wikidata-based scholarly profiles "",
    ""Scholia is a python package and webapp for interaction with scholarly information in Wikidata_. \n"",
    ""It is possible to use methods of the scholia package as a script: \n"",
    ""The webapp displays scholarly profiles for individual researchers, research topics, organizations, journals, works, events, awards and so on. For instance, the scholarly profile for psychologist Uta Frith is accessible from \nThe information displayed on the page is only what is available in Wikidata. \n""
  ]
}"
https://github.com/AI4S2S/lilio,"# lilio: Calendar generator for machine learning with timeseries data <img align=""right"" width=""160"" alt=""Logo"" src=""https://raw.githubusercontent.com/AI4S2S/lilio/main/docs/assets/images/lilio_logo.png""> <!--[![github repo badge](https://img.shields.io/badge/github-repo-000.svg?logo=github&labelColor=gray&color=blue)](https://github.com/AI4S2S/lilio) --> [![github license badge](https://img.shields.io/github/license/AI4S2S/lilio)](https://github.com/AI4S2S/lilio) [![rsd badge](https://img.shields.io/badge/RSD-lilio-blue)](https://research-software-directory.org/software/lilio) [![DOI](https://zenodo.org/badge/588084019.svg)](https://zenodo.org/badge/latestdoi/588084019) [![SQAaaS badge shields.io](https://img.shields.io/badge/sqaaas%20software-gold-yellow)](https://api.eu.badgr.io/public/assertions/P3scOSLyQVWzzsjq0Ueycw ""SQAaaS gold badge achieved"") [![fair-software.eu](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F-green)](https://fair-software.eu) [![Documentation Status](https://readthedocs.org/projects/ai4s2s/badge/?version=stable)](https://lilio.readthedocs.io/en/stable/?badge=stable) [![build](https://github.com/AI4S2S/lilio/actions/workflows/build.yml/badge.svg)](https://github.com/AI4S2S/lilio/actions/workflows/build.yml) [![workflow scc badge](https://sonarcloud.io/api/project_badges/measure?project=AI4S2S_lilio&metric=coverage)](https://sonarcloud.io/dashboard?id=AI4S2S_lilio) <!--[![sonarcloud](https://github.com/AI4S2S/lilio/actions/workflows/sonarcloud.yml/badge.svg)](https://github.com/AI4S2S/lilio/actions/workflows/sonarcloud.yml) --> A python package for generating calendars to resample timeseries into training and target data for machine learning. Named after [the inventor](https://en.wikipedia.org/wiki/Aloysius_Lilius) of the [Gregorian Calendar](https://en.wikipedia.org/wiki/Gregorian_calendar). Lilio was originally designed for use in [`s2spy`](https://github.com/AI4S2S/s2spy), a high-level python package integrating expert knowledge and artificial intelligence to boost (sub) seasonal forecasting. ## Installation [![workflow pypi badge](https://img.shields.io/pypi/v/lilio.svg?colorB=blue)](https://pypi.python.org/project/lilio/) [![supported python versions](https://img.shields.io/pypi/pyversions/lilio)](https://pypi.python.org/project/lilio/) [![conda-forge](https://anaconda.org/conda-forge/lilio/badges/version.svg)](https://anaconda.org/conda-forge/lilio) To install the latest release of lilio, do: ```console python3 -m pip install lilio ``` Lilio is also available on conda-forge. If you use conda, do: ```console conda install -c conda-forge lilio ``` To install the in-development version from the GitHub repository, do: ```console python3 -m pip install git+https://github.com/AI4S2S/lilio.git ``` ### Configure the package for development and testing A more extensive developer guide can be found [here](https://github.com/AI4S2S/lilio/blob/main/docs/README.dev.md). The testing framework used here is [pytest](https://pytest.org). Before running the test, we get a local copy of the source code and install `lilio` via the command: ```py git clone https://github.com/AI4S2S/lilio.git cd lilio python3 -m pip install -e .[dev] ``` Then, run tests: ```py hatch run test ``` ## How the lilio calendars work In Lilio, calendars are 2-dimensional. Each row (year) represents a unique observation, whereas each column corresponds to a precursor period with a certain lag. This is how we like to structure our data for ML applications. ![Conceptual illustration of Lilio Calendar](https://raw.githubusercontent.com/AI4S2S/lilio/main/docs/assets/images/calendar_concept.png) We define the ""anchor date"" to be between the target and precursor periods (strictly speaking, it is the start of the first target interval). All other intervals are expressed as offsets to this anchor date. Conveniently, this eliminates any ambiguity related to leap years. Here's a calendar generated with Lilio: ```py >>> calendar = lilio.daily_calendar(anchor=""11-30"", length='180d') >>> calendar = calendar.map_years(2020, 2021) >>> calendar.show() i_interval -1 1 anchor_year 2021 [2021-06-03, 2021-11-30) [2021-11-30, 2022-05-29) 2020 [2020-06-03, 2020-11-30) [2020-11-30, 2021-05-29) ``` Now, the user can load the data `input_data` (e.g. `pandas` `DataFrame`) and resample it to the desired timescales configured in the calendar: ```py >>> calendar = calendar.map_to_data(input_data) >>> bins = lilio.resample(calendar, input_data) >>> bins anchor_year i_interval interval mean_data target 0 2020 -1 [2020-06-03, 2020-11-30) 275.5 True 1 2020 1 [2020-11-30, 2021-05-29) 95.5 False 2 2021 -1 [2021-06-03, 2021-11-30) 640.5 True 3 2021 1 [2021-11-30, 2022-05-29) 460.5 False ``` For convenience, Lilio offers a few shorthands for standard of calendars e.g. [`monthly_calendar`](https://lilio.readthedocs.io/en/latest/autoapi/lilio/calendar_shorthands/index.html#lilio.calendar_shorthands.monthly_calendar) and [`weekly_calendar`](https://lilio.readthedocs.io/en/latest/autoapi/lilio/calendar_shorthands/index.html#lilio.calendar_shorthands.weekly_calendar). However, you can also create custom calendars by calling [`Calendar`](https://lilio.readthedocs.io/en/latest/autoapi/lilio/calendar/index.html#lilio.calendar.Calendar) directly. For a nice walkthrough, see [this example notebook](https://lilio.readthedocs.io/en/latest/notebooks/all_about_the_calendar.html). <!--- ## Tutorials `lilio` supports operations that are common in a machine learning pipeline of sub-seasonal to seasonal forecasting research. Tutorials covering supported methods and functionalities are listed in [notebooks](https://github.com/AI4S2S/lilio/tree/main/notebooks). To check these notebooks, users need to install [`Jupyter lab`](https://jupyter.org/). More details about each method can be found in this [API reference documentation](https://ai4s2s.readthedocs.io/en/latest/autoapi/index.html). --> ## Documentation [![Documentation Status](https://readthedocs.org/projects/lilio/badge/?version=latest)](https://lilio.readthedocs.io/en/latest/?badge=latest) For detailed information on using `lilio` package, visit the [documentation page](https://lilio.readthedocs.io/en/latest/) hosted at Readthedocs. ## Contributing If you want to contribute to the development of lilio, have a look at the [contribution guidelines](https://github.com/AI4S2S/lilio/blob/main/docs/CONTRIBUTING.md). ## How to cite us [![rsd badge](https://img.shields.io/badge/RSD-lilio-blue)](https://research-software-directory.org/software/lilio) [![DOI](https://zenodo.org/badge/588084019.svg)](https://zenodo.org/badge/latestdoi/588084019) Please use the Zenodo DOI to cite this package if you used it in your research. ## Acknowledgements This package was developed by the Netherlands eScience Center and Vrije Universiteit Amsterdam under Netherlands eScience Center grant NLESC.OEC.2021.005. The package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [NLeSC/python-template](https://github.com/NLeSC/python-template). [build-system] requires = [""hatchling>=1.8.0"", ""hatch-vcs"", ""hatch-fancy-pypi-readme""] build-backend = ""hatchling.build"" [tool.hatch.version] path = ""lilio/__init__.py"" [tool.hatch.build.targets.sdist] exclude = [ ""/.github"", ""/.mypy_cache"", ""/.pytest_cache"", ""/.githooks"", ""sonar-project.properties"" ] [tool.hatch.build.targets.wheel] packages = [""lilio""] [tool.hatch.publish.index] disable = true # Requires confirmation when publishing to pypi. [project] name = ""lilio"" description = ""python package for generating calendars for machine learning timeseries analysis."" readme = ""README.md"" license = ""Apache-2.0"" requires-python = "">=3.9, <3.12"" authors = [ {email = ""c.donnelly@esciencecenter.nl""}, {name = ""Claire Donnelly, Yang Liu, Bart Schilperoort, Peter Kalverla, Jannes van Ingen, Sem Vijverberg""} ] maintainers = [ {name = ""Claire Donnelly"", email = ""c.donnelly@esciencecenter.nl""}, {name = ""Yang Liu"", email = ""y.liu@esciencecenter.nl""}, {name = ""Bart Schilperoort"", email = ""b.schilperoort@esciencecenter.nl""}, {name = ""Peter Kalverla"", email = ""p.kalvera@esciencecenter.nl""}, {name = ""Jannes van Ingen"", email = ""jannes.van.ingen@s2s-ai.com""}, {name = ""Sem Vijverberg"", email = ""sem.vijverberg@vu.nl""}, ] keywords = [ ""calendar"", ""calendar generation"", ""calendar maker"", ""machine learning"", ""timeseries analysis"", ] classifiers = [ ""Development Status :: 2 - Pre-Alpha"", ""Intended Audience :: Developers"", ""License :: OSI Approved :: Apache Software License"", ""Natural Language :: English"", ""Operating System :: OS Independent"", ""Programming Language :: Python"", ""Programming Language :: Python :: 3 :: Only"", ""Programming Language :: Python :: 3.9"", ""Programming Language :: Python :: 3.10"", ""Programming Language :: Python :: 3.11"", ] dependencies = [ ""netcdf4"", ""numpy"", ""pandas"", ""matplotlib"", ""xarray"", ""scikit-learn"", ] dynamic = [""version""] [project.optional-dependencies] dev = [ ""bump-my-version"", ""hatch"", ""ruff"", ""mypy"", ""pytest"", ""pytest-cov"", ""dask[distributed]"", ] docs = [ # Required for ReadTheDocs ""myst_parser"", ""sphinx"", ""sphinx_rtd_theme"", ""sphinx-autoapi"", ""coverage[toml]"", ""nbsphinx"", ""ipykernel"", ] bokeh = [ ""bokeh >= 3.0.0"", ] [tool.hatch.envs.default] features = [""dev"", ""bokeh""] [tool.hatch.envs.default.scripts] lint = [ ""ruff check ."", ""mypy ."", ""ruff format . --check"", ] format = [""ruff format ."", ""ruff check . --fix"", ""lint"",] test = [""pytest ./lilio/ ./tests/ --doctest-modules"",] coverage = [ ""pytest --cov --cov-report term --cov-report xml --junitxml=xunit-result.xml tests/"", ] [tool.hatch.envs.docs] features = [""bokeh"", ""docs""] [tool.hatch.envs.docs.scripts] build = [ ""sphinx-build -c docs -b html docs docs/_build/html"", ] [tool.pytest.ini_options] testpaths = [""tests""] [tool.mypy] ignore_missing_imports = true python_version = ""3.10"" [tool.ruff] target-version = ""py39"" line-length = 88 exclude = [""docs"", ""build""] [tool.ruff.lint] select = [ ""E"", # pycodestyle ""F"", # pyflakes ""B"", # flake8-bugbear ""D"", # pydocstyle ""C90"", # mccabe complexity ""I"", # isort (autosort not working correctly, disabled for now). ""N"", # PEP8-naming ""UP"", # pyupgrade (upgrade syntax to current syntax) ""PLE"", # Pylint error https://github.com/charliermarsh/ruff#error-ple ""PLR"", # Pylint refactor (e.g. too-many-arguments) ""PLW"", # Pylint warning (useless-else-on-loop) ] extend-select = [ ""D401"", # First line should be in imperative mood ""D400"", # First line should end in a period. ""D404"", # First word of the docstring should not be 'This' ""TID252"", # No relative imports (not pep8 compliant) ] ignore = [ ""PLR2004"", # magic value used in comparsion (i.e. `if ndays == 28: month_is_feb`). ] unfixable = [] # Allow unused variables when underscore-prefixed. dummy-variable-rgx = ""^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"" pydocstyle.convention = ""google"" mccabe.max-complexity = 10 [tool.ruff.lint.per-file-ignores] ""tests/**"" = [""D""] [tool.ruff.lint.isort] known-first-party = [""lilio""] force-single-line = true lines-after-imports = 2 no-lines-before = [""future"",""standard-library"",""third-party"",""first-party"",""local-folder""] [tool.coverage.run] branch = true source = [""lilio""] command_line = ""-m pytest"" [tool.coverage.report] exclude_lines = [ ""pragma: no cover"", ""@overload"", ""if TYPE_CHECKING:"", ""if typing.TYPE_CHECKING:"" ] Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""{}"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright [yyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. # YAML 1.2 --- cff-version: ""1.1.0"" title: ""lilio: Calendar generator for machine learning with timeseries data"" authors: - family-names: Liu given-names: Yang orcid: ""https://orcid.org/0000-0002-1966-8460"" affilication: ""Netherlands eScience Center"" - family-names: Kalverla given-names: Peter orcid: ""https://orcid.org/0000-0002-5025-7862"" affiliation: ""Netherlands eScience Center"" - family-names: Schilperoort given-names: Bart orcid: ""https://orcid.org/0000-0003-4487-9822"" affiliation: ""Netherlands eScience Center"" - family-names: Vijverberg given-names: Sem orcid: ""https://orcid.org/0000-0002-1839-2618"" affiliation: ""Vrije Universiteit Amsterdam"" - family-names: van Ingen given-names: Jannes affiliation: ""Vrije Universiteit Amsterdam"" - family-names: Alidoost given-names: Fakhereh orcid: ""https://orcid.org/0000-0001-8407-6472"" affiliation: ""Netherlands eScience Center"" - family-names: Donnelly given-names: Claire orcid: ""https://orcid.org/0000-0002-2546-4528"" affiliation: ""Netherlands eScience Center"" version: ""0.5.0"" repository-code: ""https://github.com/AI4S2S/lilio"" keywords: - calendar - calendar generation - calendar maker - machine learning - timeseries analysis message: ""If you use this software, please cite it using these metadata."" license: Apache-2.0","{
    ""softwareRequirements"": [
        ""netcdf4"",
        ""numpy"",
        ""pandas"",
        ""matplotlib"",
        ""xarray"",
        ""scikit-learn""
    ],
    ""buildInstructions"": ""To install the latest release of lilio, do: python3 -m pip install lilio. Lilio is also available on conda-forge. If you use conda, do: conda install -c conda-forge lilio. To install the in-development version from the GitHub repository, do: python3 -m pip install git+https://github.com/AI4S2S/lilio.git"",
    ""author"": [
        {
            ""name"": ""Yang Liu"",
            ""orcid"": ""https://orcid.org/0000-0002-1966-8460"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Peter Kalverla"",
            ""orcid"": ""https://orcid.org/0000-0002-5025-7862"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Bart Schilperoort"",
            ""orcid"": ""https://orcid.org/0000-0003-4487-9822"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Sem Vijverberg"",
            ""orcid"": ""https://orcid.org/0000-0002-1839-2618"",
            ""affiliation"": ""Vrije Universiteit Amsterdam""
        },
        {
            ""name"": ""Jannes van Ingen"",
            ""affiliation"": ""Vrije Universiteit Amsterdam""
        },
        {
            ""name"": ""Fakhereh Alidoost"",
            ""orcid"": ""https://orcid.org/0000-0001-8407-6472"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Claire Donnelly"",
            ""orcid"": ""https://orcid.org/0000-0002-2546-4528"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": ""Netherlands eScience Center grant NLESC.OEC.2021.005"",
    ""identifier"": ""https://zenodo.org/badge/latestdoi/588084019"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""calendar"",
        ""calendar generation"",
        ""calendar maker"",
        ""machine learning"",
        ""timeseries analysis""
    ]
}","{
    ""softwareRequirements"": [
        ""netcdf4"",
        ""numpy"",
        ""pandas"",
        ""matplotlib"",
        ""xarray"",
        ""scikit-learn""
    ],
    ""buildInstructions"": ""To install the latest release of lilio, do: python3 -m pip install lilio. Lilio is also available on conda-forge. If you use conda, do: conda install -c conda-forge lilio. To install the in-development version from the GitHub repository, do: python3 -m pip install git+https://github.com/AI4S2S/lilio.git"",
    ""author"": [
        {
            ""name"": ""Yang Liu"",
            ""orcid"": ""https://orcid.org/0000-0002-1966-8460"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Peter Kalverla"",
            ""orcid"": ""https://orcid.org/0000-0002-5025-7862"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Bart Schilperoort"",
            ""orcid"": ""https://orcid.org/0000-0003-4487-9822"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Sem Vijverberg"",
            ""orcid"": ""https://orcid.org/0000-0002-1839-2618"",
            ""affiliation"": ""Vrije Universiteit Amsterdam""
        },
        {
            ""name"": ""Jannes van Ingen"",
            ""affiliation"": ""Vrije Universiteit Amsterdam""
        },
        {
            ""name"": ""Fakhereh Alidoost"",
            ""orcid"": ""https://orcid.org/0000-0001-8407-6472"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Claire Donnelly"",
            ""orcid"": ""https://orcid.org/0000-0002-2546-4528"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": ""Netherlands eScience Center grant NLESC.OEC.2021.005"",
    ""identifier"": ""https://zenodo.org/badge/latestdoi/588084019"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""calendar"",
        ""calendar generation"",
        ""calendar maker"",
        ""machine learning"",
        ""timeseries analysis""
    ]
}","{
    ""softwareRequirements"": [
        ""netcdf4"",
        ""numpy"",
        ""pandas"",
        ""matplotlib"",
        ""xarray"",
        ""scikit-learn""
    ],
    ""buildInstructions"": ""To install the latest release of lilio, do:\n```console\npython3 -m pip install lilio\n```\n\nLilio is also available on conda-forge. If you use conda, do:\n```console\nconda install -c conda-forge lilio\n```\n\nTo install the in-development version from the GitHub repository, do:\n\n```console\npython3 -m pip install git+https://github.com/AI4S2S/lilio.git\n```"",
    ""author"": [
        {
            ""family-names"": ""Liu"",
            ""given-names"": ""Yang"",
            ""orcid"": ""https://orcid.org/0000-0002-1966-8460"",
            ""affilication"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Kalverla"",
            ""given-names"": ""Peter"",
            ""orcid"": ""https://orcid.org/0000-0002-5025-7862"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Schilperoort"",
            ""given-names"": ""Bart"",
            ""orcid"": ""https://orcid.org/0000-0003-4487-9822"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Vijverberg"",
            ""given-names"": ""Sem"",
            ""orcid"": ""https://orcid.org/0000-0002-1839-2618"",
            ""affiliation"": ""Vrije Universiteit Amsterdam""
        },
        {
            ""family-names"": ""van Ingen"",
            ""given-names"": ""Jannes"",
            ""affiliation"": ""Vrije Universiteit Amsterdam""
        },
        {
            ""family-names"": ""Alidoost"",
            ""given-names"": ""Fakhereh"",
            ""orcid"": ""https://orcid.org/0000-0001-8407-6472"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Donnelly"",
            ""given-names"": ""Claire"",
            ""orcid"": ""https://orcid.org/0000-0002-2546-4528"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": ""Netherlands eScience Center grant NLESC.OEC.2021.005"",
    ""identifier"": [
        ""https://zenodo.org/badge/latestdoi/588084019""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""calendar"",
        ""calendar generation"",
        ""calendar maker"",
        ""machine learning"",
        ""timeseries analysis""
    ]
}","{
  ""buildInstructions"": [
    ""https://lilio.readthedocs.io/"",
    ""https://raw.githubusercontent.com/AI4S2S/lilio/main/README.md"",
    ""https://github.com/AI4S2S/lilio/tree/main/docs""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/AI4S2S""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""1.1.0"",
      ""identifier"": null,
      ""url"": """",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Liu"",
          ""givenName"": ""Yang"",
          ""@id"": ""https://orcid.org/0000-0002-1966-8460""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Kalverla"",
          ""givenName"": ""Peter"",
          ""@id"": ""https://orcid.org/0000-0002-5025-7862""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Schilperoort"",
          ""givenName"": ""Bart"",
          ""@id"": ""https://orcid.org/0000-0003-4487-9822""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Vijverberg"",
          ""givenName"": ""Sem"",
          ""@id"": ""https://orcid.org/0000-0002-1839-2618""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""van Ingen"",
          ""givenName"": ""Jannes""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Alidoost"",
          ""givenName"": ""Fakhereh"",
          ""@id"": ""https://orcid.org/0000-0001-8407-6472""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Donnelly"",
          ""givenName"": ""Claire"",
          ""@id"": ""https://orcid.org/0000-0002-2546-4528""
        }
      ],
      ""datePublished"": ""1966""
    }
  ],
  ""identifier"": ""https://zenodo.org/badge/latestdoi/588084019"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/AI4S2S/lilio/main/LICENSE"",
    ""identifier"": ""https://spdx.org/licenses/Apache-2.0""
  },
}","{
  ""@context"": ""https://w3id.org/codemeta/3.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/AI4S2S/lilio/main/LICENSE"",
    ""identifier"": ""https://spdx.org/licenses/Apache-2.0""
  },
  ""codeRepository"": ""https://github.com/AI4S2S/lilio"",
  ""issueTracker"": ""https://github.com/AI4S2S/lilio/issues"",
  ""dateCreated"": ""2023-01-12"",
  ""dateModified"": ""2024-06-13"",
  ""downloadUrl"": ""https://github.com/AI4S2S/lilio/releases"",
  ""name"": ""lilio"",
  ""logo"": ""https://raw.githubusercontent.com/AI4S2S/lilio/main/docs/assets/images/lilio_logo.png"",
  ""programmingLanguage"": [
    ""Python"",
    ""Shell""
  ],
  ""releaseNotes"": ""With this release, Lilio now supports a safe and greedy mode for creating intervals and can infer data frequency. For more details, see overview below:\r\n\r\n### Changed\r\n - Moved to ruff formatter instead of black ([#70](https://github.com/AI4S2S/lilio/pull/70))\r\n - Do import sorting with ruff instead of isort ([#70](https://github.com/AI4S2S/lilio/pull/70))\r\n - Option for \""greedy\"" mode which creates an interval if any data is available within the time bound ([#75](https://github.com/AI4S2S/lilio/pull/75))\r\n - `map_to_data` now tries to infer the time bounds for the data, and uses those to determine which anchor years are valid ([#75](https://github.com/AI4S2S/lilio/pull/75))\r\n - Tests for greedy and safe mode, including inferring data frequency ([#75](https://github.com/AI4S2S/lilio/pull/75))\r\n\r\n\r\n### Fixed\r\n - Fixed issue with calendar generation when the (rightmost) target period crossed into the new year ([#70](https://github.com/AI4S2S/lilio/pull/70)).\r\n - Fixed issue with Pandas 2.2 where 'M' changed to 'ME' ([#72](https://github.com/AI4S2S/lilio/pull/72))\r\n - Fixed issue where pd.Interval now shows time where it is not wanted ([#72](https://github.com/AI4S2S/lilio/pull/72)). The issue was raised with Pandas ([#57748] https://github.com/pandas-dev/pandas/issues/57748).\r\n - Added tests for latest version of macos (with M1 chips) ([#73](https://github.com/AI4S2S/lilio/pull/73))\r\n - Fixed a bug in `map_to_data` that lead to anchor years being included when they should not have ([#75](https://github.com/AI4S2S/lilio/pull/75))"",
  ""softwareVersion"": ""v0.5.0"",
  ""datePublished"": ""2023-02-08"",
  ""buildInstructions"": [
    ""https://lilio.readthedocs.io/"",
    ""https://raw.githubusercontent.com/AI4S2S/lilio/main/README.md"",
    ""https://github.com/AI4S2S/lilio/tree/main/docs""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/AI4S2S""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""1.1.0"",
      ""identifier"": null,
      ""url"": """",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Liu"",
          ""givenName"": ""Yang"",
          ""@id"": ""https://orcid.org/0000-0002-1966-8460""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Kalverla"",
          ""givenName"": ""Peter"",
          ""@id"": ""https://orcid.org/0000-0002-5025-7862""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Schilperoort"",
          ""givenName"": ""Bart"",
          ""@id"": ""https://orcid.org/0000-0003-4487-9822""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Vijverberg"",
          ""givenName"": ""Sem"",
          ""@id"": ""https://orcid.org/0000-0002-1839-2618""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""van Ingen"",
          ""givenName"": ""Jannes""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Alidoost"",
          ""givenName"": ""Fakhereh"",
          ""@id"": ""https://orcid.org/0000-0001-8407-6472""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Donnelly"",
          ""givenName"": ""Claire"",
          ""@id"": ""https://orcid.org/0000-0002-2546-4528""
        }
      ],
      ""datePublished"": ""1966""
    }
  ],
  ""identifier"": ""https://zenodo.org/badge/latestdoi/588084019"",
  ""readme"": ""https://raw.githubusercontent.com/AI4S2S/lilio/main/README.md"",
  ""description"": [
    ""Calendar generator for machine learning with timeseries data"",
    ""In Lilio, calendars are 2-dimensional. Each row (year) represents a unique\nobservation, whereas each column corresponds to a precursor period with a\ncertain lag. This is how we like to structure our data for ML applications. \nWe define the \""anchor date\"" to be between the target and precursor periods\n(strictly speaking, it is the start of the first target interval). All other\nintervals are expressed as offsets to this anchor date. Conveniently, this\neliminates any ambiguity related to leap years. \n"",
    ""\nA python package for generating calendars to resample timeseries into training and target data for machine learning. Named after [the inventor](https://en.wikipedia.org/wiki/Aloysius_Lilius) of the [Gregorian Calendar](https://en.wikipedia.org/wiki/Gregorian_calendar). \n""
  ]
}"
https://github.com/workflomics/workflomics-frontend,"<img src=""https://github.com/Workflomics/.github/blob/main/WORKFLOMICS_logo.png"" alt=""logo"" width=60%/> # Workflomics: A Workflow Benchmarking Web Platform | Badges | | |:------------------------:|------------------------------------------------------------------------------------------------------------------------------| | **Packages and Releases** | [![Latest release](https://img.shields.io/github/release/workflomics/workflomics-frontend.svg)](https://github.com/sanctuuary/APE/releases/latest) [![Static Badge](https://img.shields.io/badge/RSD-Workflomics-workflomics)](https://research-software-directory.org/software/workflomics) | | **Build Status** | [![Build Frontend](https://github.com/Workflomics/workflomics-frontend/actions/workflows/build-frontend.yaml/badge.svg)](https://github.com/Workflomics/workflomics-frontend/actions/workflows/build-frontend.yaml) | | **Documentation Status** | [![Documentation Status](https://readthedocs.org/projects/workflomics/badge/?version=latest)](https://workflomics.readthedocs.io/en/latest/?badge=latest) | | **DOI** | [![DOI](https://zenodo.org/badge/594054560.svg)](https://zenodo.org/doi/10.5281/zenodo.10047136) | | **License** | ![GitHub](https://img.shields.io/github/license/workflomics/workflomics-frontend) | ## Project goal The Workflomics platform aims to address the challenge faced by life science researchers who work with increasingly large and complex datasets and struggle to create optimal workflows for their data analysis problems. The platform facilitates a ""Great Bake Off"" of computational workflows in bioinformatics by integrating bioinformatics tools and metadata with technologies for automated workflow exploration and benchmarking. This enables a systematic and rigorous approach to the development of cutting-edge workflows, specifically in the field of proteomics, to increase scientific quality, robustness, reproducibility, FAIRness, and maintainability. The platform currently focuses on the proteomics domain. We aim to extend the platform to additional domains, e.g., metabolomics, genomics. Visit the live demo: http://workflomics.org/ ## Architecture The Workflomics web interface is part of a larger infrastructure that includes a Postgres database, a Postgrest API, a RESTful APE service, etc. The architecture is presented in the figure below: <div align=""left""> <img src=""https://github.com/Workflomics/.github/blob/main/draw.io/architecture_simplified.png"" alt=""architecture_workflomics"" width=""60%""> </div> ## Development For now, it is assumed you already have a Postgres database and Postgrest API set up and running. See [Deployment](#deployment) below for a docker compose configuration which starts all necessary services and initializes the database with the `.sql` scripts in the `database` folder. For development, a simple proxy server is run automatically when running `npm start` (through `setupProxy.js`, which is picked up by create-react-app). Configure the endpoints in a `.env` file in the project directory: ```bash API_PROXY_TARGET=http://localhost:3000 APE_PROXY_TARGET=http://localhost:4444 ``` Install the required modules for the front-end: ``` npm install ``` To start the front-end, simply run ``` npm start ``` ## Deployment ### Back-end services Copy `docker-compose.yml` to the server and in the same directory, create `.env`. In this file, configure accordingly: ``` POSTGRES_PASSWORD=<password> WF_DATA_DIR=<data directory> ``` The POSTGRES_PASSWORD is the password that is used to login to the Postgres database. The password can be set to anything the user wants, but it might be a good idea to use a password manager to generate a secure password and share it with other users that need access to hosted the database. The WF_DATA_DIR is the directory where the data is stored. At the moment, ports are hard-coded in the docker-compose.yml. To start the database, API to the database and RestAPE, run the following: ``` docker compose --env-file .env up -d # To remove the containers, run docker compose down ``` ### Nginx The front-end can be statically served, but requires a reverse proxy. For this, you could use nginx. A sample config is in the nginx folder, this is usually placed at `/etc/nginx/sites-available/workflomics.org.conf`. Make sure it is pointing to the proper back-end services and that there is a symlink to the config in `sites-enabled`. Nginx also statically serves the website as specified in the config. ### Building and deploying the front-end Make sure you are on the proper branch and have pulled any changes you want included. Build an optimized version of the application: ``` npm run build ``` This will build the application in the `build` directory. It can be statically served, for instance using nginx. For instance, using nginx, simply copy the contents of the `build/` directory to `/var/www/workflomics.org/`. { ""name"": ""Workflomics_frontend"", ""version"": ""1.1.0"", ""private"": true, ""dependencies"": { ""@mdi/js"": ""^7.3.67"", ""@mdi/react"": ""^1.6.1"", ""@testing-library/jest-dom"": ""^5.16.5"", ""@testing-library/react"": ""^13.4.0"", ""@testing-library/user-event"": ""^13.5.0"", ""@types/d3"": ""^7.4.0"", ""@types/jest"": ""^27.5.2"", ""@types/node"": ""^16.18.11"", ""@types/react"": ""^18.0.27"", ""@types/react-dom"": ""^18.0.10"", ""antd"": ""^5.23.1"", ""d3"": ""^7.8.5"", ""daisyui"": ""^2.49.0"", ""dotenv"": ""^16.0.3"", ""http-proxy-middleware"": ""^3.0.3"", ""mobx"": ""^6.7.0"", ""mobx-persist-store"": ""^1.1.3"", ""mobx-react-lite"": ""^3.4.0"", ""react"": ""^18.2.0"", ""react-dom"": ""^18.2.0"", ""react-router-dom"": ""^6.8.1"", ""react-scripts"": ""5.0.1"", ""typescript"": ""^4.9.4"", ""web-vitals"": ""^2.1.4"" }, ""scripts"": { ""start"": ""react-scripts start"", ""build"": ""react-scripts build"", ""test"": ""react-scripts test"", ""eject"": ""react-scripts eject"" }, ""eslintConfig"": { ""extends"": [ ""react-app"", ""react-app/jest"" ] }, ""browserslist"": { ""production"": [ "">0.2%"", ""not dead"", ""not op_mini all"" ], ""development"": [ ""last 1 chrome version"", ""last 1 firefox version"", ""last 1 safari version"" ] }, ""devDependencies"": { ""tailwindcss"": ""^3.2.4"" } } { ""compilerOptions"": { ""target"": ""es5"", ""lib"": [ ""dom"", ""dom.iterable"", ""esnext"" ], ""allowJs"": true, ""skipLibCheck"": true, ""esModuleInterop"": true, ""allowSyntheticDefaultImports"": true, ""strict"": true, ""forceConsistentCasingInFileNames"": true, ""noFallthroughCasesInSwitch"": true, ""module"": ""esnext"", ""moduleResolution"": ""node"", ""resolveJsonModule"": true, ""isolatedModules"": true, ""noEmit"": true, ""jsx"": ""react-jsx"" }, ""include"": [ ""src"" ] } Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. ""License"" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. ""Licensor"" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. ""Legal Entity"" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, ""control"" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. ""You"" (or ""Your"") shall mean an individual or Legal Entity exercising permissions granted by this License. ""Source"" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. ""Object"" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. ""Work"" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). ""Derivative Works"" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. ""Contribution"" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, ""submitted"" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as ""Not a Contribution."" ""Contributor"" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a ""NOTICE"" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets ""[]"" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same ""printed page"" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. cff-version: 1.2.0 title: 'Workflomics: Bioinformatics Workflow Generation and Benchmarking' message: >- If you use this software, please cite it using the metadata from this file. type: software authors: - given-names: Vedran family-names: Kasalica email: v.kasalica@esciencecenter.nl affiliation: Netherlands eScience Center, Netherlands orcid: 'https://orcid.org/0000-0002-0097-1056' - family-names: Peter given-names: Kok email: p.kok@esciencecenter.nl affiliation: Netherlands eScience Center, Netherlands orcid: 'https://orcid.org/0000-0002-6630-7326' - family-names: Nauman given-names: Ahmed email: n.ahmed@esciencecenter.nl affiliation: Netherlands eScience Center, Netherlands orcid: 'https://orcid.org/0000-0003-3559-9941' - family-names: Felipe given-names: Morato email: felipe.morato@csc.fi affiliation: CSC - IT Center for Science, Finland orcid: 'https://orcid.org/0009-0008-1501-4073' - family-names: Rob given-names: Marissen email: r.j.marissen@lumc.nl affiliation: Leiden University Medical Center, Netherlands orcid: 'https://orcid.org/0000-0002-1220-9173' - family-names: Anna-Lena given-names: Lamprecht email: anna-lena.lamprecht@uni-potsdam.de affiliation: University of Potsdam, Germany orcid: 'https://orcid.org/0000-0003-1953-5606' - family-names: Magnus given-names: Palmblad email: n.m.palmblad@lumc.nl affiliation: Leiden University Medical Center, Netherlands orcid: 'https://orcid.org/0000-0002-5865-8994' identifiers: - type: doi value: 10.5281/zenodo.10047136 repository-code: 'https://github.com/workflomics/workflomics-frontend' url: 'https://github.com/workflomics/workflomics-frontend' abstract: >- The Workflomics platform aims to address the challenge faced by life science researchers who work with increasingly large and complex datasets and struggle to create optimal workflows for their data analysis problems. The platform facilitates a ""Great Bake Off"" of computational workflows in bioinformatics by integrating bioinformatics tools and metadata with technologies for automated workflow exploration and benchmarking. This enables a systematic and rigorous approach to the development of cutting-edge workflows, specifically in the field of proteomics, to increase scientific quality, robustness, reproducibility, FAIRness, and maintainability. The platform currently focuses on the proteomics domain. We aim to extend the platform to additional domains, e.g., metabolomics, genomics. keywords: - bioinformatics - workflow benchmarking license: Apache-2.0 commit: bb02154d29104b2667006e12d37239a3d382b75d version: 0.1.1 date-released: '2023-11-12'","{
    ""softwareRequirements"": [
        ""@mdi/js:7.3.67"",
        ""@mdi/react:1.6.1"",
        ""@testing-library/jest-dom:5.16.5"",
        ""@testing-library/react:13.4.0"",
        ""@testing-library/user-event:13.5.0"",
        ""@types/d3:7.4.0"",
        ""@types/jest:27.5.2"",
        ""@types/node:16.18.11"",
        ""@types/react:18.0.27"",
        ""@types/react-dom:18.0.10"",
        ""antd:5.23.1"",
        ""d3:7.8.5"",
        ""daisyui:2.49.0"",
        ""dotenv:16.0.3"",
        ""http-proxy-middleware:3.0.3"",
        ""mobx:6.7.0"",
        ""mobx-persist-store:1.1.3"",
        ""mobx-react-lite:3.4.0"",
        ""react:18.2.0"",
        ""react-dom:18.2.0"",
        ""react-router-dom:6.8.1"",
        ""react-scripts:5.0.1"",
        ""typescript:4.9.4"",
        ""web-vitals:2.1.4""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Vedran Kasalica"",
            ""email"": ""v.kasalica@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-0097-1056""
        },
        {
            ""name"": ""Peter Kok"",
            ""email"": ""p.kok@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-6630-7326""
        },
        {
            ""name"": ""Ahmed Nauman"",
            ""email"": ""n.ahmed@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0003-3559-9941""
        },
        {
            ""name"": ""Felipe Morato"",
            ""email"": ""felipe.morato@csc.fi"",
            ""affiliation"": ""CSC - IT Center for Science, Finland"",
            ""orcid"": ""https://orcid.org/0009-0008-1501-4073""
        },
        {
            ""name"": ""Rob Marissen"",
            ""email"": ""r.j.marissen@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-1220-9173""
        },
        {
            ""name"": ""Anna-Lena Lamprecht"",
            ""email"": ""anna-lena.lamprecht@uni-potsdam.de"",
            ""affiliation"": ""University of Potsdam, Germany"",
            ""orcid"": ""https://orcid.org/0000-0003-1953-5606""
        },
        {
            ""name"": ""Magnus Palmblad"",
            ""email"": ""n.m.palmblad@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-5865-8994""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Vedran Kasalica"",
            ""email"": ""v.kasalica@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-0097-1056""
        },
        {
            ""name"": ""Peter Kok"",
            ""email"": ""p.kok@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-6630-7326""
        },
        {
            ""name"": ""Ahmed Nauman"",
            ""email"": ""n.ahmed@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0003-3559-9941""
        },
        {
            ""name"": ""Felipe Morato"",
            ""email"": ""felipe.morato@csc.fi"",
            ""affiliation"": ""CSC - IT Center for Science, Finland"",
            ""orcid"": ""https://orcid.org/0009-0008-1501-4073""
        },
        {
            ""name"": ""Rob Marissen"",
            ""email"": ""r.j.marissen@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-1220-9173""
        },
        {
            ""name"": ""Anna-Lena Lamprecht"",
            ""email"": ""anna-lena.lamprecht@uni-potsdam.de"",
            ""affiliation"": ""University of Potsdam, Germany"",
            ""orcid"": ""https://orcid.org/0000-0003-1953-5606""
        },
        {
            ""name"": ""Magnus Palmblad"",
            ""email"": ""n.m.palmblad@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-5865-8994""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.10047136"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""bioinformatics"",
        ""workflow benchmarking""
    ]
}","{
    ""softwareRequirements"": [
        ""@mdi/js:7.3.67"",
        ""@mdi/react:1.6.1"",
        ""@testing-library/jest-dom:5.16.5"",
        ""@testing-library/react:13.4.0"",
        ""@testing-library/user-event:13.5.0"",
        ""@types/d3:7.4.0"",
        ""@types/jest:27.5.2"",
        ""@types/node:16.18.11"",
        ""@types/react:18.0.27"",
        ""@types/react-dom:18.0.10"",
        ""antd:5.23.1"",
        ""d3:7.8.5"",
        ""daisyui:2.49.0"",
        ""dotenv:16.0.3"",
        ""http-proxy-middleware:3.0.3"",
        ""mobx:6.7.0"",
        ""mobx-persist-store:1.1.3"",
        ""mobx-react-lite:3.4.0"",
        ""react:18.2.0"",
        ""react-dom:18.2.0"",
        ""react-router-dom:6.8.1"",
        ""react-scripts:5.0.1"",
        ""typescript:4.9.4"",
        ""web-vitals:2.1.4""
    ],
    ""buildInstructions"": """",
    ""author"": [
        {
            ""name"": ""Vedran Kasalica"",
            ""email"": ""v.kasalica@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-0097-1056""
        },
        {
            ""name"": ""Peter Kok"",
            ""email"": ""p.kok@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-6630-7326""
        },
        {
            ""name"": ""Ahmed Nauman"",
            ""email"": ""n.ahmed@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0003-3559-9941""
        },
        {
            ""name"": ""Felipe Morato"",
            ""email"": ""felipe.morato@csc.fi"",
            ""affiliation"": ""CSC - IT Center for Science, Finland"",
            ""orcid"": ""https://orcid.org/0009-0008-1501-4073""
        },
        {
            ""name"": ""Rob Marissen"",
            ""email"": ""r.j.marissen@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-1220-9173""
        },
        {
            ""name"": ""Anna-Lena Lamprecht"",
            ""email"": ""anna-lena.lamprecht@uni-potsdam.de"",
            ""affiliation"": ""University of Potsdam, Germany"",
            ""orcid"": ""https://orcid.org/0000-0003-1953-5606""
        },
        {
            ""name"": ""Magnus Palmblad"",
            ""email"": ""n.m.palmblad@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-5865-8994""
        }
    ],
    ""contributor"": [
        {
            ""name"": ""Vedran Kasalica"",
            ""email"": ""v.kasalica@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-0097-1056""
        },
        {
            ""name"": ""Peter Kok"",
            ""email"": ""p.kok@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-6630-7326""
        },
        {
            ""name"": ""Ahmed Nauman"",
            ""email"": ""n.ahmed@esciencecenter.nl"",
            ""affiliation"": ""Netherlands eScience Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0003-3559-9941""
        },
        {
            ""name"": ""Felipe Morato"",
            ""email"": ""felipe.morato@csc.fi"",
            ""affiliation"": ""CSC - IT Center for Science, Finland"",
            ""orcid"": ""https://orcid.org/0009-0008-1501-4073""
        },
        {
            ""name"": ""Rob Marissen"",
            ""email"": ""r.j.marissen@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-1220-9173""
        },
        {
            ""name"": ""Anna-Lena Lamprecht"",
            ""email"": ""anna-lena.lamprecht@uni-potsdam.de"",
            ""affiliation"": ""University of Potsdam, Germany"",
            ""orcid"": ""https://orcid.org/0000-0003-1953-5606""
        },
        {
            ""name"": ""Magnus Palmblad"",
            ""email"": ""n.m.palmblad@lumc.nl"",
            ""affiliation"": ""Leiden University Medical Center, Netherlands"",
            ""orcid"": ""https://orcid.org/0000-0002-5865-8994""
        }
    ],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.10047136"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""bioinformatics"",
        ""workflow benchmarking""
    ]
}","{
   ""Dependencies"":[ ""@mdi/js"": ""^7.3.67"",
    ""@mdi/react"": ""^1.6.1"",
    ""@testing-library/jest-dom"": ""^5.16.5"",
    ""@testing-library/react"": ""^13.4.0"",
    ""@testing-library/user-event"": ""^13.5.0"",
    ""@types/d3"": ""^7.4.0"",
    ""@types/jest"": ""^27.5.2"",
    ""@types/node"": ""^16.18.11"",
    ""@types/react"": ""^18.0.27"",
    ""@types/react-dom"": ""^18.0.10"",
    ""antd"": ""^5.23.1"",
    ""d3"": ""^7.8.5"",
    ""daisyui"": ""^2.49.0"",
    ""dotenv"": ""^16.0.3"",
    ""http-proxy-middleware"": ""^3.0.3"",
    ""mobx"": ""^6.7.0"",
    ""mobx-persist-store"": ""^1.1.3"",
    ""mobx-react-lite"": ""^3.4.0"",
    ""react"": ""^18.2.0"",
    ""react-dom"": ""^18.2.0"",
    ""react-router-dom"": ""^6.8.1"",
    ""react-scripts"": ""5.0.1"",
    ""typescript"": ""^4.9.4"",
    ""web-vitals"": ""^2.1.4""
],
   ""Installation_Instructions"": ""For development, a simple proxy server is run automatically when running `npm start` (through `setupProxy.js`, which is picked up by create-react-app). Configure the endpoints in a `.env` file in the project directory:\n\nAPI_PROXY_TARGET=http://localhost:3000\nAPE_PROXY_TARGET=http://localhost:4444\n\nInstall the required modules for the front-end:\n\nnpm install\n\nTo start the front-end, simply run\n\nnpm start"",
   ""Authors"": [
    {
        ""given-names"": ""Vedran"",
        ""family-names"": ""Kasalica"",
        ""email"": ""v.kasalica@esciencecenter.nl"",
        ""affiliation"": ""Netherlands eScience Center, Netherlands"",
        ""orcid"": ""https://orcid.org/0000-0002-0097-1056""
    },
    {
        ""family-names"": ""Peter"",
        ""given-names"": ""Kok"",
        ""email"": ""p.kok@esciencecenter.nl"",
        ""affiliation"": ""Netherlands eScience Center, Netherlands"",
        ""orcid"": ""https://orcid.org/0000-0002-6630-7326""
    },
    {
        ""family-names"": ""Nauman"",
        ""given-names"": ""Ahmed"",
        ""email"": ""n.ahmed@esciencecenter.nl"",
        ""affiliation"": ""Netherlands eScience Center, Netherlands"",
        ""orcid"": ""https://orcid.org/0000-0003-3559-9941""
    },
    {
        ""family-names"": ""Felipe"",
        ""given-names"": ""Morato"",
        ""email"": ""felipe.morato@csc.fi"",
        ""affiliation"": ""CSC - IT Center for Science, Finland"",
        ""orcid"": ""https://orcid.org/0009-0008-1501-4073""
    },
    {
        ""family-names"": ""Rob"",
        ""given-names"": ""Marissen"",
        ""email"": ""r.j.marissen@lumc.nl"",
        ""affiliation"": ""Leiden University Medical Center, Netherlands"",
        ""orcid"": ""https://orcid.org/0000-0002-1220-9173""
    },
    {
        ""family-names"": ""Anna-Lena"",
        ""given-names"": ""Lamprecht"",
        ""email"": ""anna-lena.lamprecht@uni-potsdam.de"",
        ""affiliation"": ""University of Potsdam, Germany"",
        ""orcid"": ""https://orcid.org/0000-0003-1953-5606""
    },
    {
        ""family-names"": ""Magnus"",
        ""given-names"": ""Palmblad"",
        ""email"": ""n.m.palmblad@lumc.nl"",
        ""affiliation"": ""Leiden University Medical Center, Netherlands"",
        ""orcid"": ""https://orcid.org/0000-0002-5865-8994""
    }
],
   ""Contributors"": [],
   ""Funding"": """",
   ""DOI"": [""10.5281/zenodo.10047136""],
   ""License"": ""Apache-2.0"",
   ""Keywords"": [
  ""bioinformatics"",
  ""workflow benchmarking""
]
}","{
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/Workflomics""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""Great Bake Off"",
      ""identifier"": ""10.5281/zenodo.10047136"",
      ""url"": ""https://doi.org/10.5281/zenodo.10047136"",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Kasalica"",
          ""givenName"": ""Vedran"",
          ""@id"": ""https://orcid.org/0000-0002-0097-1056""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Peter"",
          ""givenName"": ""Kok"",
          ""@id"": ""https://orcid.org/0000-0002-6630-7326""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Nauman"",
          ""givenName"": ""Ahmed"",
          ""@id"": ""https://orcid.org/0000-0003-3559-9941""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Felipe"",
          ""givenName"": ""Morato"",
          ""@id"": ""https://orcid.org/0009-0008-1501-4073""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Rob"",
          ""givenName"": ""Marissen"",
          ""@id"": ""https://orcid.org/0000-0002-1220-9173""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Anna-Lena"",
          ""givenName"": ""Lamprecht"",
          ""@id"": ""https://orcid.org/0000-0003-1953-5606""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Magnus"",
          ""givenName"": ""Palmblad"",
          ""@id"": ""https://orcid.org/0000-0002-5865-8994""
        }
      ],
      ""datePublished"": ""1953""
    }
  ],
  ""identifier"": ""https://zenodo.org/doi/10.5281/zenodo.10047136"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/workflomics/workflomics-frontend/main/LICENSE"",
    ""identifier"": ""https://spdx.org/licenses/Apache-2.0""
  },
}","{
  ""@context"": ""https://w3id.org/codemeta/3.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""url"": ""https://raw.githubusercontent.com/workflomics/workflomics-frontend/main/LICENSE"",
    ""identifier"": ""https://spdx.org/licenses/Apache-2.0""
  },
  ""codeRepository"": ""https://github.com/Workflomics/workflomics-frontend"",
  ""issueTracker"": ""https://github.com/Workflomics/workflomics-frontend/issues"",
  ""dateCreated"": ""2023-01-27"",
  ""dateModified"": ""2025-03-10"",
  ""downloadUrl"": ""https://github.com/workflomics/workflomics-frontend/releases"",
  ""name"": ""workflomics-frontend"",
  ""logo"": ""https://raw.githubusercontent.com/Workflomics/.github/main/WORKFLOMICS_logo.png"",
  ""programmingLanguage"": [
    ""TypeScript"",
    ""CSS"",
    ""HTML"",
    ""JavaScript""
  ],
  ""releaseNotes"": ""## What's Changed\r\n* Update the constraint view + fix a bug where constraints were duplicated on `+`\r\n* Introduce new constraints\r\n* Improve the workflow view - add scroll boxes and distinguish visualization of values `Unknown` and `0` in the design-time benchmark view\r\n\r\n\r\n**Full Changelog**: https://github.com/Workflomics/workflomics-frontend/compare/v1.0.0...v1.1.0"",
  ""softwareVersion"": ""v1.1.0"",
  ""datePublished"": ""2023-10-27"",
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/Workflomics""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""Great Bake Off"",
      ""identifier"": ""10.5281/zenodo.10047136"",
      ""url"": ""https://doi.org/10.5281/zenodo.10047136"",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Kasalica"",
          ""givenName"": ""Vedran"",
          ""@id"": ""https://orcid.org/0000-0002-0097-1056""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Peter"",
          ""givenName"": ""Kok"",
          ""@id"": ""https://orcid.org/0000-0002-6630-7326""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Nauman"",
          ""givenName"": ""Ahmed"",
          ""@id"": ""https://orcid.org/0000-0003-3559-9941""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Felipe"",
          ""givenName"": ""Morato"",
          ""@id"": ""https://orcid.org/0009-0008-1501-4073""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Rob"",
          ""givenName"": ""Marissen"",
          ""@id"": ""https://orcid.org/0000-0002-1220-9173""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Anna-Lena"",
          ""givenName"": ""Lamprecht"",
          ""@id"": ""https://orcid.org/0000-0003-1953-5606""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Magnus"",
          ""givenName"": ""Palmblad"",
          ""@id"": ""https://orcid.org/0000-0002-5865-8994""
        }
      ],
      ""datePublished"": ""1953""
    }
  ],
  ""identifier"": ""https://zenodo.org/doi/10.5281/zenodo.10047136"",
  ""readme"": ""https://raw.githubusercontent.com/workflomics/workflomics-frontend/main/README.md"",
  ""description"": [
    ""Web interface for automated generation and benchmarking of computational workflows in bioinformatics."",
    ""The Workflomics platform aims to address the challenge faced by life science researchers who work with increasingly large and complex datasets and struggle to create optimal workflows for their data analysis problems. \nThe platform facilitates a \""Great Bake Off\"" of computational workflows in bioinformatics by integrating bioinformatics tools and metadata with technologies for automated workflow exploration and benchmarking. This enables a systematic and rigorous approach to the development of cutting-edge workflows, specifically in the field of proteomics, to increase scientific quality, robustness, reproducibility, FAIRness, and maintainability. \n"",
    ""The POSTGRES_PASSWORD is the password that is used to login to the Postgres database. The password can be set to anything the user wants, but it might be a good idea to use a password manager to generate a secure password and share it with other users that need access to hosted the database.\nThe WF_DATA_DIR is the directory where the data is stored. \n"",
    ""The Workflomics web interface is part of a larger infrastructure that includes a Postgres database, a Postgrest API, a RESTful APE service, etc. The architecture is presented in the figure below: \n"",
    ""For now, it is assumed you already have a Postgres database and Postgrest API set up and running. See [Deployment](#deployment) below for a docker compose configuration which starts all necessary services and initializes the database with the `.sql` scripts in the `database` folder. \n""
  ]
}"
https://github.com/eucp-project/storyboards,"[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5905676.svg)](https://doi.org/10.5281/zenodo.5905676) [![Research Software Directory Badge](https://img.shields.io/badge/rsd-storyboards-00a3e3.svg)](https://www.research-software.nl/software/storyboards) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=eucp-project_storyboards&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=eucp-project_storyboards) [![fair-software.eu](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8B-yellow)](https://fair-software.eu) # Storyboards This repository contains the source code for the [EUCP](https://www.eucp-project.eu/) [Storyboard website](https://eucp-project.github.io/storyboards/). The website has been built with [Nuxt](https://nuxtjs.org), using [nuxt-content](https://content.nuxtjs.org/) for authoring stories and [tailwindcss](https://tailwindcss.com/docs/installation) + [tailwind typography](https://tailwindcss.com/docs/typography-plugin) for styling. It is hosted on [GitHub pages](https://nuxtjs.org/deployments/github-pages/). ## Writing a story All stories are stored in the `static/stories` folder. Each story consists of a markdown file and a folder with some assets (images, etc.) belonging to the story. In addition to standard markdown, the `:::Chapter{}` directive is used to break the story into parts that can be displayed individually. An example story might look like this: `static/stories/example-story.md` ```markdown --- title: Example story author: Peter Kalverla et al., Netherlands eScience Center thumbnail: ""intro.png"" category: EUCP data and products trl: high id: 13 --- :::Chapter{headline=""Introduction"" image=""intro.png""} ## This is the first Chapter You can format text using markdown. The headline property will be used for the chapter navigation blocks. The image property will be used for the main display image of this chapter. Even though it's called 'image', you can also add standalone HTML pages, such as an exported mapbox file. The three colons below mark the end of the first chapter. ::: :::Chapter{headline=""Methods"" image=""concept.png""} ## This is the second Chapter and so on... ::: ``` This produces the following layout: ![Screenshot of example-story](example-story.png) The images should be stored in a directory with the same name as the story, but with a leading underscore, like so: ```bash - static/ - stories/ - example-story.md - _example-story/ - intro.png - concept.png ``` The frontmatter (title, author, etc.) will be used to show the story on the stories overview page. The ID and TRL (technical readiness level) properties are currently not used, but they are still here for legacy reasons. ## Adding your story to our collection If you want your story to be included on [eucp-project.github.io/storyboards](https://eucp-project.github.io/storyboards), you can make a pull request to this repository. We will review it and if everything is okay, we'll merge the story into the main branch. Continous deployment will then automatically update the site. If you want to add a story but are unsure about the github workflow, please don't hesitate to get in touch. We are happy to help. ## Serving the site locally You can also make a local build of the site, if you want to check that your story is formatted correctly before making a pull request. The following instructions are the default instructions from a new nuxt project. After cloning the repository: ```bash # install dependencies $ npm install # serve with hot reload at localhost:3000 $ npm run dev # build for production and launch server $ npm run build $ npm run start # generate static project $ npm run generate ``` For detailed explanation on how things work, check out the [documentation](https://nuxtjs.org). # Reusing the storyboards format for a different project The source code (excluding the stories content) is licenced under Apache 2. You can fork this repo and add your own content, modify the styling, and do whatever you want. We'd appreciate it if you inform us about your re-using the software. We're also happy to help setting it up for you. # Reusing the storyboard materials The content of the storyboards is licenced under CC-BY 4.0. Please don't hesitate to contact the storyboard authors if you're interested in their work. { ""name"": ""storyboards"", ""version"": ""1.0.0"", ""private"": true, ""scripts"": { ""dev"": ""nuxt"", ""build"": ""nuxt build"", ""generate"": ""nuxt generate"", ""start"": ""nuxt start"", ""lint:js"": ""eslint --ext \"".js,.vue\"" --ignore-path .gitignore ."", ""lint"": ""npm run lint:js"" }, ""dependencies"": { ""@nuxt/content"": ""^1.14.0"", ""core-js"": ""^3.15.1"", ""nuxt"": ""^2.15.7"", ""remark-directive"": ""^1.0.1"", ""remark-sectionize"": ""^1.1.1"" }, ""devDependencies"": { ""@babel/eslint-parser"": ""^7.14.7"", ""@nuxtjs/eslint-config"": ""^6.0.1"", ""@nuxtjs/eslint-module"": ""^3.0.2"", ""@nuxtjs/tailwindcss"": ""^4.2.0"", ""@tailwindcss/typography"": ""^0.4.1"", ""eslint"": ""^7.29.0"", ""eslint-plugin-nuxt"": ""^2.0.0"", ""eslint-plugin-vue"": ""^7.12.1"", ""postcss"": ""^8.3.5"" } } Apache Software License 2.0 Copyright (c) 2022, Netherlands eScience Center Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. This license file does not apply to the content of /static/stories. A separate license file is included in that directory. # YAML 1.2 # More than one affiliation: # https://github.com/citation-file-format/citation-file-format/issues/268 --- title: EUCP Storyboard viewer keywords: - climate - EUCP repository-code: ""https://github.com/eucp-project/storyboards"" license: ""Apache-2.0"" message: ""If you use this software, please cite it using these metadata."" cff-version: ""1.2.0"" authors: - family-names: Kalverla given-names: Peter orcid: ""https://orcid.org/0000-0002-5025-7862"" affiliation: ""Netherlands eScience Center"" - family-names: Alidoost given-names: Fakhereh orcid: ""https://orcid.org/0000-0001-8407-6472"" affiliation: ""Netherlands eScience Center"" - family-names: Liu given-names: Yang orcid: ""https://orcid.org/0000-0002-1966-8460"" affiliation: ""Netherlands eScience Center"" - family-names: Verhoeven given-names: Stefan orcid: ""https://orcid.org/0000-0002-5821-2060"" affiliation: ""Netherlands eScience Center"" - family-names: Vreede given-names: Barbara orcid: ""https://orcid.org/0000-0002-5023-4601"" affiliation: ""Netherlands eScience Center"" identifiers: - type: doi value: '10.5281/zenodo.5905676' description: The concept DOI of the work. ...","{
    ""softwareRequirements"": [
        ""@nuxt/content: ^1.14.0"",
        ""core-js: ^3.15.1"",
        ""nuxt: ^2.15.7"",
        ""remark-directive: ^1.0.1"",
        ""remark-sectionize: ^1.1.1"",
        ""babel-eslint-parser: ^7.14.7"",
        ""nuxt-eslint-config: ^6.0.1"",
        ""nuxt-eslint-module: ^3.0.2"",
        ""nuxt-tailwindcss: ^4.2.0"",
        ""tailwindcss-typography: ^0.4.1"",
        ""eslint: ^7.29.0"",
        ""eslint-plugin-nuxt: ^2.0.0"",
        ""eslint-plugin-vue: ^7.12.1"",
        ""postcss: ^8.3.5""
    ],
    ""buildInstructions"": ""npm install, npm run dev, npm run build, npm run start, npm run generate"",
    ""author"": [
        {
            ""name"": ""Peter Kalverla"",
            ""orcid"": ""https://orcid.org/0000-0002-5025-7862"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Fakhereh Alidoost"",
            ""orcid"": ""https://orcid.org/0000-0001-8407-6472"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Yang Liu"",
            ""orcid"": ""https://orcid.org/0000-0002-1966-8460"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Stefan Verhoeven"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Barbara Vreede"",
            ""orcid"": ""https://orcid.org/0000-0002-5023-4601"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.5905676"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""climate"",
        ""EUCP"",
        ""repository-code"",
        ""software"",
        ""climate-models"",
        ""storyboard"",
        ""nuxt"",
        ""tailwindcss"",
        ""typography"",
        ""metadata"",
        ""climate-data""
    ]
}","{
    ""softwareRequirements"": [
        ""@nuxt/content: ^1.14.0"",
        ""core-js: ^3.15.1"",
        ""nuxt: ^2.15.7"",
        ""remark-directive: ^1.0.1"",
        ""remark-sectionize: ^1.1.1"",
        ""babel-eslint-parser: ^7.14.7"",
        ""nuxt-eslint-config: ^6.0.1"",
        ""nuxt-eslint-module: ^3.0.2"",
        ""nuxt-tailwindcss: ^4.2.0"",
        ""tailwindcss-typography: ^0.4.1"",
        ""eslint: ^7.29.0"",
        ""eslint-plugin-nuxt: ^2.0.0"",
        ""eslint-plugin-vue: ^7.12.1"",
        ""postcss: ^8.3.5""
    ],
    ""buildInstructions"": ""npm install, npm run dev, npm run build, npm run start, npm run generate"",
    ""author"": [
        {
            ""name"": ""Peter Kalverla"",
            ""orcid"": ""https://orcid.org/0000-0002-5025-7862"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Fakhereh Alidoost"",
            ""orcid"": ""https://orcid.org/0000-0001-8407-6472"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Yang Liu"",
            ""orcid"": ""https://orcid.org/0000-0002-1966-8460"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Stefan Verhoeven"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""name"": ""Barbara Vreede"",
            ""orcid"": ""https://orcid.org/0000-0002-5023-4601"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": ""10.5281/zenodo.5905676"",
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""climate"",
        ""EUCP"",
        ""repository-code"",
        ""software"",
        ""climate-models"",
        ""storyboard"",
        ""nuxt"",
        ""tailwindcss"",
        ""typography"",
        ""metadata"",
        ""climate-data""
    ]
}","{
    ""softwareRequirements"": [
        ""@nuxt/content:^1.14.0"",
        ""core-js: ^3.15.1"",
        ""nuxt:^2.15.7"",
        ""remark-directive:^1.0.1"",
        ""remark-sectionize:^1.1.1""
    ],
    ""buildInstructions"": ""# install dependencies\n$ npm install\n\n# serve with hot reload at localhost:3000\n$ npm run dev\n\n# build for production and launch server\n$ npm run build\n$ npm run start\n\n# generate static project\n$ npm run generate"",
    ""author"": [
        {
            ""family-names"": ""Kalverla"",
            ""given-names"": ""Peter"",
            ""orcid"": ""https://orcid.org/0000-0002-5025-7862"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Alidoost"",
            ""given-names"": ""Fakhereh"",
            ""orcid"": ""https://orcid.org/0000-0001-8407-6472"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Liu"",
            ""given-names"": ""Yang"",
            ""orcid"": ""https://orcid.org/0000-0002-1966-8460"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Verhoeven"",
            ""given-names"": ""Stefan"",
            ""orcid"": ""https://orcid.org/0000-0002-5821-2060"",
            ""affiliation"": ""Netherlands eScience Center""
        },
        {
            ""family-names"": ""Vreede"",
            ""given-names"": ""Barbara"",
            ""orcid"": ""https://orcid.org/0000-0002-5023-4601"",
            ""affiliation"": ""Netherlands eScience Center""
        }
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [
        ""10.5281/zenodo.5905676""
    ],
    ""license"": ""Apache-2.0"",
    ""keywords"": [
        ""climate"",
        ""EUCP""
    ]
}","{
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/eucp-project""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""https://github.com/eucp-project/storyboards"",
      ""identifier"": ""10.5281/zenodo.5905676"",
      ""url"": ""https://doi.org/10.5281/zenodo.5905676"",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Kalverla"",
          ""givenName"": ""Peter"",
          ""@id"": ""https://orcid.org/0000-0002-5025-7862""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Alidoost"",
          ""givenName"": ""Fakhereh"",
          ""@id"": ""https://orcid.org/0000-0001-8407-6472""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Liu"",
          ""givenName"": ""Yang"",
          ""@id"": ""https://orcid.org/0000-0002-1966-8460""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Verhoeven"",
          ""givenName"": ""Stefan"",
          ""@id"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Vreede"",
          ""givenName"": ""Barbara"",
          ""@id"": ""https://orcid.org/0000-0002-5023-4601""
        }
      ],
      ""datePublished"": ""1966""
    }
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.5905676"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""identifier"": ""https://spdx.org/licenses/Apache-2.0""
  }
}","{
  ""@context"": ""https://w3id.org/codemeta/3.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""license"": {
    ""name"": ""Apache License 2.0"",
    ""identifier"": ""https://spdx.org/licenses/Apache-2.0""
  },
  ""codeRepository"": ""https://github.com/eucp-project/storyboards"",
  ""issueTracker"": ""https://github.com/eucp-project/storyboards/issues"",
  ""dateCreated"": ""2021-07-02"",
  ""dateModified"": ""2024-08-07"",
  ""downloadUrl"": ""https://github.com/eucp-project/storyboards/releases"",
  ""name"": ""storyboards"",
  ""programmingLanguage"": [
    ""HTML"",
    ""Vue"",
    ""JavaScript""
  ],
  ""releaseNotes"": ""## First release\r\n\r\nThis repository contains the source code for a storyboard website. Developed in the context of the European Climate Prediction system (EUCP) Horizon2020 project, it contains a collection of stories showcasing the outputs of this project. For information on how to (re-)use, see the [README](https://github.com/eucp-project/storyboards)."",
  ""softwareVersion"": ""v0.1.0"",
  ""datePublished"": ""2022-01-26"",
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/eucp-project""
    }
  ],
  ""referencePublication"": [
    {
      ""@type"": ""ScholarlyArticle"",
      ""name"": ""https://github.com/eucp-project/storyboards"",
      ""identifier"": ""10.5281/zenodo.5905676"",
      ""url"": ""https://doi.org/10.5281/zenodo.5905676"",
      ""author"": [
        {
          ""@type"": ""Person"",
          ""familyName"": ""Kalverla"",
          ""givenName"": ""Peter"",
          ""@id"": ""https://orcid.org/0000-0002-5025-7862""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Alidoost"",
          ""givenName"": ""Fakhereh"",
          ""@id"": ""https://orcid.org/0000-0001-8407-6472""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Liu"",
          ""givenName"": ""Yang"",
          ""@id"": ""https://orcid.org/0000-0002-1966-8460""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Verhoeven"",
          ""givenName"": ""Stefan"",
          ""@id"": ""https://orcid.org/0000-0002-5821-2060""
        },
        {
          ""@type"": ""Person"",
          ""familyName"": ""Vreede"",
          ""givenName"": ""Barbara"",
          ""@id"": ""https://orcid.org/0000-0002-5023-4601""
        }
      ],
      ""datePublished"": ""1966""
    }
  ],
  ""identifier"": ""https://doi.org/10.5281/zenodo.5905676"",
  ""readme"": ""https://raw.githubusercontent.com/eucp-project/storyboards/main/README.md"",
  ""description"": [
    ""Simple web application to show example use cases with some interactivity. (visitors via old url will be redirected to the website with new url)"",
    ""The source code (excluding the stories content) is licenced under Apache 2. You\ncan fork this repo and add your own content, modify the styling, and do whatever\nyou want. We'd appreciate it if you inform us about your re-using the software.\nWe're also happy to help setting it up for you.\n \n"",
    ""The content of the storyboards is licenced under CC-BY 4.0. Please don't\nhesitate to contact the storyboard authors if you're interested in their work.\n \n"",
    ""All stories are stored in the `static/stories` folder. Each story consists of a\nmarkdown file and a folder with some assets (images, etc.) belonging to the\nstory. In addition to standard markdown, the `:::Chapter{}` directive is used to\nbreak the story into parts that can be displayed individually. \n"",
    ""This repository contains the source code for the\n[EUCP](https://www.eucp-project.eu/) [Storyboard\nwebsite](https://eucp-project.github.io/storyboards/). \n""
  ]
}"
https://github.com/UtrechtUniversity/streetview-segmentation,"# Streetview segmentation Semantic image segmentation with Facebook's Mask2Former models. ## Description This script performs semantic segmentation on images, using models from Facebook's collection of Mask2Former models. Output consists of a CSV-file detailing, for each input image, the number of pixels in each semantic class in that image. Optionally, it can save a copy of each input image overlaid with the semantic segmentation. If the input images are 360° photo's, the script provides the possibility of tranforming them by projecting them onto a cube, resulting in six images per input image. This script is specifically designed to run on a computer without a GPU. Some of the underlying libraries require the presence of CUDA-drivers to run, even if the actual device is absent. As it can be problematic to install such drivers on a computer without an actual GPU, the program is packaged as Docker-container, based on an official NVIDIA-image, which comes with pre-installed drivers. Building and running the container requires the presence of [Docker engine](https://docs.docker.com/engine/install/). Note that the container is based on a Linux image (Ububtu 18.04); running it on a Windows computer may require extra configuration. ## Building the docker container Check out this repository, and to build, run: ```bash docker build -t my_tag:latest -f Dockerfile . ``` ## Getting model files Models have two parts: configuration files, and a file with weights. The configuration files are located in the Mask2Former repository, which is included in the container at build time. Weights files are not included in the container; they must be downloaded and made available to the script in the container. After selecting the appropriate model configuration files and downloading the corresponding file with model weights, the location of both needs to registered in a configuration file. For example: ```json { ""path_model_cfg"" : ""/configs/coco/panoptic-segmentation/swin/maskformer2_swin_large_IN21k_384_bs16_100ep.yaml"", ""path_model_weights"" : ""/data/model/maskformer2_swin_large_IN21k_384_bs16_100ep/model_final_f07440.pkl"" } ``` See below for more detail on the paths. Save this to a configuration file, which will be passed to the script using the `--config` parameter. Please note that the software has been tested with a limited number of models, specifically one from the Mapillary Vistas Panoptic Segmentation collection (model_id 49189528_0), one from the COCO Panoptic Segmentation collection (47429163_0), and one from the Cityscapes set (48318254_2). Generally, the Swin-L based models seem to work properly. ### Model configuration Go the [Mask2Model Model Zoo](https://github.com/facebookresearch/Mask2Former/blob/main/MODEL_ZOO.md) and pick a model to use. Find the path of the model's configuration file by clicking the 'Mask2Former' link for the appropriate model in the Model Zoo-table. This leads to the corresponding configuration file in the Mask2Former repository. Take the path of that file relative to the repository's root, as it would be when the repository were checked out. Example: the first model from the COCO Model Zoo, Panoptic Segmentation-table (model_id 47430278_4) links to [its configuration in the Mask2Former repo](https://github.com/facebookresearch/Mask2Former/blob/main/configs/coco/panoptic-segmentation/maskformer2_R50_bs16_50ep.yaml), the relative path of which, when checked out, would be: `Mask2Former/configs/coco/panoptic-segmentation/maskformer2_R50_bs16_50ep.yaml` This would be entered into the config file as: ```json ""path_model_cfg"" : ""/configs/coco/panoptic-segmentation/maskformer2_R50_bs16_50ep.yaml"", ``` #### External configuration If the configuration of a specific model is not present in the container (for example because it was added to the Model Zoo after the instance of the container was built), it can be made available to the script from a location outside of the container, much in the same way as a weights file (see next paragraph). Download the configuration file or files, make them available to the container via a volume mapping, and update the value for `path_model_cfg` accordingly. The script will first look for the absolute location as specified in `path_model_cfg`; if it doesn't exist, it will subsequently look in the Mask2Former repository. For example, if `path_model_cfg` is set to `/data/model/config/my_maskformer2.yaml` the script will first look in that literal path, which can be mapped to a folder on the host-machine. If that doesn't exist, it will look for `../Mask2Former/data/model/config/my_maskformer2.yaml` When using a external configuration, make sure to include *all* yaml-files required; model configurations are usually made up of several files, chained by \_BASE\_ statements. ### Weights-file A file with model weights needs to be downloaded and made available in the container. Click the appropriate 'model'-link in the Model Zoo-table to download the pickle-file containing the model. In the example above, this is `model_final_94dc52.pkl`. Place the file in a folder that will be mapped into the container, and edit the config file accordingly: ```json ""path_model_weights"" : ""/data/model/model_final_94dc52.pkl"", ``` Note that this should be the path as it is 'seen' from inside the container. ## Running a job Command to run a job: ```bash docker run -v /local/path/to/data:/data --rm -it my_tag:latest \ --config ""/data/model/config.json"" \ --non-recursive \ --input ""/data/images/in"" \ --output ""/data/images/out"" \ --transform360 \ --transform360exclude ""5"" \ --save-segmentation-images \ --suppress-warnings ``` The parameter `-v` maps a host directory to one inside the container, allowing the container access to files on the host computer. Mappings have the form of `<path on host>:<path in container>`; it's advised to always use '/data' for the second part. Parameters are as follows: + **config**: path to a JSON-file containing the model paths (mandatory; [example file](code/config.json.example)) + **input**: folder with images, or path to a single file (mandatory). By default, the folder is read recursively. + **output**: root folder to write output to (mandatory). + **non-recursive**: switch to force input folder to be read non-recursively (default: False). + **transform360**: order the program to transform the input photo's from 360° to six cube projections (default: False). If images should be processed _as is_, skip this flag. Transformed images are written to a subdirectory for each 360° image. + **transform360exclude**: comma-separated list of sides to exclude from the transformation. sides: 0 = left most, 1 = middle left, 2 = middle right, 3 = right most, 4 = top, 5 = bottom. For instance, `--transform360exclude ""4,5""` outputs four projected images, omitting the cube's top and bottom. + **save-segmentation-images**: whether the program has to save a copy of each image with the segmentation as overlay (default: False). Overlay images can be useful for checking results at a glance. They are saved in a subfolder with segmentations per model. Numerical output is always written to a CSV-file in the input folder. + **suppress-warnings**: suppress some of the warnings generated by the Mask2Former software (default: False). ### Known warnings Even when suppressing warnings, you may be presented with warnings when running a job. These can include + A warning about risks due to unsafe YAML-loading. As the only YAML-files loaded come from the Mask2Former repository, and are loaded inside a virtual environment, these can, under normal circumstances, be safely ignored. + A warning about a changed weight format from the Transformer Decoder. The weights are automatically converted to the correct format. ### Known issues Incidentally, the program has been observed to stop during the prediction phase, without any warnings or error messages. This is usually associated with a sharp increase in memory use, and can be solved by reducing the input images' size, or by using a different prediction model. ## Used libraries + [Mask2Former](https://github.com/facebookresearch/Mask2Former) + [detectron2](https://github.com/facebookresearch/detectron2) + [three60cube](https://pypi.org/project/three60cube/) ## A note on package versions Programs that work with CUDA can be sensitive to changes in versions of used packages. Even a change in the minor version of a package can sometimes cause serious problems. To avoid such problems, versions have been explicitly pinned to versions that have proved to work well together. However, after cloning the Mak2Former repository, [its requirements are installed](/UtrechtUniversity/streetview-segmentation/blob/main/Dockerfile#L39), none of which are pinned ([see requirements.txt](https://github.com/facebookresearch/Mask2Former/blob/main/requirements.txt)). If this causes problems in the future, try uninstalling the packages and reinstalling them to the pinned versions listed below. + cython==0.29.30 + scipy==1.8.1 + shapely==1.8.2 + timm==0.6.5 + h5py==3.7.0 + submitit==1.4.4 + scikit-image==0.19.3","{
    ""softwareRequirements"": [
        ""cython: ==0.29.30"",
        ""scipy: ==1.8.1"",
        ""shapely: ==1.8.2"",
        ""timm: ==0.6.5"",
        ""h5py: ==3.7.0"",
        ""submitit: ==1.4.4"",
        ""scikit-image: ==0.19.3""
    ],
    ""buildInstructions"": ""1. Clone the repository. 2. Build the docker container: docker build -t my_tag:latest -f Dockerfile . 3. Run the container: docker run -v /local/path/to/data:/data --rm -it my_tag:latest --config \""/data/model/config.json\"" --non-recursive --input \""/data/images/in\"" --output \""/data/images/out\"" --transform360 --transform360exclude \""5\"" --save-segmentation-images --suppress-warnings"",
    ""author"": [],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": """",
    ""license"": """",
    ""keywords"": [
        ""Semantic Image Segmentation"",
        ""Mask2Former"",
        ""Facebook"",
        ""Detectron2"",
        ""Three60Cube"",
        ""Docker"",
        ""COCO"",
        ""Mapillary Vistas"",
        ""Cityscapes"",
        ""360° Photo"",
        ""Cube Projections"",
        ""Image Overlay"",
        ""YAML"",
        ""Transformer Decoder"",
        ""PyTorch"",
        ""Python"",
        ""Cython"",
        ""Scipy"",
        ""Shapely"",
        ""Timm"",
        ""H5Py"",
        ""Submitit"",
        ""Scikit-Image""
    ]
}","{
    ""softwareRequirements"": [
        ""cython: ==0.29.30"",
        ""scipy: ==1.8.1"",
        ""shapely: ==1.8.2"",
        ""timm: ==0.6.5"",
        ""h5py: ==3.7.0"",
        ""submitit: ==1.4.4"",
        ""scikit-image: ==0.19.3""
    ],
    ""buildInstructions"": ""1. Clone the repository. 2. Build the docker container: docker build -t my_tag:latest -f Dockerfile . 3. Run the container: docker run -v /local/path/to/data:/data --rm -it my_tag:latest --config \""/data/model/config.json\"" --non-recursive --input \""/data/images/in\"" --output \""/data/images/out\"" --transform360 --transform360exclude \""5\"" --save-segmentation-images --suppress-warnings"",
    ""author"": [],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": """",
    ""license"": """",
    ""keywords"": [
        ""Semantic Image Segmentation"",
        ""Mask2Former"",
        ""Facebook"",
        ""Detectron2"",
        ""Three60Cube"",
        ""Docker"",
        ""COCO"",
        ""Mapillary Vistas"",
        ""Cityscapes"",
        ""360° Photo"",
        ""Cube Projections"",
        ""Image Overlay"",
        ""YAML"",
        ""Transformer Decoder"",
        ""PyTorch"",
        ""Python"",
        ""Cython"",
        ""Scipy"",
        ""Shapely"",
        ""Timm"",
        ""H5Py"",
        ""Submitit"",
        ""Scikit-Image""
    ]
}","{
    ""softwareRequirements"": [
        ""cython:0.29.30"",
        ""scipy:1.8.1"",
        ""shapely:1.8.2"",
        ""timm:0.6.5"",
        ""h5py:3.7.0"",
        ""submitit:1.4.4"",
        ""scikit-image:0.19.3""
    ],
    ""buildInstructions"": ""Check out this repository, and to build, run:\n\ndocker build -t my_tag:latest -f Dockerfile ."",
    ""author"": [
        ""UNIVERSITY""
    ],
    ""contributor"": [],
    ""funder"": """",
    ""identifier"": [],
    ""license"": """",
    ""keywords"": []
}","{
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/UtrechtUniversity""
    }
  ],
}","{
  ""@context"": ""https://w3id.org/codemeta/3.0"",
  ""@type"": ""SoftwareSourceCode"",
  ""codeRepository"": ""https://github.com/UtrechtUniversity/streetview-segmentation"",
  ""issueTracker"": ""https://github.com/UtrechtUniversity/streetview-segmentation/issues"",
  ""dateCreated"": ""2022-07-21"",
  ""dateModified"": ""2024-05-03"",
  ""downloadUrl"": ""https://github.com/UtrechtUniversity/streetview-segmentation/releases"",
  ""name"": ""streetview-segmentation"",
  ""programmingLanguage"": [
    ""Python"",
    ""Dockerfile""
  ],
  ""author"": [
    {
      ""@type"": ""Organization"",
      ""@id"": ""https://github.com/UtrechtUniversity""
    }
  ],
  ""readme"": ""https://raw.githubusercontent.com/UtrechtUniversity/streetview-segmentation/main/README.md"",
  ""description"": [
    ""Project to perform semantic segmentation on (panoramic) street photo's"",
    ""This script performs semantic segmentation on images, using models from Facebook's collection of Mask2Former\nmodels. Output consists of a CSV-file detailing, for each input image, the number of pixels in each semantic\nclass in that image. Optionally, it can save a copy of each input image overlaid with the semantic segmentation.\nIf the input images are 360° photo's, the script provides the possibility of tranforming them by projecting them\nonto a cube, resulting in six images per input image.\n\nThis script is specifically designed to run on a computer without a GPU. Some of the underlying libraries\nrequire the presence of CUDA-drivers to run, even if the actual device is absent. As it can be problematic to\ninstall such drivers on a computer without an actual GPU, the program is packaged as Docker-container, based on\nan official NVIDIA-image, which comes with pre-installed drivers. Building and running the container requires\nthe presence of [Docker engine](https://docs.docker.com/engine/install/). Note that the container is based on a\nLinux image (Ububtu 18.04); running it on a Windows computer may require extra configuration.\n"",
    ""Programs that work with CUDA can be sensitive to changes in versions of used packages. Even a change in the minor version of a package can sometimes cause serious problems. To avoid such problems, versions have been explicitly pinned to versions that have proved to work well together. However, after cloning the Mak2Former repository, [its requirements are installed](/UtrechtUniversity/streetview-segmentation/blob/main/Dockerfile#L39), none of which are pinned ([see requirements.txt](https://github.com/facebookresearch/Mask2Former/blob/main/requirements.txt)). If this causes problems in the future, try uninstalling the packages and reinstalling them to the pinned versions listed below.\n+ cython==0.29.30\n+ scipy==1.8.1\n+ shapely==1.8.2\n+ timm==0.6.5\n+ h5py==3.7.0\n+ submitit==1.4.4\n+ scikit-image==0.19.3\n \n""
  ]
}"
